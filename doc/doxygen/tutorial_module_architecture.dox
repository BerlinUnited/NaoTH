/*! \page tutorials_module_architecture Module Framework

\tableofcontents

The module framework is based on the principle of a blackboard architercure.
It consists of following main compinents:
- BlackBoard
- Module
- Representation
- Module Manager

\dotfile blackboard.dot Blackboard Architercure

\section creating_representation Creating a Representation


\section creating_module Creating a Simple Module

@code

 #include "RepresentationA.h"
 #include "RepresentationB.h"

  BEGIN_DECLARE_MODULE(ModuleA)
    REQUIRE(RepresentationA)
    PROVIDE(RepresentationB)
  END_DECLARE_MODULE(ModuleA)


  class ModuleA: private ModuleABase
  {

  public:

    // a default constructor is required,
    // it is used to create an instance of the module
    ModuleA()
    {
    }

    // the execute method is called to run the module
    // put your functionality here
    virtual void execute()
    {
      // do something with RepresentationA and RepresentationB:
      // int x = getRepresentationA().x;
      // getRepresentationB().y = x + 1;
    }

  };//end class ModuleA

@endcode


\subsection module_manager Using the ModuleManager

*/