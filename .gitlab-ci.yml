# TODO add a lot more documentation
stages:
 - test
 - build
 - deploy

default:
  image: $TOOLCHAIN_DOCKER_IMAGE

variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_IMAGE: scm.cms.hu-berlin.de:4567/berlinunited/tools/linuxtoolchain

# Note that reopen MR do not trigger pipeline execution: https://gitlab.com/gitlab-org/gitlab/-/issues/31116

cppcheck:
  stage: test
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
  - mkdir -p $CI_COMMIT_REF_NAME
  - cppcheck -j 4 --enable=all --inconclusive --force --xml --xml-version=2 . 2> cppcheck-result.xml
  - cppcheck-htmlreport --file=cppcheck-result.xml --report-dir=$CI_COMMIT_REF_NAME --source-dir=.
  - python3 -m pip install -U cppcheck_codequality
  - cppcheck-codequality --input-file=cppcheck-result.xml --output-file=cppcheck.json
  artifacts:
    paths: 
      - $CI_COMMIT_REF_NAME
    reports:
      codequality: cppcheck.json

compile_nao_gcc:
  stage: build
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
  - cd NaoTHSoccer/Make
  - ./compileGame.sh -j 4
  - ./compileLoLaAdaptor.sh -j 4
  artifacts:
    expire_in: 4 weeks
    name: "nao_gcc"
    paths:
      - NaoTHSoccer/dist/

compile_local_gcc:
  stage: build
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
  - cd NaoTHSoccer/Make
  - premake5 gmake2 --protoc
  - cd ../build/gmake2
  - make all -j 4
  artifacts:
    expire_in: 4 weeks
    name: "local_gcc"
    paths:
      - NaoTHSoccer/dist/

compile_nao_clang:
  stage: build
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
  - cd NaoTHSoccer/Make
  - echo -en "if PLATFORM == \"Nao\" then\n    _OPTIONS[\"crosscompiler\"] = \"clang\"\nend\n" > projectconfig.user.lua
  - ./compileGame.sh -j 4
  - ./compileLoLaAdaptor.sh -j 4
  artifacts:
    expire_in: 4 weeks
    name: "nao_clang"
    paths:
      - NaoTHSoccer/dist/

# this job must be named pages
pages:
  stage: deploy
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
    # handle generation of the html folder structure for cppcheck output
    - ./Utils/CI-Tools/pages.sh
    # generate a index.html listing all the subfolders
    - cd public/ && tree -L 1 -H . -o index.html && cd ..
  artifacts:
    paths:
      - public

publish_naoth_docker:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  dependencies:
    - compile_nao_gcc
    # you can either export the gcc or the clang binaries for now
    #- compile_local_gcc
    - compile_nao_clang  
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: $CI_COMMIT_BRANCH == "develop"
  script:
    # getting docker-tag friendly version of the current branch name: replace / with underscore
    - branchname=`echo "${CI_COMMIT_REF_NAME}" | sed "s/\//_/g"`
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN scm.cms.hu-berlin.de:4567
    - docker pull $TOOLCHAIN_DOCKER_IMAGE
    - docker create --name temp_container $TOOLCHAIN_DOCKER_IMAGE
    - docker cp NaoTHSoccer/dist temp_container:/binaries/
    - docker cp ./ temp_container:/naoth/repo/
    - docker commit temp_container scm.cms.hu-berlin.de:4567/berlinunited/naoth-2020:$branchname
    - docker push scm.cms.hu-berlin.de:4567/berlinunited/naoth-2020:$branchname

.publish_naoth_python_gitlab:
  # run the publish command if the PUBLISH_NAOTH flag is set or the commit changes the develop with changes in the naoth package
  stage: deploy
  rules:
    - if: '$PUBLISH_NAOTH'
    - if: $CI_COMMIT_BRANCH == "develop"
      changes:
      - Utils/py/naoth/**/*
  dependencies: []  # don't download any artifacts to this job for speed
  script:
  - cd NaoTHSoccer/Make
  - premake5 gmake2 --protoc
  - cd ../../Utils/py/naoth
  - ./package_naoth.sh

publish_naoth_python_pypi:
  # run the publish command if the PUBLISH_NAOTH flag is set or the commit changes the develop with changes in the naoth package
  stage: deploy
  rules:
    - if: '$PUBLISH_NAOTH'
    - if: $CI_COMMIT_BRANCH == "develop"
      changes:
      - Utils/py/naoth/**/*
  dependencies: []  # don't download any artifacts to this job for speed
  script:
  - cd NaoTHSoccer/Make
  - premake5 gmake2 --protoc
  - cd ../../Utils/py/naoth
  - ./package_naoth_pypi.sh
