#!/bin/bash

PID="/tmp/cognition.pid"

function start_function() {
    if [ -f "$PID" ]; then
      OLDPID=`cat $PID`
      echo "old pid is $OLDPID"
      kill -0 $OLDPID
      if [ "$?" -eq 0 ]; then
        echo "NaoTH cognition already started, use stop first"
        exit 1
      else
        echo "removing stalled $PID"
        rm "$PID"
      fi
    fi

    echo "removing old log files"
    find -L /tmp -maxdepth 1 -name "*.log" -exec rm -rf {} \;

    echo "starting naoth cognition process"
    cd /home/nao/naoqi/

    if [ nao = `whoami` ]; then
        nohup /etc/init.d/cognition-common >/dev/null 2>&1 &
    else
        su -c 'nohup /etc/init.d/cognition-common >/dev/null 2>&1 &' nao
    fi
}

function stop_function() {
    echo "stopping naoth cognition processes"
    
    # first try to kill naoth based on the PID file
    if [ -f "$PID" ]; then
      OLDPID=`cat $PID`
      kill $OLDPID

      # wait for the process to stop
      counter=0
      while kill -0 $OLDPID 2> /dev/null
      do
          sleep 1;
          printf "try %s/30\n" "$counter"
          
          # wait for maximal 30 seconds
          ((counter++))
          if [ $counter -gt 30 ]; then
            break
          fi
      done
      printf "\n"
      
      # try to remove PID-file
      rm $PID
    fi

    # FALLBACK
    #... try to stop all running naoth processes (and exclude this script!)
    PIDS=`pidof -x -o %PPID naoth`
    if [[ ! -z $PIDS ]]; then
      kill $PIDS  # send TERM signal
      sleep 5
      # if there are still running naoth instances, kill them "hard"
      PIDS=`pidof -x -o %PPID naoth`
      if [[ ! -z $PIDS ]]; then
        kill -9 $PIDS  # send KILL signal
      fi
    fi
}

case "$1" in
  start)
    start_function
    ;;
  stop)
    stop_function
    ;;
  restart)
    stop_function
    sleep 5
    start_function
    ;;
  *)
    echo "Usage: /etc/init.d/naoth {start|stop|restart}"
    exit 1
    ;;

esac

exit 0
