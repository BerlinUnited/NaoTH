/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package naoscp.components;

import java.awt.Color;
import java.util.logging.Handler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Heinrich Mellmann
 */
public class LogTextPanel extends javax.swing.JPanel {

    /**
     * Creates new form LogTextPanel
     */
    public LogTextPanel() {
        initComponents();
        
        StyledDocument doc = outputPanel.getStyledDocument();
        
        Style defaultStyle = StyleContext.getDefaultStyleContext().getStyle(StyleContext.DEFAULT_STYLE);
        
        // set the font type for all styles
        StyleConstants.setFontFamily(defaultStyle, "monospaced"); // "SansSerif"
        
        Style s_fine = doc.addStyle(Level.FINE.getName(), defaultStyle);
        StyleConstants.setForeground(s_fine, new Color(64,64,64));
        
        Style s_info = doc.addStyle(Level.INFO.getName(), defaultStyle);
        StyleConstants.setForeground(s_info, new Color(0,128,0));
        StyleConstants.setBold(s_info, true);
        
        Style s_warn = doc.addStyle(Level.WARNING.getName(), defaultStyle);
        StyleConstants.setForeground(s_warn, new Color(200,128,0));
        StyleConstants.setBold(s_warn, true);
        
        Style s_error = doc.addStyle(Level.SEVERE.getName(), defaultStyle);
        StyleConstants.setForeground(s_error, new Color(200,0,0));
        StyleConstants.setBold(s_error, true);
    }

    public void clear() {
        outputPanel.setText("");
    }
    
    public Handler getLogHandler() {
        return new Handler() {

            @Override
            public void publish(LogRecord lr) {
                StyledDocument doc = outputPanel.getStyledDocument();
                
                try {
                    String levelName = lr.getLevel().getName();
                    Style s = doc.getStyle(levelName);
                    doc.insertString(doc.getLength(), lr.getMessage() + "\n", s);
                    
                    outputPanel.setCaretPosition(doc.getLength());
                } catch (BadLocationException ex) {
                    
                }
            }

            @Override
            public void flush() {
                
            }

            @Override
            public void close() throws SecurityException {
                
            }
        };
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPanel = new javax.swing.JScrollPane();
        outputPanel = new javax.swing.JTextPane();

        setLayout(new java.awt.BorderLayout());

        outputPanel.setEditable(false);
        scrollPanel.setViewportView(outputPanel);

        add(scrollPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane outputPanel;
    private javax.swing.JScrollPane scrollPanel;
    // End of variables declaration//GEN-END:variables
}
