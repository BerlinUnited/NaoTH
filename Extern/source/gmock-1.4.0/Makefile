# GNU Make project makefile autogenerated by Premake
ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release
  TARGETDIR  = ../../native
  TARGET     = $(TARGETDIR)/libgmock.a
  DEFINES   += 
  INCLUDES  += -Iinclude -I. -I../gtest-1.4.0/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s
  LIBS      += 
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),releasenao)
  OBJDIR     = obj/Nao
  TARGETDIR  = ../../nao
  TARGET     = $(TARGETDIR)/libgmock.a
  DEFINES   += 
  INCLUDES  += -Iinclude -I. -I../gtest-1.4.0/include
  CPPFLAGS  += -MMD $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -m32 -march=geode -m3dnow --sysroot=/opt/aldebaran/info/crosscompile/staging/geode-linux/ -I/opt/aldebaran/info/crosscompile/staging/geode-linux//usr/include/ -I/opt/aldebaran/info/crosscompile/staging/geode-linux//i586-linux/include/ -I/opt/aldebaran/info/crosscompile/cross/geode//i586-linux/include/c++/ -I/opt/aldebaran/info/crosscompile/cross/geode//i586-linux/include/c++/i586-linux/ -L/opt/aldebaran/info/crosscompile/cross/geode//i586-linux/lib/
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -m32 -march=geode -m3dnow --sysroot=/opt/aldebaran/info/crosscompile/staging/geode-linux/ -I/opt/aldebaran/info/crosscompile/staging/geode-linux//usr/include/ -I/opt/aldebaran/info/crosscompile/staging/geode-linux//i586-linux/include/ -I/opt/aldebaran/info/crosscompile/cross/geode//i586-linux/include/c++/ -I/opt/aldebaran/info/crosscompile/cross/geode//i586-linux/include/c++/i586-linux/ -L/opt/aldebaran/info/crosscompile/cross/geode//i586-linux/lib/
  LIBS      += 
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR     = obj/x32
  TARGETDIR  = ../../x32
  TARGET     = $(TARGETDIR)/libgmock.a
  DEFINES   += 
  INCLUDES  += -Iinclude -I. -I../gtest-1.4.0/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -m32
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -m32 -L/usr/lib32
  LIBS      += 
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/gmock-all.o \
	$(OBJDIR)/gmock-internal-utils.o \
	$(OBJDIR)/gmock-printers.o \
	$(OBJDIR)/gmock.o \
	$(OBJDIR)/gmock-cardinalities.o \
	$(OBJDIR)/gmock-matchers.o \
	$(OBJDIR)/gmock-spec-builders.o \
	$(OBJDIR)/gmock_main.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking gmock
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning gmock
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o $@ -c $<
endif

$(OBJDIR)/gmock-all.o: src/gmock-all.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/gmock-internal-utils.o: src/gmock-internal-utils.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/gmock-printers.o: src/gmock-printers.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/gmock.o: src/gmock.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/gmock-cardinalities.o: src/gmock-cardinalities.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/gmock-matchers.o: src/gmock-matchers.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/gmock-spec-builders.o: src/gmock-spec-builders.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<
$(OBJDIR)/gmock_main.o: src/gmock_main.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o $@ -c $<

-include $(OBJECTS:%.o=%.d)
