// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RobotPose.proto

package de.naoth.rc.core.messages;

public final class RobotPoseOuterClass {
  private RobotPoseOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RobotPoseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.RobotPose)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .naothmessages.Pose2D pose = 1;</code>
     */
    boolean hasPose();
    /**
     * <code>required .naothmessages.Pose2D pose = 1;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.Pose2D getPose();
    /**
     * <code>required .naothmessages.Pose2D pose = 1;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.Pose2DOrBuilder getPoseOrBuilder();

    /**
     * <code>optional bool isValid = 2;</code>
     */
    boolean hasIsValid();
    /**
     * <code>optional bool isValid = 2;</code>
     */
    boolean getIsValid();

    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
     */
    boolean hasPrincipleAxisMajor();
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getPrincipleAxisMajor();
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getPrincipleAxisMajorOrBuilder();

    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
     */
    boolean hasPrincipleAxisMinor();
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getPrincipleAxisMinor();
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getPrincipleAxisMinorOrBuilder();
  }
  /**
   * Protobuf type {@code naothmessages.RobotPose}
   */
  public  static final class RobotPose extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.RobotPose)
      RobotPoseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RobotPose.newBuilder() to construct.
    private RobotPose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RobotPose() {
      isValid_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RobotPose(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              de.naoth.rc.core.messages.CommonTypes.Pose2D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = pose_.toBuilder();
              }
              pose_ = input.readMessage(de.naoth.rc.core.messages.CommonTypes.Pose2D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pose_);
                pose_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isValid_ = input.readBool();
              break;
            }
            case 26: {
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = principleAxisMajor_.toBuilder();
              }
              principleAxisMajor_ = input.readMessage(de.naoth.rc.core.messages.CommonTypes.DoubleVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(principleAxisMajor_);
                principleAxisMajor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = principleAxisMinor_.toBuilder();
              }
              principleAxisMinor_ = input.readMessage(de.naoth.rc.core.messages.CommonTypes.DoubleVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(principleAxisMinor_);
                principleAxisMinor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.RobotPoseOuterClass.internal_static_naothmessages_RobotPose_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.RobotPoseOuterClass.internal_static_naothmessages_RobotPose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose.class, de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose.Builder.class);
    }

    private int bitField0_;
    public static final int POSE_FIELD_NUMBER = 1;
    private de.naoth.rc.core.messages.CommonTypes.Pose2D pose_;
    /**
     * <code>required .naothmessages.Pose2D pose = 1;</code>
     */
    public boolean hasPose() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .naothmessages.Pose2D pose = 1;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.Pose2D getPose() {
      return pose_ == null ? de.naoth.rc.core.messages.CommonTypes.Pose2D.getDefaultInstance() : pose_;
    }
    /**
     * <code>required .naothmessages.Pose2D pose = 1;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.Pose2DOrBuilder getPoseOrBuilder() {
      return pose_ == null ? de.naoth.rc.core.messages.CommonTypes.Pose2D.getDefaultInstance() : pose_;
    }

    public static final int ISVALID_FIELD_NUMBER = 2;
    private boolean isValid_;
    /**
     * <code>optional bool isValid = 2;</code>
     */
    public boolean hasIsValid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool isValid = 2;</code>
     */
    public boolean getIsValid() {
      return isValid_;
    }

    public static final int PRINCIPLEAXISMAJOR_FIELD_NUMBER = 3;
    private de.naoth.rc.core.messages.CommonTypes.DoubleVector2 principleAxisMajor_;
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
     */
    public boolean hasPrincipleAxisMajor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getPrincipleAxisMajor() {
      return principleAxisMajor_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : principleAxisMajor_;
    }
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getPrincipleAxisMajorOrBuilder() {
      return principleAxisMajor_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : principleAxisMajor_;
    }

    public static final int PRINCIPLEAXISMINOR_FIELD_NUMBER = 4;
    private de.naoth.rc.core.messages.CommonTypes.DoubleVector2 principleAxisMinor_;
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
     */
    public boolean hasPrincipleAxisMinor() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getPrincipleAxisMinor() {
      return principleAxisMinor_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : principleAxisMinor_;
    }
    /**
     * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getPrincipleAxisMinorOrBuilder() {
      return principleAxisMinor_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : principleAxisMinor_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPose()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPose().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasPrincipleAxisMajor()) {
        if (!getPrincipleAxisMajor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPrincipleAxisMinor()) {
        if (!getPrincipleAxisMinor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getPose());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isValid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getPrincipleAxisMajor());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getPrincipleAxisMinor());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPose());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isValid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPrincipleAxisMajor());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPrincipleAxisMinor());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose other = (de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose) obj;

      boolean result = true;
      result = result && (hasPose() == other.hasPose());
      if (hasPose()) {
        result = result && getPose()
            .equals(other.getPose());
      }
      result = result && (hasIsValid() == other.hasIsValid());
      if (hasIsValid()) {
        result = result && (getIsValid()
            == other.getIsValid());
      }
      result = result && (hasPrincipleAxisMajor() == other.hasPrincipleAxisMajor());
      if (hasPrincipleAxisMajor()) {
        result = result && getPrincipleAxisMajor()
            .equals(other.getPrincipleAxisMajor());
      }
      result = result && (hasPrincipleAxisMinor() == other.hasPrincipleAxisMinor());
      if (hasPrincipleAxisMinor()) {
        result = result && getPrincipleAxisMinor()
            .equals(other.getPrincipleAxisMinor());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPose()) {
        hash = (37 * hash) + POSE_FIELD_NUMBER;
        hash = (53 * hash) + getPose().hashCode();
      }
      if (hasIsValid()) {
        hash = (37 * hash) + ISVALID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsValid());
      }
      if (hasPrincipleAxisMajor()) {
        hash = (37 * hash) + PRINCIPLEAXISMAJOR_FIELD_NUMBER;
        hash = (53 * hash) + getPrincipleAxisMajor().hashCode();
      }
      if (hasPrincipleAxisMinor()) {
        hash = (37 * hash) + PRINCIPLEAXISMINOR_FIELD_NUMBER;
        hash = (53 * hash) + getPrincipleAxisMinor().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.RobotPose}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.RobotPose)
        de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPoseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.RobotPoseOuterClass.internal_static_naothmessages_RobotPose_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.RobotPoseOuterClass.internal_static_naothmessages_RobotPose_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose.class, de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPoseFieldBuilder();
          getPrincipleAxisMajorFieldBuilder();
          getPrincipleAxisMinorFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (poseBuilder_ == null) {
          pose_ = null;
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        isValid_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (principleAxisMajorBuilder_ == null) {
          principleAxisMajor_ = null;
        } else {
          principleAxisMajorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (principleAxisMinorBuilder_ == null) {
          principleAxisMinor_ = null;
        } else {
          principleAxisMinorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.RobotPoseOuterClass.internal_static_naothmessages_RobotPose_descriptor;
      }

      public de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose build() {
        de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose buildPartial() {
        de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose result = new de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (poseBuilder_ == null) {
          result.pose_ = pose_;
        } else {
          result.pose_ = poseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isValid_ = isValid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (principleAxisMajorBuilder_ == null) {
          result.principleAxisMajor_ = principleAxisMajor_;
        } else {
          result.principleAxisMajor_ = principleAxisMajorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (principleAxisMinorBuilder_ == null) {
          result.principleAxisMinor_ = principleAxisMinor_;
        } else {
          result.principleAxisMinor_ = principleAxisMinorBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose) {
          return mergeFrom((de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose other) {
        if (other == de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose.getDefaultInstance()) return this;
        if (other.hasPose()) {
          mergePose(other.getPose());
        }
        if (other.hasIsValid()) {
          setIsValid(other.getIsValid());
        }
        if (other.hasPrincipleAxisMajor()) {
          mergePrincipleAxisMajor(other.getPrincipleAxisMajor());
        }
        if (other.hasPrincipleAxisMinor()) {
          mergePrincipleAxisMinor(other.getPrincipleAxisMinor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPose()) {
          return false;
        }
        if (!getPose().isInitialized()) {
          return false;
        }
        if (hasPrincipleAxisMajor()) {
          if (!getPrincipleAxisMajor().isInitialized()) {
            return false;
          }
        }
        if (hasPrincipleAxisMinor()) {
          if (!getPrincipleAxisMinor().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private de.naoth.rc.core.messages.CommonTypes.Pose2D pose_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.Pose2D, de.naoth.rc.core.messages.CommonTypes.Pose2D.Builder, de.naoth.rc.core.messages.CommonTypes.Pose2DOrBuilder> poseBuilder_;
      /**
       * <code>required .naothmessages.Pose2D pose = 1;</code>
       */
      public boolean hasPose() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .naothmessages.Pose2D pose = 1;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.Pose2D getPose() {
        if (poseBuilder_ == null) {
          return pose_ == null ? de.naoth.rc.core.messages.CommonTypes.Pose2D.getDefaultInstance() : pose_;
        } else {
          return poseBuilder_.getMessage();
        }
      }
      /**
       * <code>required .naothmessages.Pose2D pose = 1;</code>
       */
      public Builder setPose(de.naoth.rc.core.messages.CommonTypes.Pose2D value) {
        if (poseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pose_ = value;
          onChanged();
        } else {
          poseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .naothmessages.Pose2D pose = 1;</code>
       */
      public Builder setPose(
          de.naoth.rc.core.messages.CommonTypes.Pose2D.Builder builderForValue) {
        if (poseBuilder_ == null) {
          pose_ = builderForValue.build();
          onChanged();
        } else {
          poseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .naothmessages.Pose2D pose = 1;</code>
       */
      public Builder mergePose(de.naoth.rc.core.messages.CommonTypes.Pose2D value) {
        if (poseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              pose_ != null &&
              pose_ != de.naoth.rc.core.messages.CommonTypes.Pose2D.getDefaultInstance()) {
            pose_ =
              de.naoth.rc.core.messages.CommonTypes.Pose2D.newBuilder(pose_).mergeFrom(value).buildPartial();
          } else {
            pose_ = value;
          }
          onChanged();
        } else {
          poseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .naothmessages.Pose2D pose = 1;</code>
       */
      public Builder clearPose() {
        if (poseBuilder_ == null) {
          pose_ = null;
          onChanged();
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .naothmessages.Pose2D pose = 1;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.Pose2D.Builder getPoseBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPoseFieldBuilder().getBuilder();
      }
      /**
       * <code>required .naothmessages.Pose2D pose = 1;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.Pose2DOrBuilder getPoseOrBuilder() {
        if (poseBuilder_ != null) {
          return poseBuilder_.getMessageOrBuilder();
        } else {
          return pose_ == null ?
              de.naoth.rc.core.messages.CommonTypes.Pose2D.getDefaultInstance() : pose_;
        }
      }
      /**
       * <code>required .naothmessages.Pose2D pose = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.Pose2D, de.naoth.rc.core.messages.CommonTypes.Pose2D.Builder, de.naoth.rc.core.messages.CommonTypes.Pose2DOrBuilder> 
          getPoseFieldBuilder() {
        if (poseBuilder_ == null) {
          poseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.Pose2D, de.naoth.rc.core.messages.CommonTypes.Pose2D.Builder, de.naoth.rc.core.messages.CommonTypes.Pose2DOrBuilder>(
                  getPose(),
                  getParentForChildren(),
                  isClean());
          pose_ = null;
        }
        return poseBuilder_;
      }

      private boolean isValid_ ;
      /**
       * <code>optional bool isValid = 2;</code>
       */
      public boolean hasIsValid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool isValid = 2;</code>
       */
      public boolean getIsValid() {
        return isValid_;
      }
      /**
       * <code>optional bool isValid = 2;</code>
       */
      public Builder setIsValid(boolean value) {
        bitField0_ |= 0x00000002;
        isValid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isValid = 2;</code>
       */
      public Builder clearIsValid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isValid_ = false;
        onChanged();
        return this;
      }

      private de.naoth.rc.core.messages.CommonTypes.DoubleVector2 principleAxisMajor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> principleAxisMajorBuilder_;
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
       */
      public boolean hasPrincipleAxisMajor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getPrincipleAxisMajor() {
        if (principleAxisMajorBuilder_ == null) {
          return principleAxisMajor_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : principleAxisMajor_;
        } else {
          return principleAxisMajorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
       */
      public Builder setPrincipleAxisMajor(de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (principleAxisMajorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          principleAxisMajor_ = value;
          onChanged();
        } else {
          principleAxisMajorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
       */
      public Builder setPrincipleAxisMajor(
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (principleAxisMajorBuilder_ == null) {
          principleAxisMajor_ = builderForValue.build();
          onChanged();
        } else {
          principleAxisMajorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
       */
      public Builder mergePrincipleAxisMajor(de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (principleAxisMajorBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              principleAxisMajor_ != null &&
              principleAxisMajor_ != de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance()) {
            principleAxisMajor_ =
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2.newBuilder(principleAxisMajor_).mergeFrom(value).buildPartial();
          } else {
            principleAxisMajor_ = value;
          }
          onChanged();
        } else {
          principleAxisMajorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
       */
      public Builder clearPrincipleAxisMajor() {
        if (principleAxisMajorBuilder_ == null) {
          principleAxisMajor_ = null;
          onChanged();
        } else {
          principleAxisMajorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder getPrincipleAxisMajorBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPrincipleAxisMajorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getPrincipleAxisMajorOrBuilder() {
        if (principleAxisMajorBuilder_ != null) {
          return principleAxisMajorBuilder_.getMessageOrBuilder();
        } else {
          return principleAxisMajor_ == null ?
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : principleAxisMajor_;
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMajor = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
          getPrincipleAxisMajorFieldBuilder() {
        if (principleAxisMajorBuilder_ == null) {
          principleAxisMajorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder>(
                  getPrincipleAxisMajor(),
                  getParentForChildren(),
                  isClean());
          principleAxisMajor_ = null;
        }
        return principleAxisMajorBuilder_;
      }

      private de.naoth.rc.core.messages.CommonTypes.DoubleVector2 principleAxisMinor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> principleAxisMinorBuilder_;
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
       */
      public boolean hasPrincipleAxisMinor() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getPrincipleAxisMinor() {
        if (principleAxisMinorBuilder_ == null) {
          return principleAxisMinor_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : principleAxisMinor_;
        } else {
          return principleAxisMinorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
       */
      public Builder setPrincipleAxisMinor(de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (principleAxisMinorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          principleAxisMinor_ = value;
          onChanged();
        } else {
          principleAxisMinorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
       */
      public Builder setPrincipleAxisMinor(
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (principleAxisMinorBuilder_ == null) {
          principleAxisMinor_ = builderForValue.build();
          onChanged();
        } else {
          principleAxisMinorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
       */
      public Builder mergePrincipleAxisMinor(de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (principleAxisMinorBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              principleAxisMinor_ != null &&
              principleAxisMinor_ != de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance()) {
            principleAxisMinor_ =
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2.newBuilder(principleAxisMinor_).mergeFrom(value).buildPartial();
          } else {
            principleAxisMinor_ = value;
          }
          onChanged();
        } else {
          principleAxisMinorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
       */
      public Builder clearPrincipleAxisMinor() {
        if (principleAxisMinorBuilder_ == null) {
          principleAxisMinor_ = null;
          onChanged();
        } else {
          principleAxisMinorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder getPrincipleAxisMinorBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPrincipleAxisMinorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getPrincipleAxisMinorOrBuilder() {
        if (principleAxisMinorBuilder_ != null) {
          return principleAxisMinorBuilder_.getMessageOrBuilder();
        } else {
          return principleAxisMinor_ == null ?
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : principleAxisMinor_;
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 principleAxisMinor = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
          getPrincipleAxisMinorFieldBuilder() {
        if (principleAxisMinorBuilder_ == null) {
          principleAxisMinorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder>(
                  getPrincipleAxisMinor(),
                  getParentForChildren(),
                  isClean());
          principleAxisMinor_ = null;
        }
        return principleAxisMinorBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.RobotPose)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.RobotPose)
    private static final de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose();
    }

    public static de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RobotPose>
        PARSER = new com.google.protobuf.AbstractParser<RobotPose>() {
      public RobotPose parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RobotPose(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RobotPose> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RobotPose> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.RobotPoseOuterClass.RobotPose getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_RobotPose_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_RobotPose_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017RobotPose.proto\022\rnaothmessages\032\021Common" +
      "Types.proto\"\265\001\n\tRobotPose\022#\n\004pose\030\001 \002(\0132" +
      "\025.naothmessages.Pose2D\022\017\n\007isValid\030\002 \001(\010\022" +
      "8\n\022principleAxisMajor\030\003 \001(\0132\034.naothmessa" +
      "ges.DoubleVector2\0228\n\022principleAxisMinor\030" +
      "\004 \001(\0132\034.naothmessages.DoubleVector2B\033\n\031d" +
      "e.naoth.rc.core.messages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          de.naoth.rc.core.messages.CommonTypes.getDescriptor(),
        }, assigner);
    internal_static_naothmessages_RobotPose_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_naothmessages_RobotPose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_RobotPose_descriptor,
        new java.lang.String[] { "Pose", "IsValid", "PrincipleAxisMajor", "PrincipleAxisMinor", });
    de.naoth.rc.core.messages.CommonTypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
