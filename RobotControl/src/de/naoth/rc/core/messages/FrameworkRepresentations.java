// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Framework-Representations.proto

package de.naoth.rc.core.messages;

public final class FrameworkRepresentations {
  private FrameworkRepresentations() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.Image)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes data = 1;</code>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 1;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>optional int32 width = 2 [default = 640];</code>
     */
    boolean hasWidth();
    /**
     * <code>optional int32 width = 2 [default = 640];</code>
     */
    int getWidth();

    /**
     * <code>optional int32 height = 3 [default = 480];</code>
     */
    boolean hasHeight();
    /**
     * <code>optional int32 height = 3 [default = 480];</code>
     */
    int getHeight();

    /**
     * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
     */
    boolean hasCameraInfo();
    /**
     * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
     */
    de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo getCameraInfo();
    /**
     * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
     */
    de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfoOrBuilder getCameraInfoOrBuilder();

    /**
     * <code>optional .naothmessages.Image.Format format = 5 [default = YUV];</code>
     */
    boolean hasFormat();
    /**
     * <code>optional .naothmessages.Image.Format format = 5 [default = YUV];</code>
     */
    de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format getFormat();

    /**
     * <code>optional uint32 timestamp = 6;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 6;</code>
     */
    int getTimestamp();
  }
  /**
   * <pre>
   * Representations //
   * </pre>
   *
   * Protobuf type {@code naothmessages.Image}
   */
  public  static final class Image extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.Image)
      ImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Image.newBuilder() to construct.
    private Image(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Image() {
      data_ = com.google.protobuf.ByteString.EMPTY;
      width_ = 640;
      height_ = 480;
      format_ = 0;
      timestamp_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Image(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              data_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              width_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              height_ = input.readInt32();
              break;
            }
            case 34: {
              de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = cameraInfo_.toBuilder();
              }
              cameraInfo_ = input.readMessage(de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cameraInfo_);
                cameraInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format value = de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                format_ = rawValue;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              timestamp_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_Image_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_Image_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.Image.class, de.naoth.rc.core.messages.FrameworkRepresentations.Image.Builder.class);
    }

    /**
     * Protobuf enum {@code naothmessages.Image.Format}
     */
    public enum Format
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>YUV = 0;</code>
       */
      YUV(0),
      /**
       * <code>YUV422 = 1;</code>
       */
      YUV422(1),
      /**
       * <code>JPEG = 2;</code>
       */
      JPEG(2),
      ;

      /**
       * <code>YUV = 0;</code>
       */
      public static final int YUV_VALUE = 0;
      /**
       * <code>YUV422 = 1;</code>
       */
      public static final int YUV422_VALUE = 1;
      /**
       * <code>JPEG = 2;</code>
       */
      public static final int JPEG_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Format valueOf(int value) {
        return forNumber(value);
      }

      public static Format forNumber(int value) {
        switch (value) {
          case 0: return YUV;
          case 1: return YUV422;
          case 2: return JPEG;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Format>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Format> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Format>() {
              public Format findValueByNumber(int number) {
                return Format.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.Image.getDescriptor().getEnumTypes().get(0);
      }

      private static final Format[] VALUES = values();

      public static Format valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Format(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:naothmessages.Image.Format)
    }

    private int bitField0_;
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 1;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes data = 1;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int WIDTH_FIELD_NUMBER = 2;
    private int width_;
    /**
     * <code>optional int32 width = 2 [default = 640];</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 width = 2 [default = 640];</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 3;
    private int height_;
    /**
     * <code>optional int32 height = 3 [default = 480];</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 height = 3 [default = 480];</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int CAMERAINFO_FIELD_NUMBER = 4;
    private de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo cameraInfo_;
    /**
     * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
     */
    public boolean hasCameraInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
     */
    public de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo getCameraInfo() {
      return cameraInfo_ == null ? de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance() : cameraInfo_;
    }
    /**
     * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
     */
    public de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfoOrBuilder getCameraInfoOrBuilder() {
      return cameraInfo_ == null ? de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance() : cameraInfo_;
    }

    public static final int FORMAT_FIELD_NUMBER = 5;
    private int format_;
    /**
     * <code>optional .naothmessages.Image.Format format = 5 [default = YUV];</code>
     */
    public boolean hasFormat() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .naothmessages.Image.Format format = 5 [default = YUV];</code>
     */
    public de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format getFormat() {
      de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format result = de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format.valueOf(format_);
      return result == null ? de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format.YUV : result;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 6;
    private int timestamp_;
    /**
     * <code>optional uint32 timestamp = 6;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 timestamp = 6;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCameraInfo()) {
        if (!getCameraInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getCameraInfo());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, format_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCameraInfo());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, format_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.Image)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.Image other = (de.naoth.rc.core.messages.FrameworkRepresentations.Image) obj;

      boolean result = true;
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && (hasWidth() == other.hasWidth());
      if (hasWidth()) {
        result = result && (getWidth()
            == other.getWidth());
      }
      result = result && (hasHeight() == other.hasHeight());
      if (hasHeight()) {
        result = result && (getHeight()
            == other.getHeight());
      }
      result = result && (hasCameraInfo() == other.hasCameraInfo());
      if (hasCameraInfo()) {
        result = result && getCameraInfo()
            .equals(other.getCameraInfo());
      }
      result = result && (hasFormat() == other.hasFormat());
      if (hasFormat()) {
        result = result && format_ == other.format_;
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
      }
      if (hasCameraInfo()) {
        hash = (37 * hash) + CAMERAINFO_FIELD_NUMBER;
        hash = (53 * hash) + getCameraInfo().hashCode();
      }
      if (hasFormat()) {
        hash = (37 * hash) + FORMAT_FIELD_NUMBER;
        hash = (53 * hash) + format_;
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.Image prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Representations //
     * </pre>
     *
     * Protobuf type {@code naothmessages.Image}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.Image)
        de.naoth.rc.core.messages.FrameworkRepresentations.ImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_Image_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_Image_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.Image.class, de.naoth.rc.core.messages.FrameworkRepresentations.Image.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.Image.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCameraInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 640;
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 480;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cameraInfoBuilder_ == null) {
          cameraInfo_ = null;
        } else {
          cameraInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        format_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_Image_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.Image getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.Image.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.Image build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.Image result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.Image buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.Image result = new de.naoth.rc.core.messages.FrameworkRepresentations.Image(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (cameraInfoBuilder_ == null) {
          result.cameraInfo_ = cameraInfo_;
        } else {
          result.cameraInfo_ = cameraInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.format_ = format_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.Image) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.Image)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.Image other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.Image.getDefaultInstance()) return this;
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasCameraInfo()) {
          mergeCameraInfo(other.getCameraInfo());
        }
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasData()) {
          return false;
        }
        if (hasCameraInfo()) {
          if (!getCameraInfo().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.Image parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.Image) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 1;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes data = 1;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 1;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 1;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private int width_ = 640;
      /**
       * <code>optional int32 width = 2 [default = 640];</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 width = 2 [default = 640];</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>optional int32 width = 2 [default = 640];</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000002;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 width = 2 [default = 640];</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 640;
        onChanged();
        return this;
      }

      private int height_ = 480;
      /**
       * <code>optional int32 height = 3 [default = 480];</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 height = 3 [default = 480];</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional int32 height = 3 [default = 480];</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000004;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 height = 3 [default = 480];</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 480;
        onChanged();
        return this;
      }

      private de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo cameraInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo, de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.Builder, de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfoOrBuilder> cameraInfoBuilder_;
      /**
       * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
       */
      public boolean hasCameraInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
       */
      public de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo getCameraInfo() {
        if (cameraInfoBuilder_ == null) {
          return cameraInfo_ == null ? de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance() : cameraInfo_;
        } else {
          return cameraInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
       */
      public Builder setCameraInfo(de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo value) {
        if (cameraInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cameraInfo_ = value;
          onChanged();
        } else {
          cameraInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
       */
      public Builder setCameraInfo(
          de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.Builder builderForValue) {
        if (cameraInfoBuilder_ == null) {
          cameraInfo_ = builderForValue.build();
          onChanged();
        } else {
          cameraInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
       */
      public Builder mergeCameraInfo(de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo value) {
        if (cameraInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              cameraInfo_ != null &&
              cameraInfo_ != de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance()) {
            cameraInfo_ =
              de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.newBuilder(cameraInfo_).mergeFrom(value).buildPartial();
          } else {
            cameraInfo_ = value;
          }
          onChanged();
        } else {
          cameraInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
       */
      public Builder clearCameraInfo() {
        if (cameraInfoBuilder_ == null) {
          cameraInfo_ = null;
          onChanged();
        } else {
          cameraInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
       */
      public de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.Builder getCameraInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCameraInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
       */
      public de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfoOrBuilder getCameraInfoOrBuilder() {
        if (cameraInfoBuilder_ != null) {
          return cameraInfoBuilder_.getMessageOrBuilder();
        } else {
          return cameraInfo_ == null ?
              de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance() : cameraInfo_;
        }
      }
      /**
       * <code>optional .naothmessages.CameraInfo cameraInfo = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo, de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.Builder, de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfoOrBuilder> 
          getCameraInfoFieldBuilder() {
        if (cameraInfoBuilder_ == null) {
          cameraInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo, de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.Builder, de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfoOrBuilder>(
                  getCameraInfo(),
                  getParentForChildren(),
                  isClean());
          cameraInfo_ = null;
        }
        return cameraInfoBuilder_;
      }

      private int format_ = 0;
      /**
       * <code>optional .naothmessages.Image.Format format = 5 [default = YUV];</code>
       */
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .naothmessages.Image.Format format = 5 [default = YUV];</code>
       */
      public de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format getFormat() {
        de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format result = de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format.valueOf(format_);
        return result == null ? de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format.YUV : result;
      }
      /**
       * <code>optional .naothmessages.Image.Format format = 5 [default = YUV];</code>
       */
      public Builder setFormat(de.naoth.rc.core.messages.FrameworkRepresentations.Image.Format value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        format_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .naothmessages.Image.Format format = 5 [default = YUV];</code>
       */
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000010);
        format_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 6;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 timestamp = 6;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 6;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000020;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 6;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        timestamp_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.Image)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.Image)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.Image DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.Image();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.Image getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Image>
        PARSER = new com.google.protobuf.AbstractParser<Image>() {
      public Image parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Image(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Image> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Image> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.Image getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CameraInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.CameraInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 resolutionWidth = 1;</code>
     */
    boolean hasResolutionWidth();
    /**
     * <code>required int32 resolutionWidth = 1;</code>
     */
    int getResolutionWidth();

    /**
     * <code>required int32 resolutionHeight = 2;</code>
     */
    boolean hasResolutionHeight();
    /**
     * <code>required int32 resolutionHeight = 2;</code>
     */
    int getResolutionHeight();

    /**
     * <code>optional .naothmessages.CameraID cameraID = 4 [default = bottom];</code>
     */
    boolean hasCameraID();
    /**
     * <code>optional .naothmessages.CameraID cameraID = 4 [default = bottom];</code>
     */
    de.naoth.rc.core.messages.CommonTypes.CameraID getCameraID();

    /**
     * <pre>
     * these are calculated in the new version of CameraInfo, do not use
     * </pre>
     *
     * <code>optional double focalLength = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasFocalLength();
    /**
     * <pre>
     * these are calculated in the new version of CameraInfo, do not use
     * </pre>
     *
     * <code>optional double focalLength = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getFocalLength();

    /**
     * <code>optional double openingAngleWidth = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasOpeningAngleWidth();
    /**
     * <code>optional double openingAngleWidth = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getOpeningAngleWidth();

    /**
     * <code>optional double openingAngleHeight = 7 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasOpeningAngleHeight();
    /**
     * <code>optional double openingAngleHeight = 7 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getOpeningAngleHeight();

    /**
     * <code>optional double opticalCenterX = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasOpticalCenterX();
    /**
     * <code>optional double opticalCenterX = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getOpticalCenterX();

    /**
     * <code>optional double opticalCenterY = 9 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasOpticalCenterY();
    /**
     * <code>optional double opticalCenterY = 9 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getOpticalCenterY();

    /**
     * <code>optional int64 size = 10 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasSize();
    /**
     * <code>optional int64 size = 10 [deprecated = true];</code>
     */
    @java.lang.Deprecated long getSize();

    /**
     * <code>optional int64 memorysize = 11 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasMemorysize();
    /**
     * <code>optional int64 memorysize = 11 [deprecated = true];</code>
     */
    @java.lang.Deprecated long getMemorysize();

    /**
     * <pre>
     * these are replaced by correctionOffset
     * </pre>
     *
     * <code>optional double cameraRollOffset = 12 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasCameraRollOffset();
    /**
     * <pre>
     * these are replaced by correctionOffset
     * </pre>
     *
     * <code>optional double cameraRollOffset = 12 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getCameraRollOffset();

    /**
     * <code>optional double cameraTiltOffset = 13 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasCameraTiltOffset();
    /**
     * <code>optional double cameraTiltOffset = 13 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getCameraTiltOffset();

    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> 
        getCorrectionOffsetList();
    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getCorrectionOffset(int index);
    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getCorrectionOffsetCount();
    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<? extends de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
        getCorrectionOffsetOrBuilderList();
    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getCorrectionOffsetOrBuilder(
        int index);

    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> 
        getHeadJointOffsetList();
    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getHeadJointOffset(int index);
    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getHeadJointOffsetCount();
    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<? extends de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
        getHeadJointOffsetOrBuilderList();
    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getHeadJointOffsetOrBuilder(
        int index);

    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<de.naoth.rc.core.messages.CommonTypes.Pose3D> 
        getTransformationList();
    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated de.naoth.rc.core.messages.CommonTypes.Pose3D getTransformation(int index);
    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getTransformationCount();
    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<? extends de.naoth.rc.core.messages.CommonTypes.Pose3DOrBuilder> 
        getTransformationOrBuilderList();
    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated de.naoth.rc.core.messages.CommonTypes.Pose3DOrBuilder getTransformationOrBuilder(
        int index);

    /**
     * <code>optional double openingAngleDiagonal = 15;</code>
     */
    boolean hasOpeningAngleDiagonal();
    /**
     * <code>optional double openingAngleDiagonal = 15;</code>
     */
    double getOpeningAngleDiagonal();

    /**
     * <code>optional double pixelSize = 16;</code>
     */
    boolean hasPixelSize();
    /**
     * <code>optional double pixelSize = 16;</code>
     */
    double getPixelSize();

    /**
     * <code>optional double focus = 17;</code>
     */
    boolean hasFocus();
    /**
     * <code>optional double focus = 17;</code>
     */
    double getFocus();
  }
  /**
   * Protobuf type {@code naothmessages.CameraInfo}
   */
  public  static final class CameraInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.CameraInfo)
      CameraInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CameraInfo.newBuilder() to construct.
    private CameraInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CameraInfo() {
      resolutionWidth_ = 0;
      resolutionHeight_ = 0;
      cameraID_ = 1;
      focalLength_ = 0D;
      openingAngleWidth_ = 0D;
      openingAngleHeight_ = 0D;
      opticalCenterX_ = 0D;
      opticalCenterY_ = 0D;
      size_ = 0L;
      memorysize_ = 0L;
      cameraRollOffset_ = 0D;
      cameraTiltOffset_ = 0D;
      correctionOffset_ = java.util.Collections.emptyList();
      headJointOffset_ = java.util.Collections.emptyList();
      transformation_ = java.util.Collections.emptyList();
      openingAngleDiagonal_ = 0D;
      pixelSize_ = 0D;
      focus_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CameraInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              resolutionWidth_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              resolutionHeight_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              de.naoth.rc.core.messages.CommonTypes.CameraID value = de.naoth.rc.core.messages.CommonTypes.CameraID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                cameraID_ = rawValue;
              }
              break;
            }
            case 41: {
              bitField0_ |= 0x00000008;
              focalLength_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000010;
              openingAngleWidth_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000020;
              openingAngleHeight_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000040;
              opticalCenterX_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000080;
              opticalCenterY_ = input.readDouble();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              size_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              memorysize_ = input.readInt64();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000400;
              cameraRollOffset_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00000800;
              cameraTiltOffset_ = input.readDouble();
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                transformation_ = new java.util.ArrayList<de.naoth.rc.core.messages.CommonTypes.Pose3D>();
                mutable_bitField0_ |= 0x00004000;
              }
              transformation_.add(
                  input.readMessage(de.naoth.rc.core.messages.CommonTypes.Pose3D.PARSER, extensionRegistry));
              break;
            }
            case 121: {
              bitField0_ |= 0x00001000;
              openingAngleDiagonal_ = input.readDouble();
              break;
            }
            case 129: {
              bitField0_ |= 0x00002000;
              pixelSize_ = input.readDouble();
              break;
            }
            case 137: {
              bitField0_ |= 0x00004000;
              focus_ = input.readDouble();
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                correctionOffset_ = new java.util.ArrayList<de.naoth.rc.core.messages.CommonTypes.DoubleVector2>();
                mutable_bitField0_ |= 0x00001000;
              }
              correctionOffset_.add(
                  input.readMessage(de.naoth.rc.core.messages.CommonTypes.DoubleVector2.PARSER, extensionRegistry));
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                headJointOffset_ = new java.util.ArrayList<de.naoth.rc.core.messages.CommonTypes.DoubleVector2>();
                mutable_bitField0_ |= 0x00002000;
              }
              headJointOffset_.add(
                  input.readMessage(de.naoth.rc.core.messages.CommonTypes.DoubleVector2.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          transformation_ = java.util.Collections.unmodifiableList(transformation_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          correctionOffset_ = java.util.Collections.unmodifiableList(correctionOffset_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          headJointOffset_ = java.util.Collections.unmodifiableList(headJointOffset_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_CameraInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_CameraInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.class, de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.Builder.class);
    }

    private int bitField0_;
    public static final int RESOLUTIONWIDTH_FIELD_NUMBER = 1;
    private int resolutionWidth_;
    /**
     * <code>required int32 resolutionWidth = 1;</code>
     */
    public boolean hasResolutionWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 resolutionWidth = 1;</code>
     */
    public int getResolutionWidth() {
      return resolutionWidth_;
    }

    public static final int RESOLUTIONHEIGHT_FIELD_NUMBER = 2;
    private int resolutionHeight_;
    /**
     * <code>required int32 resolutionHeight = 2;</code>
     */
    public boolean hasResolutionHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 resolutionHeight = 2;</code>
     */
    public int getResolutionHeight() {
      return resolutionHeight_;
    }

    public static final int CAMERAID_FIELD_NUMBER = 4;
    private int cameraID_;
    /**
     * <code>optional .naothmessages.CameraID cameraID = 4 [default = bottom];</code>
     */
    public boolean hasCameraID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .naothmessages.CameraID cameraID = 4 [default = bottom];</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.CameraID getCameraID() {
      de.naoth.rc.core.messages.CommonTypes.CameraID result = de.naoth.rc.core.messages.CommonTypes.CameraID.valueOf(cameraID_);
      return result == null ? de.naoth.rc.core.messages.CommonTypes.CameraID.bottom : result;
    }

    public static final int FOCALLENGTH_FIELD_NUMBER = 5;
    private double focalLength_;
    /**
     * <pre>
     * these are calculated in the new version of CameraInfo, do not use
     * </pre>
     *
     * <code>optional double focalLength = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasFocalLength() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * these are calculated in the new version of CameraInfo, do not use
     * </pre>
     *
     * <code>optional double focalLength = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getFocalLength() {
      return focalLength_;
    }

    public static final int OPENINGANGLEWIDTH_FIELD_NUMBER = 6;
    private double openingAngleWidth_;
    /**
     * <code>optional double openingAngleWidth = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasOpeningAngleWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double openingAngleWidth = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getOpeningAngleWidth() {
      return openingAngleWidth_;
    }

    public static final int OPENINGANGLEHEIGHT_FIELD_NUMBER = 7;
    private double openingAngleHeight_;
    /**
     * <code>optional double openingAngleHeight = 7 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasOpeningAngleHeight() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double openingAngleHeight = 7 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getOpeningAngleHeight() {
      return openingAngleHeight_;
    }

    public static final int OPTICALCENTERX_FIELD_NUMBER = 8;
    private double opticalCenterX_;
    /**
     * <code>optional double opticalCenterX = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasOpticalCenterX() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double opticalCenterX = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getOpticalCenterX() {
      return opticalCenterX_;
    }

    public static final int OPTICALCENTERY_FIELD_NUMBER = 9;
    private double opticalCenterY_;
    /**
     * <code>optional double opticalCenterY = 9 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasOpticalCenterY() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double opticalCenterY = 9 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getOpticalCenterY() {
      return opticalCenterY_;
    }

    public static final int SIZE_FIELD_NUMBER = 10;
    private long size_;
    /**
     * <code>optional int64 size = 10 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasSize() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 size = 10 [deprecated = true];</code>
     */
    @java.lang.Deprecated public long getSize() {
      return size_;
    }

    public static final int MEMORYSIZE_FIELD_NUMBER = 11;
    private long memorysize_;
    /**
     * <code>optional int64 memorysize = 11 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasMemorysize() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 memorysize = 11 [deprecated = true];</code>
     */
    @java.lang.Deprecated public long getMemorysize() {
      return memorysize_;
    }

    public static final int CAMERAROLLOFFSET_FIELD_NUMBER = 12;
    private double cameraRollOffset_;
    /**
     * <pre>
     * these are replaced by correctionOffset
     * </pre>
     *
     * <code>optional double cameraRollOffset = 12 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasCameraRollOffset() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * these are replaced by correctionOffset
     * </pre>
     *
     * <code>optional double cameraRollOffset = 12 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getCameraRollOffset() {
      return cameraRollOffset_;
    }

    public static final int CAMERATILTOFFSET_FIELD_NUMBER = 13;
    private double cameraTiltOffset_;
    /**
     * <code>optional double cameraTiltOffset = 13 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasCameraTiltOffset() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional double cameraTiltOffset = 13 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getCameraTiltOffset() {
      return cameraTiltOffset_;
    }

    public static final int CORRECTIONOFFSET_FIELD_NUMBER = 18;
    private java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> correctionOffset_;
    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> getCorrectionOffsetList() {
      return correctionOffset_;
    }
    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
        getCorrectionOffsetOrBuilderList() {
      return correctionOffset_;
    }
    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getCorrectionOffsetCount() {
      return correctionOffset_.size();
    }
    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getCorrectionOffset(int index) {
      return correctionOffset_.get(index);
    }
    /**
     * <pre>
     * these are moved to other representations
     * </pre>
     *
     * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
     */
    @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getCorrectionOffsetOrBuilder(
        int index) {
      return correctionOffset_.get(index);
    }

    public static final int HEADJOINTOFFSET_FIELD_NUMBER = 19;
    private java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> headJointOffset_;
    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> getHeadJointOffsetList() {
      return headJointOffset_;
    }
    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
        getHeadJointOffsetOrBuilderList() {
      return headJointOffset_;
    }
    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getHeadJointOffsetCount() {
      return headJointOffset_.size();
    }
    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getHeadJointOffset(int index) {
      return headJointOffset_.get(index);
    }
    /**
     * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getHeadJointOffsetOrBuilder(
        int index) {
      return headJointOffset_.get(index);
    }

    public static final int TRANSFORMATION_FIELD_NUMBER = 14;
    private java.util.List<de.naoth.rc.core.messages.CommonTypes.Pose3D> transformation_;
    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<de.naoth.rc.core.messages.CommonTypes.Pose3D> getTransformationList() {
      return transformation_;
    }
    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.core.messages.CommonTypes.Pose3DOrBuilder> 
        getTransformationOrBuilderList() {
      return transformation_;
    }
    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getTransformationCount() {
      return transformation_.size();
    }
    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.Pose3D getTransformation(int index) {
      return transformation_.get(index);
    }
    /**
     * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
     */
    @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.Pose3DOrBuilder getTransformationOrBuilder(
        int index) {
      return transformation_.get(index);
    }

    public static final int OPENINGANGLEDIAGONAL_FIELD_NUMBER = 15;
    private double openingAngleDiagonal_;
    /**
     * <code>optional double openingAngleDiagonal = 15;</code>
     */
    public boolean hasOpeningAngleDiagonal() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional double openingAngleDiagonal = 15;</code>
     */
    public double getOpeningAngleDiagonal() {
      return openingAngleDiagonal_;
    }

    public static final int PIXELSIZE_FIELD_NUMBER = 16;
    private double pixelSize_;
    /**
     * <code>optional double pixelSize = 16;</code>
     */
    public boolean hasPixelSize() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional double pixelSize = 16;</code>
     */
    public double getPixelSize() {
      return pixelSize_;
    }

    public static final int FOCUS_FIELD_NUMBER = 17;
    private double focus_;
    /**
     * <code>optional double focus = 17;</code>
     */
    public boolean hasFocus() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional double focus = 17;</code>
     */
    public double getFocus() {
      return focus_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasResolutionWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResolutionHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCorrectionOffsetCount(); i++) {
        if (!getCorrectionOffset(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getHeadJointOffsetCount(); i++) {
        if (!getHeadJointOffset(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTransformationCount(); i++) {
        if (!getTransformation(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, resolutionWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, resolutionHeight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(4, cameraID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(5, focalLength_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(6, openingAngleWidth_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(7, openingAngleHeight_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(8, opticalCenterX_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(9, opticalCenterY_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(10, size_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(11, memorysize_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(12, cameraRollOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(13, cameraTiltOffset_);
      }
      for (int i = 0; i < transformation_.size(); i++) {
        output.writeMessage(14, transformation_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(15, openingAngleDiagonal_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(16, pixelSize_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(17, focus_);
      }
      for (int i = 0; i < correctionOffset_.size(); i++) {
        output.writeMessage(18, correctionOffset_.get(i));
      }
      for (int i = 0; i < headJointOffset_.size(); i++) {
        output.writeMessage(19, headJointOffset_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, resolutionWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, resolutionHeight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, cameraID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, focalLength_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, openingAngleWidth_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, openingAngleHeight_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, opticalCenterX_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, opticalCenterY_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, size_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, memorysize_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, cameraRollOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, cameraTiltOffset_);
      }
      for (int i = 0; i < transformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, transformation_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, openingAngleDiagonal_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, pixelSize_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, focus_);
      }
      for (int i = 0; i < correctionOffset_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, correctionOffset_.get(i));
      }
      for (int i = 0; i < headJointOffset_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, headJointOffset_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo other = (de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo) obj;

      boolean result = true;
      result = result && (hasResolutionWidth() == other.hasResolutionWidth());
      if (hasResolutionWidth()) {
        result = result && (getResolutionWidth()
            == other.getResolutionWidth());
      }
      result = result && (hasResolutionHeight() == other.hasResolutionHeight());
      if (hasResolutionHeight()) {
        result = result && (getResolutionHeight()
            == other.getResolutionHeight());
      }
      result = result && (hasCameraID() == other.hasCameraID());
      if (hasCameraID()) {
        result = result && cameraID_ == other.cameraID_;
      }
      result = result && (hasFocalLength() == other.hasFocalLength());
      if (hasFocalLength()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFocalLength())
            == java.lang.Double.doubleToLongBits(
                other.getFocalLength()));
      }
      result = result && (hasOpeningAngleWidth() == other.hasOpeningAngleWidth());
      if (hasOpeningAngleWidth()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getOpeningAngleWidth())
            == java.lang.Double.doubleToLongBits(
                other.getOpeningAngleWidth()));
      }
      result = result && (hasOpeningAngleHeight() == other.hasOpeningAngleHeight());
      if (hasOpeningAngleHeight()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getOpeningAngleHeight())
            == java.lang.Double.doubleToLongBits(
                other.getOpeningAngleHeight()));
      }
      result = result && (hasOpticalCenterX() == other.hasOpticalCenterX());
      if (hasOpticalCenterX()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getOpticalCenterX())
            == java.lang.Double.doubleToLongBits(
                other.getOpticalCenterX()));
      }
      result = result && (hasOpticalCenterY() == other.hasOpticalCenterY());
      if (hasOpticalCenterY()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getOpticalCenterY())
            == java.lang.Double.doubleToLongBits(
                other.getOpticalCenterY()));
      }
      result = result && (hasSize() == other.hasSize());
      if (hasSize()) {
        result = result && (getSize()
            == other.getSize());
      }
      result = result && (hasMemorysize() == other.hasMemorysize());
      if (hasMemorysize()) {
        result = result && (getMemorysize()
            == other.getMemorysize());
      }
      result = result && (hasCameraRollOffset() == other.hasCameraRollOffset());
      if (hasCameraRollOffset()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getCameraRollOffset())
            == java.lang.Double.doubleToLongBits(
                other.getCameraRollOffset()));
      }
      result = result && (hasCameraTiltOffset() == other.hasCameraTiltOffset());
      if (hasCameraTiltOffset()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getCameraTiltOffset())
            == java.lang.Double.doubleToLongBits(
                other.getCameraTiltOffset()));
      }
      result = result && getCorrectionOffsetList()
          .equals(other.getCorrectionOffsetList());
      result = result && getHeadJointOffsetList()
          .equals(other.getHeadJointOffsetList());
      result = result && getTransformationList()
          .equals(other.getTransformationList());
      result = result && (hasOpeningAngleDiagonal() == other.hasOpeningAngleDiagonal());
      if (hasOpeningAngleDiagonal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getOpeningAngleDiagonal())
            == java.lang.Double.doubleToLongBits(
                other.getOpeningAngleDiagonal()));
      }
      result = result && (hasPixelSize() == other.hasPixelSize());
      if (hasPixelSize()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPixelSize())
            == java.lang.Double.doubleToLongBits(
                other.getPixelSize()));
      }
      result = result && (hasFocus() == other.hasFocus());
      if (hasFocus()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFocus())
            == java.lang.Double.doubleToLongBits(
                other.getFocus()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResolutionWidth()) {
        hash = (37 * hash) + RESOLUTIONWIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getResolutionWidth();
      }
      if (hasResolutionHeight()) {
        hash = (37 * hash) + RESOLUTIONHEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getResolutionHeight();
      }
      if (hasCameraID()) {
        hash = (37 * hash) + CAMERAID_FIELD_NUMBER;
        hash = (53 * hash) + cameraID_;
      }
      if (hasFocalLength()) {
        hash = (37 * hash) + FOCALLENGTH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFocalLength()));
      }
      if (hasOpeningAngleWidth()) {
        hash = (37 * hash) + OPENINGANGLEWIDTH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOpeningAngleWidth()));
      }
      if (hasOpeningAngleHeight()) {
        hash = (37 * hash) + OPENINGANGLEHEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOpeningAngleHeight()));
      }
      if (hasOpticalCenterX()) {
        hash = (37 * hash) + OPTICALCENTERX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOpticalCenterX()));
      }
      if (hasOpticalCenterY()) {
        hash = (37 * hash) + OPTICALCENTERY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOpticalCenterY()));
      }
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSize());
      }
      if (hasMemorysize()) {
        hash = (37 * hash) + MEMORYSIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMemorysize());
      }
      if (hasCameraRollOffset()) {
        hash = (37 * hash) + CAMERAROLLOFFSET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCameraRollOffset()));
      }
      if (hasCameraTiltOffset()) {
        hash = (37 * hash) + CAMERATILTOFFSET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCameraTiltOffset()));
      }
      if (getCorrectionOffsetCount() > 0) {
        hash = (37 * hash) + CORRECTIONOFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getCorrectionOffsetList().hashCode();
      }
      if (getHeadJointOffsetCount() > 0) {
        hash = (37 * hash) + HEADJOINTOFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getHeadJointOffsetList().hashCode();
      }
      if (getTransformationCount() > 0) {
        hash = (37 * hash) + TRANSFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getTransformationList().hashCode();
      }
      if (hasOpeningAngleDiagonal()) {
        hash = (37 * hash) + OPENINGANGLEDIAGONAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOpeningAngleDiagonal()));
      }
      if (hasPixelSize()) {
        hash = (37 * hash) + PIXELSIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPixelSize()));
      }
      if (hasFocus()) {
        hash = (37 * hash) + FOCUS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFocus()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.CameraInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.CameraInfo)
        de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_CameraInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_CameraInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.class, de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCorrectionOffsetFieldBuilder();
          getHeadJointOffsetFieldBuilder();
          getTransformationFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        resolutionWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        resolutionHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cameraID_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        focalLength_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        openingAngleWidth_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        openingAngleHeight_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        opticalCenterX_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        opticalCenterY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        memorysize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        cameraRollOffset_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        cameraTiltOffset_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (correctionOffsetBuilder_ == null) {
          correctionOffset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          correctionOffsetBuilder_.clear();
        }
        if (headJointOffsetBuilder_ == null) {
          headJointOffset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          headJointOffsetBuilder_.clear();
        }
        if (transformationBuilder_ == null) {
          transformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          transformationBuilder_.clear();
        }
        openingAngleDiagonal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00008000);
        pixelSize_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        focus_ = 0D;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_CameraInfo_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo result = new de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resolutionWidth_ = resolutionWidth_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.resolutionHeight_ = resolutionHeight_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cameraID_ = cameraID_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.focalLength_ = focalLength_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.openingAngleWidth_ = openingAngleWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.openingAngleHeight_ = openingAngleHeight_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.opticalCenterX_ = opticalCenterX_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.opticalCenterY_ = opticalCenterY_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.memorysize_ = memorysize_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.cameraRollOffset_ = cameraRollOffset_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.cameraTiltOffset_ = cameraTiltOffset_;
        if (correctionOffsetBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            correctionOffset_ = java.util.Collections.unmodifiableList(correctionOffset_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.correctionOffset_ = correctionOffset_;
        } else {
          result.correctionOffset_ = correctionOffsetBuilder_.build();
        }
        if (headJointOffsetBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            headJointOffset_ = java.util.Collections.unmodifiableList(headJointOffset_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.headJointOffset_ = headJointOffset_;
        } else {
          result.headJointOffset_ = headJointOffsetBuilder_.build();
        }
        if (transformationBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            transformation_ = java.util.Collections.unmodifiableList(transformation_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.transformation_ = transformation_;
        } else {
          result.transformation_ = transformationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.openingAngleDiagonal_ = openingAngleDiagonal_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.pixelSize_ = pixelSize_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.focus_ = focus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance()) return this;
        if (other.hasResolutionWidth()) {
          setResolutionWidth(other.getResolutionWidth());
        }
        if (other.hasResolutionHeight()) {
          setResolutionHeight(other.getResolutionHeight());
        }
        if (other.hasCameraID()) {
          setCameraID(other.getCameraID());
        }
        if (other.hasFocalLength()) {
          setFocalLength(other.getFocalLength());
        }
        if (other.hasOpeningAngleWidth()) {
          setOpeningAngleWidth(other.getOpeningAngleWidth());
        }
        if (other.hasOpeningAngleHeight()) {
          setOpeningAngleHeight(other.getOpeningAngleHeight());
        }
        if (other.hasOpticalCenterX()) {
          setOpticalCenterX(other.getOpticalCenterX());
        }
        if (other.hasOpticalCenterY()) {
          setOpticalCenterY(other.getOpticalCenterY());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasMemorysize()) {
          setMemorysize(other.getMemorysize());
        }
        if (other.hasCameraRollOffset()) {
          setCameraRollOffset(other.getCameraRollOffset());
        }
        if (other.hasCameraTiltOffset()) {
          setCameraTiltOffset(other.getCameraTiltOffset());
        }
        if (correctionOffsetBuilder_ == null) {
          if (!other.correctionOffset_.isEmpty()) {
            if (correctionOffset_.isEmpty()) {
              correctionOffset_ = other.correctionOffset_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureCorrectionOffsetIsMutable();
              correctionOffset_.addAll(other.correctionOffset_);
            }
            onChanged();
          }
        } else {
          if (!other.correctionOffset_.isEmpty()) {
            if (correctionOffsetBuilder_.isEmpty()) {
              correctionOffsetBuilder_.dispose();
              correctionOffsetBuilder_ = null;
              correctionOffset_ = other.correctionOffset_;
              bitField0_ = (bitField0_ & ~0x00001000);
              correctionOffsetBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCorrectionOffsetFieldBuilder() : null;
            } else {
              correctionOffsetBuilder_.addAllMessages(other.correctionOffset_);
            }
          }
        }
        if (headJointOffsetBuilder_ == null) {
          if (!other.headJointOffset_.isEmpty()) {
            if (headJointOffset_.isEmpty()) {
              headJointOffset_ = other.headJointOffset_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureHeadJointOffsetIsMutable();
              headJointOffset_.addAll(other.headJointOffset_);
            }
            onChanged();
          }
        } else {
          if (!other.headJointOffset_.isEmpty()) {
            if (headJointOffsetBuilder_.isEmpty()) {
              headJointOffsetBuilder_.dispose();
              headJointOffsetBuilder_ = null;
              headJointOffset_ = other.headJointOffset_;
              bitField0_ = (bitField0_ & ~0x00002000);
              headJointOffsetBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHeadJointOffsetFieldBuilder() : null;
            } else {
              headJointOffsetBuilder_.addAllMessages(other.headJointOffset_);
            }
          }
        }
        if (transformationBuilder_ == null) {
          if (!other.transformation_.isEmpty()) {
            if (transformation_.isEmpty()) {
              transformation_ = other.transformation_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureTransformationIsMutable();
              transformation_.addAll(other.transformation_);
            }
            onChanged();
          }
        } else {
          if (!other.transformation_.isEmpty()) {
            if (transformationBuilder_.isEmpty()) {
              transformationBuilder_.dispose();
              transformationBuilder_ = null;
              transformation_ = other.transformation_;
              bitField0_ = (bitField0_ & ~0x00004000);
              transformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTransformationFieldBuilder() : null;
            } else {
              transformationBuilder_.addAllMessages(other.transformation_);
            }
          }
        }
        if (other.hasOpeningAngleDiagonal()) {
          setOpeningAngleDiagonal(other.getOpeningAngleDiagonal());
        }
        if (other.hasPixelSize()) {
          setPixelSize(other.getPixelSize());
        }
        if (other.hasFocus()) {
          setFocus(other.getFocus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResolutionWidth()) {
          return false;
        }
        if (!hasResolutionHeight()) {
          return false;
        }
        for (int i = 0; i < getCorrectionOffsetCount(); i++) {
          if (!getCorrectionOffset(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getHeadJointOffsetCount(); i++) {
          if (!getHeadJointOffset(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getTransformationCount(); i++) {
          if (!getTransformation(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int resolutionWidth_ ;
      /**
       * <code>required int32 resolutionWidth = 1;</code>
       */
      public boolean hasResolutionWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 resolutionWidth = 1;</code>
       */
      public int getResolutionWidth() {
        return resolutionWidth_;
      }
      /**
       * <code>required int32 resolutionWidth = 1;</code>
       */
      public Builder setResolutionWidth(int value) {
        bitField0_ |= 0x00000001;
        resolutionWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 resolutionWidth = 1;</code>
       */
      public Builder clearResolutionWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resolutionWidth_ = 0;
        onChanged();
        return this;
      }

      private int resolutionHeight_ ;
      /**
       * <code>required int32 resolutionHeight = 2;</code>
       */
      public boolean hasResolutionHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 resolutionHeight = 2;</code>
       */
      public int getResolutionHeight() {
        return resolutionHeight_;
      }
      /**
       * <code>required int32 resolutionHeight = 2;</code>
       */
      public Builder setResolutionHeight(int value) {
        bitField0_ |= 0x00000002;
        resolutionHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 resolutionHeight = 2;</code>
       */
      public Builder clearResolutionHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        resolutionHeight_ = 0;
        onChanged();
        return this;
      }

      private int cameraID_ = 1;
      /**
       * <code>optional .naothmessages.CameraID cameraID = 4 [default = bottom];</code>
       */
      public boolean hasCameraID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .naothmessages.CameraID cameraID = 4 [default = bottom];</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.CameraID getCameraID() {
        de.naoth.rc.core.messages.CommonTypes.CameraID result = de.naoth.rc.core.messages.CommonTypes.CameraID.valueOf(cameraID_);
        return result == null ? de.naoth.rc.core.messages.CommonTypes.CameraID.bottom : result;
      }
      /**
       * <code>optional .naothmessages.CameraID cameraID = 4 [default = bottom];</code>
       */
      public Builder setCameraID(de.naoth.rc.core.messages.CommonTypes.CameraID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        cameraID_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .naothmessages.CameraID cameraID = 4 [default = bottom];</code>
       */
      public Builder clearCameraID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cameraID_ = 1;
        onChanged();
        return this;
      }

      private double focalLength_ ;
      /**
       * <pre>
       * these are calculated in the new version of CameraInfo, do not use
       * </pre>
       *
       * <code>optional double focalLength = 5 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasFocalLength() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * these are calculated in the new version of CameraInfo, do not use
       * </pre>
       *
       * <code>optional double focalLength = 5 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getFocalLength() {
        return focalLength_;
      }
      /**
       * <pre>
       * these are calculated in the new version of CameraInfo, do not use
       * </pre>
       *
       * <code>optional double focalLength = 5 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setFocalLength(double value) {
        bitField0_ |= 0x00000008;
        focalLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * these are calculated in the new version of CameraInfo, do not use
       * </pre>
       *
       * <code>optional double focalLength = 5 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearFocalLength() {
        bitField0_ = (bitField0_ & ~0x00000008);
        focalLength_ = 0D;
        onChanged();
        return this;
      }

      private double openingAngleWidth_ ;
      /**
       * <code>optional double openingAngleWidth = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasOpeningAngleWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double openingAngleWidth = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getOpeningAngleWidth() {
        return openingAngleWidth_;
      }
      /**
       * <code>optional double openingAngleWidth = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setOpeningAngleWidth(double value) {
        bitField0_ |= 0x00000010;
        openingAngleWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double openingAngleWidth = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearOpeningAngleWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        openingAngleWidth_ = 0D;
        onChanged();
        return this;
      }

      private double openingAngleHeight_ ;
      /**
       * <code>optional double openingAngleHeight = 7 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasOpeningAngleHeight() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double openingAngleHeight = 7 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getOpeningAngleHeight() {
        return openingAngleHeight_;
      }
      /**
       * <code>optional double openingAngleHeight = 7 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setOpeningAngleHeight(double value) {
        bitField0_ |= 0x00000020;
        openingAngleHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double openingAngleHeight = 7 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearOpeningAngleHeight() {
        bitField0_ = (bitField0_ & ~0x00000020);
        openingAngleHeight_ = 0D;
        onChanged();
        return this;
      }

      private double opticalCenterX_ ;
      /**
       * <code>optional double opticalCenterX = 8 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasOpticalCenterX() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double opticalCenterX = 8 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getOpticalCenterX() {
        return opticalCenterX_;
      }
      /**
       * <code>optional double opticalCenterX = 8 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setOpticalCenterX(double value) {
        bitField0_ |= 0x00000040;
        opticalCenterX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double opticalCenterX = 8 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearOpticalCenterX() {
        bitField0_ = (bitField0_ & ~0x00000040);
        opticalCenterX_ = 0D;
        onChanged();
        return this;
      }

      private double opticalCenterY_ ;
      /**
       * <code>optional double opticalCenterY = 9 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasOpticalCenterY() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double opticalCenterY = 9 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getOpticalCenterY() {
        return opticalCenterY_;
      }
      /**
       * <code>optional double opticalCenterY = 9 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setOpticalCenterY(double value) {
        bitField0_ |= 0x00000080;
        opticalCenterY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double opticalCenterY = 9 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearOpticalCenterY() {
        bitField0_ = (bitField0_ & ~0x00000080);
        opticalCenterY_ = 0D;
        onChanged();
        return this;
      }

      private long size_ ;
      /**
       * <code>optional int64 size = 10 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasSize() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 size = 10 [deprecated = true];</code>
       */
      @java.lang.Deprecated public long getSize() {
        return size_;
      }
      /**
       * <code>optional int64 size = 10 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setSize(long value) {
        bitField0_ |= 0x00000100;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 size = 10 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000100);
        size_ = 0L;
        onChanged();
        return this;
      }

      private long memorysize_ ;
      /**
       * <code>optional int64 memorysize = 11 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasMemorysize() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 memorysize = 11 [deprecated = true];</code>
       */
      @java.lang.Deprecated public long getMemorysize() {
        return memorysize_;
      }
      /**
       * <code>optional int64 memorysize = 11 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setMemorysize(long value) {
        bitField0_ |= 0x00000200;
        memorysize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 memorysize = 11 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearMemorysize() {
        bitField0_ = (bitField0_ & ~0x00000200);
        memorysize_ = 0L;
        onChanged();
        return this;
      }

      private double cameraRollOffset_ ;
      /**
       * <pre>
       * these are replaced by correctionOffset
       * </pre>
       *
       * <code>optional double cameraRollOffset = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasCameraRollOffset() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       * these are replaced by correctionOffset
       * </pre>
       *
       * <code>optional double cameraRollOffset = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getCameraRollOffset() {
        return cameraRollOffset_;
      }
      /**
       * <pre>
       * these are replaced by correctionOffset
       * </pre>
       *
       * <code>optional double cameraRollOffset = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setCameraRollOffset(double value) {
        bitField0_ |= 0x00000400;
        cameraRollOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * these are replaced by correctionOffset
       * </pre>
       *
       * <code>optional double cameraRollOffset = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearCameraRollOffset() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cameraRollOffset_ = 0D;
        onChanged();
        return this;
      }

      private double cameraTiltOffset_ ;
      /**
       * <code>optional double cameraTiltOffset = 13 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasCameraTiltOffset() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional double cameraTiltOffset = 13 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getCameraTiltOffset() {
        return cameraTiltOffset_;
      }
      /**
       * <code>optional double cameraTiltOffset = 13 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setCameraTiltOffset(double value) {
        bitField0_ |= 0x00000800;
        cameraTiltOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double cameraTiltOffset = 13 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearCameraTiltOffset() {
        bitField0_ = (bitField0_ & ~0x00000800);
        cameraTiltOffset_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> correctionOffset_ =
        java.util.Collections.emptyList();
      private void ensureCorrectionOffsetIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          correctionOffset_ = new java.util.ArrayList<de.naoth.rc.core.messages.CommonTypes.DoubleVector2>(correctionOffset_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> correctionOffsetBuilder_;

      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> getCorrectionOffsetList() {
        if (correctionOffsetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(correctionOffset_);
        } else {
          return correctionOffsetBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getCorrectionOffsetCount() {
        if (correctionOffsetBuilder_ == null) {
          return correctionOffset_.size();
        } else {
          return correctionOffsetBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getCorrectionOffset(int index) {
        if (correctionOffsetBuilder_ == null) {
          return correctionOffset_.get(index);
        } else {
          return correctionOffsetBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setCorrectionOffset(
          int index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (correctionOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.set(index, value);
          onChanged();
        } else {
          correctionOffsetBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setCorrectionOffset(
          int index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.set(index, builderForValue.build());
          onChanged();
        } else {
          correctionOffsetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addCorrectionOffset(de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (correctionOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.add(value);
          onChanged();
        } else {
          correctionOffsetBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addCorrectionOffset(
          int index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (correctionOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.add(index, value);
          onChanged();
        } else {
          correctionOffsetBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addCorrectionOffset(
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.add(builderForValue.build());
          onChanged();
        } else {
          correctionOffsetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addCorrectionOffset(
          int index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.add(index, builderForValue.build());
          onChanged();
        } else {
          correctionOffsetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllCorrectionOffset(
          java.lang.Iterable<? extends de.naoth.rc.core.messages.CommonTypes.DoubleVector2> values) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, correctionOffset_);
          onChanged();
        } else {
          correctionOffsetBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearCorrectionOffset() {
        if (correctionOffsetBuilder_ == null) {
          correctionOffset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          correctionOffsetBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder removeCorrectionOffset(int index) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.remove(index);
          onChanged();
        } else {
          correctionOffsetBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder getCorrectionOffsetBuilder(
          int index) {
        return getCorrectionOffsetFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getCorrectionOffsetOrBuilder(
          int index) {
        if (correctionOffsetBuilder_ == null) {
          return correctionOffset_.get(index);  } else {
          return correctionOffsetBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
           getCorrectionOffsetOrBuilderList() {
        if (correctionOffsetBuilder_ != null) {
          return correctionOffsetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(correctionOffset_);
        }
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder addCorrectionOffsetBuilder() {
        return getCorrectionOffsetFieldBuilder().addBuilder(
            de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance());
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder addCorrectionOffsetBuilder(
          int index) {
        return getCorrectionOffsetFieldBuilder().addBuilder(
            index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance());
      }
      /**
       * <pre>
       * these are moved to other representations
       * </pre>
       *
       * <code>repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder> 
           getCorrectionOffsetBuilderList() {
        return getCorrectionOffsetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
          getCorrectionOffsetFieldBuilder() {
        if (correctionOffsetBuilder_ == null) {
          correctionOffsetBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder>(
                  correctionOffset_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          correctionOffset_ = null;
        }
        return correctionOffsetBuilder_;
      }

      private java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> headJointOffset_ =
        java.util.Collections.emptyList();
      private void ensureHeadJointOffsetIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          headJointOffset_ = new java.util.ArrayList<de.naoth.rc.core.messages.CommonTypes.DoubleVector2>(headJointOffset_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> headJointOffsetBuilder_;

      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2> getHeadJointOffsetList() {
        if (headJointOffsetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(headJointOffset_);
        } else {
          return headJointOffsetBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getHeadJointOffsetCount() {
        if (headJointOffsetBuilder_ == null) {
          return headJointOffset_.size();
        } else {
          return headJointOffsetBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getHeadJointOffset(int index) {
        if (headJointOffsetBuilder_ == null) {
          return headJointOffset_.get(index);
        } else {
          return headJointOffsetBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setHeadJointOffset(
          int index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (headJointOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.set(index, value);
          onChanged();
        } else {
          headJointOffsetBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setHeadJointOffset(
          int index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.set(index, builderForValue.build());
          onChanged();
        } else {
          headJointOffsetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addHeadJointOffset(de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (headJointOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.add(value);
          onChanged();
        } else {
          headJointOffsetBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addHeadJointOffset(
          int index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (headJointOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.add(index, value);
          onChanged();
        } else {
          headJointOffsetBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addHeadJointOffset(
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.add(builderForValue.build());
          onChanged();
        } else {
          headJointOffsetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addHeadJointOffset(
          int index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.add(index, builderForValue.build());
          onChanged();
        } else {
          headJointOffsetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllHeadJointOffset(
          java.lang.Iterable<? extends de.naoth.rc.core.messages.CommonTypes.DoubleVector2> values) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, headJointOffset_);
          onChanged();
        } else {
          headJointOffsetBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearHeadJointOffset() {
        if (headJointOffsetBuilder_ == null) {
          headJointOffset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          headJointOffsetBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder removeHeadJointOffset(int index) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.remove(index);
          onChanged();
        } else {
          headJointOffsetBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder getHeadJointOffsetBuilder(
          int index) {
        return getHeadJointOffsetFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getHeadJointOffsetOrBuilder(
          int index) {
        if (headJointOffsetBuilder_ == null) {
          return headJointOffset_.get(index);  } else {
          return headJointOffsetBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
           getHeadJointOffsetOrBuilderList() {
        if (headJointOffsetBuilder_ != null) {
          return headJointOffsetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(headJointOffset_);
        }
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder addHeadJointOffsetBuilder() {
        return getHeadJointOffsetFieldBuilder().addBuilder(
            de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance());
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder addHeadJointOffsetBuilder(
          int index) {
        return getHeadJointOffsetFieldBuilder().addBuilder(
            index, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance());
      }
      /**
       * <code>repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder> 
           getHeadJointOffsetBuilderList() {
        return getHeadJointOffsetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
          getHeadJointOffsetFieldBuilder() {
        if (headJointOffsetBuilder_ == null) {
          headJointOffsetBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder>(
                  headJointOffset_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          headJointOffset_ = null;
        }
        return headJointOffsetBuilder_;
      }

      private java.util.List<de.naoth.rc.core.messages.CommonTypes.Pose3D> transformation_ =
        java.util.Collections.emptyList();
      private void ensureTransformationIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          transformation_ = new java.util.ArrayList<de.naoth.rc.core.messages.CommonTypes.Pose3D>(transformation_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.Pose3D, de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder, de.naoth.rc.core.messages.CommonTypes.Pose3DOrBuilder> transformationBuilder_;

      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<de.naoth.rc.core.messages.CommonTypes.Pose3D> getTransformationList() {
        if (transformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transformation_);
        } else {
          return transformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getTransformationCount() {
        if (transformationBuilder_ == null) {
          return transformation_.size();
        } else {
          return transformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.Pose3D getTransformation(int index) {
        if (transformationBuilder_ == null) {
          return transformation_.get(index);
        } else {
          return transformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setTransformation(
          int index, de.naoth.rc.core.messages.CommonTypes.Pose3D value) {
        if (transformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformationIsMutable();
          transformation_.set(index, value);
          onChanged();
        } else {
          transformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setTransformation(
          int index, de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder builderForValue) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          transformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          transformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addTransformation(de.naoth.rc.core.messages.CommonTypes.Pose3D value) {
        if (transformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformationIsMutable();
          transformation_.add(value);
          onChanged();
        } else {
          transformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addTransformation(
          int index, de.naoth.rc.core.messages.CommonTypes.Pose3D value) {
        if (transformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformationIsMutable();
          transformation_.add(index, value);
          onChanged();
        } else {
          transformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addTransformation(
          de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder builderForValue) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          transformation_.add(builderForValue.build());
          onChanged();
        } else {
          transformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addTransformation(
          int index, de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder builderForValue) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          transformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          transformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllTransformation(
          java.lang.Iterable<? extends de.naoth.rc.core.messages.CommonTypes.Pose3D> values) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, transformation_);
          onChanged();
        } else {
          transformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearTransformation() {
        if (transformationBuilder_ == null) {
          transformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          transformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder removeTransformation(int index) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          transformation_.remove(index);
          onChanged();
        } else {
          transformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder getTransformationBuilder(
          int index) {
        return getTransformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.Pose3DOrBuilder getTransformationOrBuilder(
          int index) {
        if (transformationBuilder_ == null) {
          return transformation_.get(index);  } else {
          return transformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.core.messages.CommonTypes.Pose3DOrBuilder> 
           getTransformationOrBuilderList() {
        if (transformationBuilder_ != null) {
          return transformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transformation_);
        }
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder addTransformationBuilder() {
        return getTransformationFieldBuilder().addBuilder(
            de.naoth.rc.core.messages.CommonTypes.Pose3D.getDefaultInstance());
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder addTransformationBuilder(
          int index) {
        return getTransformationFieldBuilder().addBuilder(
            index, de.naoth.rc.core.messages.CommonTypes.Pose3D.getDefaultInstance());
      }
      /**
       * <code>repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder> 
           getTransformationBuilderList() {
        return getTransformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.Pose3D, de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder, de.naoth.rc.core.messages.CommonTypes.Pose3DOrBuilder> 
          getTransformationFieldBuilder() {
        if (transformationBuilder_ == null) {
          transformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.Pose3D, de.naoth.rc.core.messages.CommonTypes.Pose3D.Builder, de.naoth.rc.core.messages.CommonTypes.Pose3DOrBuilder>(
                  transformation_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          transformation_ = null;
        }
        return transformationBuilder_;
      }

      private double openingAngleDiagonal_ ;
      /**
       * <code>optional double openingAngleDiagonal = 15;</code>
       */
      public boolean hasOpeningAngleDiagonal() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional double openingAngleDiagonal = 15;</code>
       */
      public double getOpeningAngleDiagonal() {
        return openingAngleDiagonal_;
      }
      /**
       * <code>optional double openingAngleDiagonal = 15;</code>
       */
      public Builder setOpeningAngleDiagonal(double value) {
        bitField0_ |= 0x00008000;
        openingAngleDiagonal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double openingAngleDiagonal = 15;</code>
       */
      public Builder clearOpeningAngleDiagonal() {
        bitField0_ = (bitField0_ & ~0x00008000);
        openingAngleDiagonal_ = 0D;
        onChanged();
        return this;
      }

      private double pixelSize_ ;
      /**
       * <code>optional double pixelSize = 16;</code>
       */
      public boolean hasPixelSize() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional double pixelSize = 16;</code>
       */
      public double getPixelSize() {
        return pixelSize_;
      }
      /**
       * <code>optional double pixelSize = 16;</code>
       */
      public Builder setPixelSize(double value) {
        bitField0_ |= 0x00010000;
        pixelSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pixelSize = 16;</code>
       */
      public Builder clearPixelSize() {
        bitField0_ = (bitField0_ & ~0x00010000);
        pixelSize_ = 0D;
        onChanged();
        return this;
      }

      private double focus_ ;
      /**
       * <code>optional double focus = 17;</code>
       */
      public boolean hasFocus() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional double focus = 17;</code>
       */
      public double getFocus() {
        return focus_;
      }
      /**
       * <code>optional double focus = 17;</code>
       */
      public Builder setFocus(double value) {
        bitField0_ |= 0x00020000;
        focus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double focus = 17;</code>
       */
      public Builder clearFocus() {
        bitField0_ = (bitField0_ & ~0x00020000);
        focus_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.CameraInfo)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.CameraInfo)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CameraInfo>
        PARSER = new com.google.protobuf.AbstractParser<CameraInfo>() {
      public CameraInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CameraInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CameraInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CameraInfo> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.CameraInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JointDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.JointData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double position = 1;</code>
     */
    java.util.List<java.lang.Double> getPositionList();
    /**
     * <code>repeated double position = 1;</code>
     */
    int getPositionCount();
    /**
     * <code>repeated double position = 1;</code>
     */
    double getPosition(int index);

    /**
     * <code>repeated double stiffness = 2;</code>
     */
    java.util.List<java.lang.Double> getStiffnessList();
    /**
     * <code>repeated double stiffness = 2;</code>
     */
    int getStiffnessCount();
    /**
     * <code>repeated double stiffness = 2;</code>
     */
    double getStiffness(int index);

    /**
     * <code>repeated double dp = 3;</code>
     */
    java.util.List<java.lang.Double> getDpList();
    /**
     * <code>repeated double dp = 3;</code>
     */
    int getDpCount();
    /**
     * <code>repeated double dp = 3;</code>
     */
    double getDp(int index);

    /**
     * <code>repeated double ddp = 4;</code>
     */
    java.util.List<java.lang.Double> getDdpList();
    /**
     * <code>repeated double ddp = 4;</code>
     */
    int getDdpCount();
    /**
     * <code>repeated double ddp = 4;</code>
     */
    double getDdp(int index);
  }
  /**
   * Protobuf type {@code naothmessages.JointData}
   */
  public  static final class JointData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.JointData)
      JointDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JointData.newBuilder() to construct.
    private JointData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JointData() {
      position_ = java.util.Collections.emptyList();
      stiffness_ = java.util.Collections.emptyList();
      dp_ = java.util.Collections.emptyList();
      ddp_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JointData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                position_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              position_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                position_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                position_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                stiffness_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              stiffness_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                stiffness_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                stiffness_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                dp_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              dp_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                dp_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                dp_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ddp_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              ddp_.add(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                ddp_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                ddp_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          position_ = java.util.Collections.unmodifiableList(position_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          stiffness_ = java.util.Collections.unmodifiableList(stiffness_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          dp_ = java.util.Collections.unmodifiableList(dp_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ddp_ = java.util.Collections.unmodifiableList(ddp_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_JointData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_JointData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.JointData.class, de.naoth.rc.core.messages.FrameworkRepresentations.JointData.Builder.class);
    }

    public static final int POSITION_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> position_;
    /**
     * <code>repeated double position = 1;</code>
     */
    public java.util.List<java.lang.Double>
        getPositionList() {
      return position_;
    }
    /**
     * <code>repeated double position = 1;</code>
     */
    public int getPositionCount() {
      return position_.size();
    }
    /**
     * <code>repeated double position = 1;</code>
     */
    public double getPosition(int index) {
      return position_.get(index);
    }

    public static final int STIFFNESS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> stiffness_;
    /**
     * <code>repeated double stiffness = 2;</code>
     */
    public java.util.List<java.lang.Double>
        getStiffnessList() {
      return stiffness_;
    }
    /**
     * <code>repeated double stiffness = 2;</code>
     */
    public int getStiffnessCount() {
      return stiffness_.size();
    }
    /**
     * <code>repeated double stiffness = 2;</code>
     */
    public double getStiffness(int index) {
      return stiffness_.get(index);
    }

    public static final int DP_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> dp_;
    /**
     * <code>repeated double dp = 3;</code>
     */
    public java.util.List<java.lang.Double>
        getDpList() {
      return dp_;
    }
    /**
     * <code>repeated double dp = 3;</code>
     */
    public int getDpCount() {
      return dp_.size();
    }
    /**
     * <code>repeated double dp = 3;</code>
     */
    public double getDp(int index) {
      return dp_.get(index);
    }

    public static final int DDP_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> ddp_;
    /**
     * <code>repeated double ddp = 4;</code>
     */
    public java.util.List<java.lang.Double>
        getDdpList() {
      return ddp_;
    }
    /**
     * <code>repeated double ddp = 4;</code>
     */
    public int getDdpCount() {
      return ddp_.size();
    }
    /**
     * <code>repeated double ddp = 4;</code>
     */
    public double getDdp(int index) {
      return ddp_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < position_.size(); i++) {
        output.writeDouble(1, position_.get(i));
      }
      for (int i = 0; i < stiffness_.size(); i++) {
        output.writeDouble(2, stiffness_.get(i));
      }
      for (int i = 0; i < dp_.size(); i++) {
        output.writeDouble(3, dp_.get(i));
      }
      for (int i = 0; i < ddp_.size(); i++) {
        output.writeDouble(4, ddp_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getPositionList().size();
        size += dataSize;
        size += 1 * getPositionList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getStiffnessList().size();
        size += dataSize;
        size += 1 * getStiffnessList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDpList().size();
        size += dataSize;
        size += 1 * getDpList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDdpList().size();
        size += dataSize;
        size += 1 * getDdpList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.JointData)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.JointData other = (de.naoth.rc.core.messages.FrameworkRepresentations.JointData) obj;

      boolean result = true;
      result = result && getPositionList()
          .equals(other.getPositionList());
      result = result && getStiffnessList()
          .equals(other.getStiffnessList());
      result = result && getDpList()
          .equals(other.getDpList());
      result = result && getDdpList()
          .equals(other.getDdpList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPositionCount() > 0) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPositionList().hashCode();
      }
      if (getStiffnessCount() > 0) {
        hash = (37 * hash) + STIFFNESS_FIELD_NUMBER;
        hash = (53 * hash) + getStiffnessList().hashCode();
      }
      if (getDpCount() > 0) {
        hash = (37 * hash) + DP_FIELD_NUMBER;
        hash = (53 * hash) + getDpList().hashCode();
      }
      if (getDdpCount() > 0) {
        hash = (37 * hash) + DDP_FIELD_NUMBER;
        hash = (53 * hash) + getDdpList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.JointData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.JointData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.JointData)
        de.naoth.rc.core.messages.FrameworkRepresentations.JointDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_JointData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_JointData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.JointData.class, de.naoth.rc.core.messages.FrameworkRepresentations.JointData.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.JointData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        position_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        stiffness_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        dp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        ddp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_JointData_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.JointData getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.JointData.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.JointData build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.JointData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.JointData buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.JointData result = new de.naoth.rc.core.messages.FrameworkRepresentations.JointData(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          position_ = java.util.Collections.unmodifiableList(position_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.position_ = position_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          stiffness_ = java.util.Collections.unmodifiableList(stiffness_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.stiffness_ = stiffness_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          dp_ = java.util.Collections.unmodifiableList(dp_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.dp_ = dp_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ddp_ = java.util.Collections.unmodifiableList(ddp_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ddp_ = ddp_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.JointData) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.JointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.JointData other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.JointData.getDefaultInstance()) return this;
        if (!other.position_.isEmpty()) {
          if (position_.isEmpty()) {
            position_ = other.position_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePositionIsMutable();
            position_.addAll(other.position_);
          }
          onChanged();
        }
        if (!other.stiffness_.isEmpty()) {
          if (stiffness_.isEmpty()) {
            stiffness_ = other.stiffness_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStiffnessIsMutable();
            stiffness_.addAll(other.stiffness_);
          }
          onChanged();
        }
        if (!other.dp_.isEmpty()) {
          if (dp_.isEmpty()) {
            dp_ = other.dp_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDpIsMutable();
            dp_.addAll(other.dp_);
          }
          onChanged();
        }
        if (!other.ddp_.isEmpty()) {
          if (ddp_.isEmpty()) {
            ddp_ = other.ddp_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDdpIsMutable();
            ddp_.addAll(other.ddp_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.JointData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.JointData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> position_ = java.util.Collections.emptyList();
      private void ensurePositionIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          position_ = new java.util.ArrayList<java.lang.Double>(position_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double position = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getPositionList() {
        return java.util.Collections.unmodifiableList(position_);
      }
      /**
       * <code>repeated double position = 1;</code>
       */
      public int getPositionCount() {
        return position_.size();
      }
      /**
       * <code>repeated double position = 1;</code>
       */
      public double getPosition(int index) {
        return position_.get(index);
      }
      /**
       * <code>repeated double position = 1;</code>
       */
      public Builder setPosition(
          int index, double value) {
        ensurePositionIsMutable();
        position_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double position = 1;</code>
       */
      public Builder addPosition(double value) {
        ensurePositionIsMutable();
        position_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double position = 1;</code>
       */
      public Builder addAllPosition(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensurePositionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, position_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double position = 1;</code>
       */
      public Builder clearPosition() {
        position_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> stiffness_ = java.util.Collections.emptyList();
      private void ensureStiffnessIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          stiffness_ = new java.util.ArrayList<java.lang.Double>(stiffness_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated double stiffness = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getStiffnessList() {
        return java.util.Collections.unmodifiableList(stiffness_);
      }
      /**
       * <code>repeated double stiffness = 2;</code>
       */
      public int getStiffnessCount() {
        return stiffness_.size();
      }
      /**
       * <code>repeated double stiffness = 2;</code>
       */
      public double getStiffness(int index) {
        return stiffness_.get(index);
      }
      /**
       * <code>repeated double stiffness = 2;</code>
       */
      public Builder setStiffness(
          int index, double value) {
        ensureStiffnessIsMutable();
        stiffness_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double stiffness = 2;</code>
       */
      public Builder addStiffness(double value) {
        ensureStiffnessIsMutable();
        stiffness_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double stiffness = 2;</code>
       */
      public Builder addAllStiffness(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureStiffnessIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stiffness_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double stiffness = 2;</code>
       */
      public Builder clearStiffness() {
        stiffness_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> dp_ = java.util.Collections.emptyList();
      private void ensureDpIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          dp_ = new java.util.ArrayList<java.lang.Double>(dp_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double dp = 3;</code>
       */
      public java.util.List<java.lang.Double>
          getDpList() {
        return java.util.Collections.unmodifiableList(dp_);
      }
      /**
       * <code>repeated double dp = 3;</code>
       */
      public int getDpCount() {
        return dp_.size();
      }
      /**
       * <code>repeated double dp = 3;</code>
       */
      public double getDp(int index) {
        return dp_.get(index);
      }
      /**
       * <code>repeated double dp = 3;</code>
       */
      public Builder setDp(
          int index, double value) {
        ensureDpIsMutable();
        dp_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double dp = 3;</code>
       */
      public Builder addDp(double value) {
        ensureDpIsMutable();
        dp_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double dp = 3;</code>
       */
      public Builder addAllDp(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDpIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dp_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double dp = 3;</code>
       */
      public Builder clearDp() {
        dp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> ddp_ = java.util.Collections.emptyList();
      private void ensureDdpIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ddp_ = new java.util.ArrayList<java.lang.Double>(ddp_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated double ddp = 4;</code>
       */
      public java.util.List<java.lang.Double>
          getDdpList() {
        return java.util.Collections.unmodifiableList(ddp_);
      }
      /**
       * <code>repeated double ddp = 4;</code>
       */
      public int getDdpCount() {
        return ddp_.size();
      }
      /**
       * <code>repeated double ddp = 4;</code>
       */
      public double getDdp(int index) {
        return ddp_.get(index);
      }
      /**
       * <code>repeated double ddp = 4;</code>
       */
      public Builder setDdp(
          int index, double value) {
        ensureDdpIsMutable();
        ddp_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double ddp = 4;</code>
       */
      public Builder addDdp(double value) {
        ensureDdpIsMutable();
        ddp_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double ddp = 4;</code>
       */
      public Builder addAllDdp(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDdpIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ddp_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double ddp = 4;</code>
       */
      public Builder clearDdp() {
        ddp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.JointData)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.JointData)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.JointData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.JointData();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.JointData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<JointData>
        PARSER = new com.google.protobuf.AbstractParser<JointData>() {
      public JointData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new JointData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JointData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JointData> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.JointData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SensorJointDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.SensorJointData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .naothmessages.JointData jointData = 1;</code>
     */
    boolean hasJointData();
    /**
     * <code>required .naothmessages.JointData jointData = 1;</code>
     */
    de.naoth.rc.core.messages.FrameworkRepresentations.JointData getJointData();
    /**
     * <code>required .naothmessages.JointData jointData = 1;</code>
     */
    de.naoth.rc.core.messages.FrameworkRepresentations.JointDataOrBuilder getJointDataOrBuilder();

    /**
     * <code>repeated double temperature = 2;</code>
     */
    java.util.List<java.lang.Double> getTemperatureList();
    /**
     * <code>repeated double temperature = 2;</code>
     */
    int getTemperatureCount();
    /**
     * <code>repeated double temperature = 2;</code>
     */
    double getTemperature(int index);

    /**
     * <code>repeated double electricCurrent = 3;</code>
     */
    java.util.List<java.lang.Double> getElectricCurrentList();
    /**
     * <code>repeated double electricCurrent = 3;</code>
     */
    int getElectricCurrentCount();
    /**
     * <code>repeated double electricCurrent = 3;</code>
     */
    double getElectricCurrent(int index);
  }
  /**
   * Protobuf type {@code naothmessages.SensorJointData}
   */
  public  static final class SensorJointData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.SensorJointData)
      SensorJointDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SensorJointData.newBuilder() to construct.
    private SensorJointData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorJointData() {
      temperature_ = java.util.Collections.emptyList();
      electricCurrent_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SensorJointData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              de.naoth.rc.core.messages.FrameworkRepresentations.JointData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = jointData_.toBuilder();
              }
              jointData_ = input.readMessage(de.naoth.rc.core.messages.FrameworkRepresentations.JointData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(jointData_);
                jointData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                temperature_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              temperature_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                temperature_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                temperature_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                electricCurrent_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              electricCurrent_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                electricCurrent_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                electricCurrent_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          temperature_ = java.util.Collections.unmodifiableList(temperature_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          electricCurrent_ = java.util.Collections.unmodifiableList(electricCurrent_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_SensorJointData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_SensorJointData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData.class, de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData.Builder.class);
    }

    private int bitField0_;
    public static final int JOINTDATA_FIELD_NUMBER = 1;
    private de.naoth.rc.core.messages.FrameworkRepresentations.JointData jointData_;
    /**
     * <code>required .naothmessages.JointData jointData = 1;</code>
     */
    public boolean hasJointData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .naothmessages.JointData jointData = 1;</code>
     */
    public de.naoth.rc.core.messages.FrameworkRepresentations.JointData getJointData() {
      return jointData_ == null ? de.naoth.rc.core.messages.FrameworkRepresentations.JointData.getDefaultInstance() : jointData_;
    }
    /**
     * <code>required .naothmessages.JointData jointData = 1;</code>
     */
    public de.naoth.rc.core.messages.FrameworkRepresentations.JointDataOrBuilder getJointDataOrBuilder() {
      return jointData_ == null ? de.naoth.rc.core.messages.FrameworkRepresentations.JointData.getDefaultInstance() : jointData_;
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> temperature_;
    /**
     * <code>repeated double temperature = 2;</code>
     */
    public java.util.List<java.lang.Double>
        getTemperatureList() {
      return temperature_;
    }
    /**
     * <code>repeated double temperature = 2;</code>
     */
    public int getTemperatureCount() {
      return temperature_.size();
    }
    /**
     * <code>repeated double temperature = 2;</code>
     */
    public double getTemperature(int index) {
      return temperature_.get(index);
    }

    public static final int ELECTRICCURRENT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> electricCurrent_;
    /**
     * <code>repeated double electricCurrent = 3;</code>
     */
    public java.util.List<java.lang.Double>
        getElectricCurrentList() {
      return electricCurrent_;
    }
    /**
     * <code>repeated double electricCurrent = 3;</code>
     */
    public int getElectricCurrentCount() {
      return electricCurrent_.size();
    }
    /**
     * <code>repeated double electricCurrent = 3;</code>
     */
    public double getElectricCurrent(int index) {
      return electricCurrent_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasJointData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getJointData());
      }
      for (int i = 0; i < temperature_.size(); i++) {
        output.writeDouble(2, temperature_.get(i));
      }
      for (int i = 0; i < electricCurrent_.size(); i++) {
        output.writeDouble(3, electricCurrent_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getJointData());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getTemperatureList().size();
        size += dataSize;
        size += 1 * getTemperatureList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getElectricCurrentList().size();
        size += dataSize;
        size += 1 * getElectricCurrentList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData other = (de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData) obj;

      boolean result = true;
      result = result && (hasJointData() == other.hasJointData());
      if (hasJointData()) {
        result = result && getJointData()
            .equals(other.getJointData());
      }
      result = result && getTemperatureList()
          .equals(other.getTemperatureList());
      result = result && getElectricCurrentList()
          .equals(other.getElectricCurrentList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasJointData()) {
        hash = (37 * hash) + JOINTDATA_FIELD_NUMBER;
        hash = (53 * hash) + getJointData().hashCode();
      }
      if (getTemperatureCount() > 0) {
        hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + getTemperatureList().hashCode();
      }
      if (getElectricCurrentCount() > 0) {
        hash = (37 * hash) + ELECTRICCURRENT_FIELD_NUMBER;
        hash = (53 * hash) + getElectricCurrentList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.SensorJointData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.SensorJointData)
        de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_SensorJointData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_SensorJointData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData.class, de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getJointDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (jointDataBuilder_ == null) {
          jointData_ = null;
        } else {
          jointDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        temperature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        electricCurrent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_SensorJointData_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData result = new de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (jointDataBuilder_ == null) {
          result.jointData_ = jointData_;
        } else {
          result.jointData_ = jointDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          temperature_ = java.util.Collections.unmodifiableList(temperature_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.temperature_ = temperature_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          electricCurrent_ = java.util.Collections.unmodifiableList(electricCurrent_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.electricCurrent_ = electricCurrent_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData.getDefaultInstance()) return this;
        if (other.hasJointData()) {
          mergeJointData(other.getJointData());
        }
        if (!other.temperature_.isEmpty()) {
          if (temperature_.isEmpty()) {
            temperature_ = other.temperature_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTemperatureIsMutable();
            temperature_.addAll(other.temperature_);
          }
          onChanged();
        }
        if (!other.electricCurrent_.isEmpty()) {
          if (electricCurrent_.isEmpty()) {
            electricCurrent_ = other.electricCurrent_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureElectricCurrentIsMutable();
            electricCurrent_.addAll(other.electricCurrent_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasJointData()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private de.naoth.rc.core.messages.FrameworkRepresentations.JointData jointData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.FrameworkRepresentations.JointData, de.naoth.rc.core.messages.FrameworkRepresentations.JointData.Builder, de.naoth.rc.core.messages.FrameworkRepresentations.JointDataOrBuilder> jointDataBuilder_;
      /**
       * <code>required .naothmessages.JointData jointData = 1;</code>
       */
      public boolean hasJointData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .naothmessages.JointData jointData = 1;</code>
       */
      public de.naoth.rc.core.messages.FrameworkRepresentations.JointData getJointData() {
        if (jointDataBuilder_ == null) {
          return jointData_ == null ? de.naoth.rc.core.messages.FrameworkRepresentations.JointData.getDefaultInstance() : jointData_;
        } else {
          return jointDataBuilder_.getMessage();
        }
      }
      /**
       * <code>required .naothmessages.JointData jointData = 1;</code>
       */
      public Builder setJointData(de.naoth.rc.core.messages.FrameworkRepresentations.JointData value) {
        if (jointDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          jointData_ = value;
          onChanged();
        } else {
          jointDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .naothmessages.JointData jointData = 1;</code>
       */
      public Builder setJointData(
          de.naoth.rc.core.messages.FrameworkRepresentations.JointData.Builder builderForValue) {
        if (jointDataBuilder_ == null) {
          jointData_ = builderForValue.build();
          onChanged();
        } else {
          jointDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .naothmessages.JointData jointData = 1;</code>
       */
      public Builder mergeJointData(de.naoth.rc.core.messages.FrameworkRepresentations.JointData value) {
        if (jointDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              jointData_ != null &&
              jointData_ != de.naoth.rc.core.messages.FrameworkRepresentations.JointData.getDefaultInstance()) {
            jointData_ =
              de.naoth.rc.core.messages.FrameworkRepresentations.JointData.newBuilder(jointData_).mergeFrom(value).buildPartial();
          } else {
            jointData_ = value;
          }
          onChanged();
        } else {
          jointDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .naothmessages.JointData jointData = 1;</code>
       */
      public Builder clearJointData() {
        if (jointDataBuilder_ == null) {
          jointData_ = null;
          onChanged();
        } else {
          jointDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .naothmessages.JointData jointData = 1;</code>
       */
      public de.naoth.rc.core.messages.FrameworkRepresentations.JointData.Builder getJointDataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getJointDataFieldBuilder().getBuilder();
      }
      /**
       * <code>required .naothmessages.JointData jointData = 1;</code>
       */
      public de.naoth.rc.core.messages.FrameworkRepresentations.JointDataOrBuilder getJointDataOrBuilder() {
        if (jointDataBuilder_ != null) {
          return jointDataBuilder_.getMessageOrBuilder();
        } else {
          return jointData_ == null ?
              de.naoth.rc.core.messages.FrameworkRepresentations.JointData.getDefaultInstance() : jointData_;
        }
      }
      /**
       * <code>required .naothmessages.JointData jointData = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.FrameworkRepresentations.JointData, de.naoth.rc.core.messages.FrameworkRepresentations.JointData.Builder, de.naoth.rc.core.messages.FrameworkRepresentations.JointDataOrBuilder> 
          getJointDataFieldBuilder() {
        if (jointDataBuilder_ == null) {
          jointDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.FrameworkRepresentations.JointData, de.naoth.rc.core.messages.FrameworkRepresentations.JointData.Builder, de.naoth.rc.core.messages.FrameworkRepresentations.JointDataOrBuilder>(
                  getJointData(),
                  getParentForChildren(),
                  isClean());
          jointData_ = null;
        }
        return jointDataBuilder_;
      }

      private java.util.List<java.lang.Double> temperature_ = java.util.Collections.emptyList();
      private void ensureTemperatureIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          temperature_ = new java.util.ArrayList<java.lang.Double>(temperature_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated double temperature = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getTemperatureList() {
        return java.util.Collections.unmodifiableList(temperature_);
      }
      /**
       * <code>repeated double temperature = 2;</code>
       */
      public int getTemperatureCount() {
        return temperature_.size();
      }
      /**
       * <code>repeated double temperature = 2;</code>
       */
      public double getTemperature(int index) {
        return temperature_.get(index);
      }
      /**
       * <code>repeated double temperature = 2;</code>
       */
      public Builder setTemperature(
          int index, double value) {
        ensureTemperatureIsMutable();
        temperature_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double temperature = 2;</code>
       */
      public Builder addTemperature(double value) {
        ensureTemperatureIsMutable();
        temperature_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double temperature = 2;</code>
       */
      public Builder addAllTemperature(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureTemperatureIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, temperature_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double temperature = 2;</code>
       */
      public Builder clearTemperature() {
        temperature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> electricCurrent_ = java.util.Collections.emptyList();
      private void ensureElectricCurrentIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          electricCurrent_ = new java.util.ArrayList<java.lang.Double>(electricCurrent_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double electricCurrent = 3;</code>
       */
      public java.util.List<java.lang.Double>
          getElectricCurrentList() {
        return java.util.Collections.unmodifiableList(electricCurrent_);
      }
      /**
       * <code>repeated double electricCurrent = 3;</code>
       */
      public int getElectricCurrentCount() {
        return electricCurrent_.size();
      }
      /**
       * <code>repeated double electricCurrent = 3;</code>
       */
      public double getElectricCurrent(int index) {
        return electricCurrent_.get(index);
      }
      /**
       * <code>repeated double electricCurrent = 3;</code>
       */
      public Builder setElectricCurrent(
          int index, double value) {
        ensureElectricCurrentIsMutable();
        electricCurrent_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double electricCurrent = 3;</code>
       */
      public Builder addElectricCurrent(double value) {
        ensureElectricCurrentIsMutable();
        electricCurrent_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double electricCurrent = 3;</code>
       */
      public Builder addAllElectricCurrent(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureElectricCurrentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, electricCurrent_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double electricCurrent = 3;</code>
       */
      public Builder clearElectricCurrent() {
        electricCurrent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.SensorJointData)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.SensorJointData)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SensorJointData>
        PARSER = new com.google.protobuf.AbstractParser<SensorJointData>() {
      public SensorJointData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorJointData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorJointData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorJointData> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.SensorJointData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UltraSoundReceiveDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.UltraSoundReceiveData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 ultraSoundTimeStep = 1;</code>
     */
    boolean hasUltraSoundTimeStep();
    /**
     * <code>optional uint32 ultraSoundTimeStep = 1;</code>
     */
    int getUltraSoundTimeStep();

    /**
     * <code>required double rawdata = 2;</code>
     */
    boolean hasRawdata();
    /**
     * <code>required double rawdata = 2;</code>
     */
    double getRawdata();

    /**
     * <code>repeated double dataLeft = 3;</code>
     */
    java.util.List<java.lang.Double> getDataLeftList();
    /**
     * <code>repeated double dataLeft = 3;</code>
     */
    int getDataLeftCount();
    /**
     * <code>repeated double dataLeft = 3;</code>
     */
    double getDataLeft(int index);

    /**
     * <code>repeated double dataRight = 4;</code>
     */
    java.util.List<java.lang.Double> getDataRightList();
    /**
     * <code>repeated double dataRight = 4;</code>
     */
    int getDataRightCount();
    /**
     * <code>repeated double dataRight = 4;</code>
     */
    double getDataRight(int index);
  }
  /**
   * Protobuf type {@code naothmessages.UltraSoundReceiveData}
   */
  public  static final class UltraSoundReceiveData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.UltraSoundReceiveData)
      UltraSoundReceiveDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UltraSoundReceiveData.newBuilder() to construct.
    private UltraSoundReceiveData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UltraSoundReceiveData() {
      ultraSoundTimeStep_ = 0;
      rawdata_ = 0D;
      dataLeft_ = java.util.Collections.emptyList();
      dataRight_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UltraSoundReceiveData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ultraSoundTimeStep_ = input.readUInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              rawdata_ = input.readDouble();
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                dataLeft_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              dataLeft_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                dataLeft_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                dataLeft_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                dataRight_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              dataRight_.add(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                dataRight_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                dataRight_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          dataLeft_ = java.util.Collections.unmodifiableList(dataLeft_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          dataRight_ = java.util.Collections.unmodifiableList(dataRight_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_UltraSoundReceiveData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_UltraSoundReceiveData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData.class, de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData.Builder.class);
    }

    private int bitField0_;
    public static final int ULTRASOUNDTIMESTEP_FIELD_NUMBER = 1;
    private int ultraSoundTimeStep_;
    /**
     * <code>optional uint32 ultraSoundTimeStep = 1;</code>
     */
    public boolean hasUltraSoundTimeStep() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ultraSoundTimeStep = 1;</code>
     */
    public int getUltraSoundTimeStep() {
      return ultraSoundTimeStep_;
    }

    public static final int RAWDATA_FIELD_NUMBER = 2;
    private double rawdata_;
    /**
     * <code>required double rawdata = 2;</code>
     */
    public boolean hasRawdata() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double rawdata = 2;</code>
     */
    public double getRawdata() {
      return rawdata_;
    }

    public static final int DATALEFT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> dataLeft_;
    /**
     * <code>repeated double dataLeft = 3;</code>
     */
    public java.util.List<java.lang.Double>
        getDataLeftList() {
      return dataLeft_;
    }
    /**
     * <code>repeated double dataLeft = 3;</code>
     */
    public int getDataLeftCount() {
      return dataLeft_.size();
    }
    /**
     * <code>repeated double dataLeft = 3;</code>
     */
    public double getDataLeft(int index) {
      return dataLeft_.get(index);
    }

    public static final int DATARIGHT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> dataRight_;
    /**
     * <code>repeated double dataRight = 4;</code>
     */
    public java.util.List<java.lang.Double>
        getDataRightList() {
      return dataRight_;
    }
    /**
     * <code>repeated double dataRight = 4;</code>
     */
    public int getDataRightCount() {
      return dataRight_.size();
    }
    /**
     * <code>repeated double dataRight = 4;</code>
     */
    public double getDataRight(int index) {
      return dataRight_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRawdata()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ultraSoundTimeStep_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, rawdata_);
      }
      for (int i = 0; i < dataLeft_.size(); i++) {
        output.writeDouble(3, dataLeft_.get(i));
      }
      for (int i = 0; i < dataRight_.size(); i++) {
        output.writeDouble(4, dataRight_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ultraSoundTimeStep_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, rawdata_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDataLeftList().size();
        size += dataSize;
        size += 1 * getDataLeftList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDataRightList().size();
        size += dataSize;
        size += 1 * getDataRightList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData other = (de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData) obj;

      boolean result = true;
      result = result && (hasUltraSoundTimeStep() == other.hasUltraSoundTimeStep());
      if (hasUltraSoundTimeStep()) {
        result = result && (getUltraSoundTimeStep()
            == other.getUltraSoundTimeStep());
      }
      result = result && (hasRawdata() == other.hasRawdata());
      if (hasRawdata()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getRawdata())
            == java.lang.Double.doubleToLongBits(
                other.getRawdata()));
      }
      result = result && getDataLeftList()
          .equals(other.getDataLeftList());
      result = result && getDataRightList()
          .equals(other.getDataRightList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUltraSoundTimeStep()) {
        hash = (37 * hash) + ULTRASOUNDTIMESTEP_FIELD_NUMBER;
        hash = (53 * hash) + getUltraSoundTimeStep();
      }
      if (hasRawdata()) {
        hash = (37 * hash) + RAWDATA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRawdata()));
      }
      if (getDataLeftCount() > 0) {
        hash = (37 * hash) + DATALEFT_FIELD_NUMBER;
        hash = (53 * hash) + getDataLeftList().hashCode();
      }
      if (getDataRightCount() > 0) {
        hash = (37 * hash) + DATARIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getDataRightList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.UltraSoundReceiveData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.UltraSoundReceiveData)
        de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_UltraSoundReceiveData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_UltraSoundReceiveData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData.class, de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        ultraSoundTimeStep_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        rawdata_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        dataLeft_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        dataRight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_UltraSoundReceiveData_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData result = new de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ultraSoundTimeStep_ = ultraSoundTimeStep_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rawdata_ = rawdata_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          dataLeft_ = java.util.Collections.unmodifiableList(dataLeft_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.dataLeft_ = dataLeft_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          dataRight_ = java.util.Collections.unmodifiableList(dataRight_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.dataRight_ = dataRight_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData.getDefaultInstance()) return this;
        if (other.hasUltraSoundTimeStep()) {
          setUltraSoundTimeStep(other.getUltraSoundTimeStep());
        }
        if (other.hasRawdata()) {
          setRawdata(other.getRawdata());
        }
        if (!other.dataLeft_.isEmpty()) {
          if (dataLeft_.isEmpty()) {
            dataLeft_ = other.dataLeft_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDataLeftIsMutable();
            dataLeft_.addAll(other.dataLeft_);
          }
          onChanged();
        }
        if (!other.dataRight_.isEmpty()) {
          if (dataRight_.isEmpty()) {
            dataRight_ = other.dataRight_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDataRightIsMutable();
            dataRight_.addAll(other.dataRight_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRawdata()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ultraSoundTimeStep_ ;
      /**
       * <code>optional uint32 ultraSoundTimeStep = 1;</code>
       */
      public boolean hasUltraSoundTimeStep() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ultraSoundTimeStep = 1;</code>
       */
      public int getUltraSoundTimeStep() {
        return ultraSoundTimeStep_;
      }
      /**
       * <code>optional uint32 ultraSoundTimeStep = 1;</code>
       */
      public Builder setUltraSoundTimeStep(int value) {
        bitField0_ |= 0x00000001;
        ultraSoundTimeStep_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ultraSoundTimeStep = 1;</code>
       */
      public Builder clearUltraSoundTimeStep() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ultraSoundTimeStep_ = 0;
        onChanged();
        return this;
      }

      private double rawdata_ ;
      /**
       * <code>required double rawdata = 2;</code>
       */
      public boolean hasRawdata() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double rawdata = 2;</code>
       */
      public double getRawdata() {
        return rawdata_;
      }
      /**
       * <code>required double rawdata = 2;</code>
       */
      public Builder setRawdata(double value) {
        bitField0_ |= 0x00000002;
        rawdata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rawdata = 2;</code>
       */
      public Builder clearRawdata() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rawdata_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> dataLeft_ = java.util.Collections.emptyList();
      private void ensureDataLeftIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          dataLeft_ = new java.util.ArrayList<java.lang.Double>(dataLeft_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double dataLeft = 3;</code>
       */
      public java.util.List<java.lang.Double>
          getDataLeftList() {
        return java.util.Collections.unmodifiableList(dataLeft_);
      }
      /**
       * <code>repeated double dataLeft = 3;</code>
       */
      public int getDataLeftCount() {
        return dataLeft_.size();
      }
      /**
       * <code>repeated double dataLeft = 3;</code>
       */
      public double getDataLeft(int index) {
        return dataLeft_.get(index);
      }
      /**
       * <code>repeated double dataLeft = 3;</code>
       */
      public Builder setDataLeft(
          int index, double value) {
        ensureDataLeftIsMutable();
        dataLeft_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double dataLeft = 3;</code>
       */
      public Builder addDataLeft(double value) {
        ensureDataLeftIsMutable();
        dataLeft_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double dataLeft = 3;</code>
       */
      public Builder addAllDataLeft(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDataLeftIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataLeft_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double dataLeft = 3;</code>
       */
      public Builder clearDataLeft() {
        dataLeft_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> dataRight_ = java.util.Collections.emptyList();
      private void ensureDataRightIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          dataRight_ = new java.util.ArrayList<java.lang.Double>(dataRight_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated double dataRight = 4;</code>
       */
      public java.util.List<java.lang.Double>
          getDataRightList() {
        return java.util.Collections.unmodifiableList(dataRight_);
      }
      /**
       * <code>repeated double dataRight = 4;</code>
       */
      public int getDataRightCount() {
        return dataRight_.size();
      }
      /**
       * <code>repeated double dataRight = 4;</code>
       */
      public double getDataRight(int index) {
        return dataRight_.get(index);
      }
      /**
       * <code>repeated double dataRight = 4;</code>
       */
      public Builder setDataRight(
          int index, double value) {
        ensureDataRightIsMutable();
        dataRight_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double dataRight = 4;</code>
       */
      public Builder addDataRight(double value) {
        ensureDataRightIsMutable();
        dataRight_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double dataRight = 4;</code>
       */
      public Builder addAllDataRight(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDataRightIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataRight_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double dataRight = 4;</code>
       */
      public Builder clearDataRight() {
        dataRight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.UltraSoundReceiveData)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.UltraSoundReceiveData)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<UltraSoundReceiveData>
        PARSER = new com.google.protobuf.AbstractParser<UltraSoundReceiveData>() {
      public UltraSoundReceiveData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new UltraSoundReceiveData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UltraSoundReceiveData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UltraSoundReceiveData> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.UltraSoundReceiveData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FrameInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.FrameInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 frameNumber = 1;</code>
     */
    boolean hasFrameNumber();
    /**
     * <code>required uint32 frameNumber = 1;</code>
     */
    int getFrameNumber();

    /**
     * <code>required uint32 time = 2;</code>
     */
    boolean hasTime();
    /**
     * <code>required uint32 time = 2;</code>
     */
    int getTime();
  }
  /**
   * Protobuf type {@code naothmessages.FrameInfo}
   */
  public  static final class FrameInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.FrameInfo)
      FrameInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FrameInfo.newBuilder() to construct.
    private FrameInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FrameInfo() {
      frameNumber_ = 0;
      time_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FrameInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              frameNumber_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FrameInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FrameInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo.class, de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo.Builder.class);
    }

    private int bitField0_;
    public static final int FRAMENUMBER_FIELD_NUMBER = 1;
    private int frameNumber_;
    /**
     * <code>required uint32 frameNumber = 1;</code>
     */
    public boolean hasFrameNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 frameNumber = 1;</code>
     */
    public int getFrameNumber() {
      return frameNumber_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>required uint32 time = 2;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFrameNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, frameNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, time_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frameNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, time_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo other = (de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo) obj;

      boolean result = true;
      result = result && (hasFrameNumber() == other.hasFrameNumber());
      if (hasFrameNumber()) {
        result = result && (getFrameNumber()
            == other.getFrameNumber());
      }
      result = result && (hasTime() == other.hasTime());
      if (hasTime()) {
        result = result && (getTime()
            == other.getTime());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrameNumber()) {
        hash = (37 * hash) + FRAMENUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getFrameNumber();
      }
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.FrameInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.FrameInfo)
        de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FrameInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FrameInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo.class, de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        frameNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FrameInfo_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo result = new de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frameNumber_ = frameNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo.getDefaultInstance()) return this;
        if (other.hasFrameNumber()) {
          setFrameNumber(other.getFrameNumber());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFrameNumber()) {
          return false;
        }
        if (!hasTime()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int frameNumber_ ;
      /**
       * <code>required uint32 frameNumber = 1;</code>
       */
      public boolean hasFrameNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 frameNumber = 1;</code>
       */
      public int getFrameNumber() {
        return frameNumber_;
      }
      /**
       * <code>required uint32 frameNumber = 1;</code>
       */
      public Builder setFrameNumber(int value) {
        bitField0_ |= 0x00000001;
        frameNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 frameNumber = 1;</code>
       */
      public Builder clearFrameNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frameNumber_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <code>required uint32 time = 2;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 time = 2;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>required uint32 time = 2;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 time = 2;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.FrameInfo)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.FrameInfo)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FrameInfo>
        PARSER = new com.google.protobuf.AbstractParser<FrameInfo>() {
      public FrameInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FrameInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FrameInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FrameInfo> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.FrameInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RobotInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.RobotInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string platform = 1;</code>
     */
    boolean hasPlatform();
    /**
     * <code>optional string platform = 1;</code>
     */
    java.lang.String getPlatform();
    /**
     * <code>optional string platform = 1;</code>
     */
    com.google.protobuf.ByteString
        getPlatformBytes();

    /**
     * <code>optional string bodyNickName = 2;</code>
     */
    boolean hasBodyNickName();
    /**
     * <code>optional string bodyNickName = 2;</code>
     */
    java.lang.String getBodyNickName();
    /**
     * <code>optional string bodyNickName = 2;</code>
     */
    com.google.protobuf.ByteString
        getBodyNickNameBytes();

    /**
     * <code>optional string headNickName = 3;</code>
     */
    boolean hasHeadNickName();
    /**
     * <code>optional string headNickName = 3;</code>
     */
    java.lang.String getHeadNickName();
    /**
     * <code>optional string headNickName = 3;</code>
     */
    com.google.protobuf.ByteString
        getHeadNickNameBytes();

    /**
     * <code>optional string bodyID = 4;</code>
     */
    boolean hasBodyID();
    /**
     * <code>optional string bodyID = 4;</code>
     */
    java.lang.String getBodyID();
    /**
     * <code>optional string bodyID = 4;</code>
     */
    com.google.protobuf.ByteString
        getBodyIDBytes();

    /**
     * <code>optional uint32 basicTimeStep = 5;</code>
     */
    boolean hasBasicTimeStep();
    /**
     * <code>optional uint32 basicTimeStep = 5;</code>
     */
    int getBasicTimeStep();
  }
  /**
   * Protobuf type {@code naothmessages.RobotInfo}
   */
  public  static final class RobotInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.RobotInfo)
      RobotInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RobotInfo.newBuilder() to construct.
    private RobotInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RobotInfo() {
      platform_ = "";
      bodyNickName_ = "";
      headNickName_ = "";
      bodyID_ = "";
      basicTimeStep_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RobotInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              platform_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              bodyNickName_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              headNickName_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              bodyID_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              basicTimeStep_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_RobotInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_RobotInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo.class, de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo.Builder.class);
    }

    private int bitField0_;
    public static final int PLATFORM_FIELD_NUMBER = 1;
    private volatile java.lang.Object platform_;
    /**
     * <code>optional string platform = 1;</code>
     */
    public boolean hasPlatform() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string platform = 1;</code>
     */
    public java.lang.String getPlatform() {
      java.lang.Object ref = platform_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          platform_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string platform = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPlatformBytes() {
      java.lang.Object ref = platform_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        platform_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BODYNICKNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object bodyNickName_;
    /**
     * <code>optional string bodyNickName = 2;</code>
     */
    public boolean hasBodyNickName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string bodyNickName = 2;</code>
     */
    public java.lang.String getBodyNickName() {
      java.lang.Object ref = bodyNickName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bodyNickName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string bodyNickName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBodyNickNameBytes() {
      java.lang.Object ref = bodyNickName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bodyNickName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HEADNICKNAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object headNickName_;
    /**
     * <code>optional string headNickName = 3;</code>
     */
    public boolean hasHeadNickName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string headNickName = 3;</code>
     */
    public java.lang.String getHeadNickName() {
      java.lang.Object ref = headNickName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headNickName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string headNickName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getHeadNickNameBytes() {
      java.lang.Object ref = headNickName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headNickName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BODYID_FIELD_NUMBER = 4;
    private volatile java.lang.Object bodyID_;
    /**
     * <code>optional string bodyID = 4;</code>
     */
    public boolean hasBodyID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string bodyID = 4;</code>
     */
    public java.lang.String getBodyID() {
      java.lang.Object ref = bodyID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bodyID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string bodyID = 4;</code>
     */
    public com.google.protobuf.ByteString
        getBodyIDBytes() {
      java.lang.Object ref = bodyID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bodyID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BASICTIMESTEP_FIELD_NUMBER = 5;
    private int basicTimeStep_;
    /**
     * <code>optional uint32 basicTimeStep = 5;</code>
     */
    public boolean hasBasicTimeStep() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 basicTimeStep = 5;</code>
     */
    public int getBasicTimeStep() {
      return basicTimeStep_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, platform_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, bodyNickName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, headNickName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, bodyID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, basicTimeStep_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, platform_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, bodyNickName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, headNickName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, bodyID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, basicTimeStep_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo other = (de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo) obj;

      boolean result = true;
      result = result && (hasPlatform() == other.hasPlatform());
      if (hasPlatform()) {
        result = result && getPlatform()
            .equals(other.getPlatform());
      }
      result = result && (hasBodyNickName() == other.hasBodyNickName());
      if (hasBodyNickName()) {
        result = result && getBodyNickName()
            .equals(other.getBodyNickName());
      }
      result = result && (hasHeadNickName() == other.hasHeadNickName());
      if (hasHeadNickName()) {
        result = result && getHeadNickName()
            .equals(other.getHeadNickName());
      }
      result = result && (hasBodyID() == other.hasBodyID());
      if (hasBodyID()) {
        result = result && getBodyID()
            .equals(other.getBodyID());
      }
      result = result && (hasBasicTimeStep() == other.hasBasicTimeStep());
      if (hasBasicTimeStep()) {
        result = result && (getBasicTimeStep()
            == other.getBasicTimeStep());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlatform()) {
        hash = (37 * hash) + PLATFORM_FIELD_NUMBER;
        hash = (53 * hash) + getPlatform().hashCode();
      }
      if (hasBodyNickName()) {
        hash = (37 * hash) + BODYNICKNAME_FIELD_NUMBER;
        hash = (53 * hash) + getBodyNickName().hashCode();
      }
      if (hasHeadNickName()) {
        hash = (37 * hash) + HEADNICKNAME_FIELD_NUMBER;
        hash = (53 * hash) + getHeadNickName().hashCode();
      }
      if (hasBodyID()) {
        hash = (37 * hash) + BODYID_FIELD_NUMBER;
        hash = (53 * hash) + getBodyID().hashCode();
      }
      if (hasBasicTimeStep()) {
        hash = (37 * hash) + BASICTIMESTEP_FIELD_NUMBER;
        hash = (53 * hash) + getBasicTimeStep();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.RobotInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.RobotInfo)
        de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_RobotInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_RobotInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo.class, de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        platform_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        bodyNickName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headNickName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        bodyID_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        basicTimeStep_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_RobotInfo_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo result = new de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.platform_ = platform_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bodyNickName_ = bodyNickName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headNickName_ = headNickName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bodyID_ = bodyID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.basicTimeStep_ = basicTimeStep_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo.getDefaultInstance()) return this;
        if (other.hasPlatform()) {
          bitField0_ |= 0x00000001;
          platform_ = other.platform_;
          onChanged();
        }
        if (other.hasBodyNickName()) {
          bitField0_ |= 0x00000002;
          bodyNickName_ = other.bodyNickName_;
          onChanged();
        }
        if (other.hasHeadNickName()) {
          bitField0_ |= 0x00000004;
          headNickName_ = other.headNickName_;
          onChanged();
        }
        if (other.hasBodyID()) {
          bitField0_ |= 0x00000008;
          bodyID_ = other.bodyID_;
          onChanged();
        }
        if (other.hasBasicTimeStep()) {
          setBasicTimeStep(other.getBasicTimeStep());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object platform_ = "";
      /**
       * <code>optional string platform = 1;</code>
       */
      public boolean hasPlatform() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string platform = 1;</code>
       */
      public java.lang.String getPlatform() {
        java.lang.Object ref = platform_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            platform_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string platform = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlatformBytes() {
        java.lang.Object ref = platform_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          platform_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string platform = 1;</code>
       */
      public Builder setPlatform(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        platform_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string platform = 1;</code>
       */
      public Builder clearPlatform() {
        bitField0_ = (bitField0_ & ~0x00000001);
        platform_ = getDefaultInstance().getPlatform();
        onChanged();
        return this;
      }
      /**
       * <code>optional string platform = 1;</code>
       */
      public Builder setPlatformBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        platform_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object bodyNickName_ = "";
      /**
       * <code>optional string bodyNickName = 2;</code>
       */
      public boolean hasBodyNickName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string bodyNickName = 2;</code>
       */
      public java.lang.String getBodyNickName() {
        java.lang.Object ref = bodyNickName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            bodyNickName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string bodyNickName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBodyNickNameBytes() {
        java.lang.Object ref = bodyNickName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bodyNickName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string bodyNickName = 2;</code>
       */
      public Builder setBodyNickName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bodyNickName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string bodyNickName = 2;</code>
       */
      public Builder clearBodyNickName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bodyNickName_ = getDefaultInstance().getBodyNickName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string bodyNickName = 2;</code>
       */
      public Builder setBodyNickNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bodyNickName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object headNickName_ = "";
      /**
       * <code>optional string headNickName = 3;</code>
       */
      public boolean hasHeadNickName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string headNickName = 3;</code>
       */
      public java.lang.String getHeadNickName() {
        java.lang.Object ref = headNickName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            headNickName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string headNickName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getHeadNickNameBytes() {
        java.lang.Object ref = headNickName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headNickName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string headNickName = 3;</code>
       */
      public Builder setHeadNickName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headNickName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string headNickName = 3;</code>
       */
      public Builder clearHeadNickName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headNickName_ = getDefaultInstance().getHeadNickName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string headNickName = 3;</code>
       */
      public Builder setHeadNickNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        headNickName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object bodyID_ = "";
      /**
       * <code>optional string bodyID = 4;</code>
       */
      public boolean hasBodyID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string bodyID = 4;</code>
       */
      public java.lang.String getBodyID() {
        java.lang.Object ref = bodyID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            bodyID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string bodyID = 4;</code>
       */
      public com.google.protobuf.ByteString
          getBodyIDBytes() {
        java.lang.Object ref = bodyID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bodyID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string bodyID = 4;</code>
       */
      public Builder setBodyID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        bodyID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string bodyID = 4;</code>
       */
      public Builder clearBodyID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bodyID_ = getDefaultInstance().getBodyID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string bodyID = 4;</code>
       */
      public Builder setBodyIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        bodyID_ = value;
        onChanged();
        return this;
      }

      private int basicTimeStep_ ;
      /**
       * <code>optional uint32 basicTimeStep = 5;</code>
       */
      public boolean hasBasicTimeStep() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 basicTimeStep = 5;</code>
       */
      public int getBasicTimeStep() {
        return basicTimeStep_;
      }
      /**
       * <code>optional uint32 basicTimeStep = 5;</code>
       */
      public Builder setBasicTimeStep(int value) {
        bitField0_ |= 0x00000010;
        basicTimeStep_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 basicTimeStep = 5;</code>
       */
      public Builder clearBasicTimeStep() {
        bitField0_ = (bitField0_ & ~0x00000010);
        basicTimeStep_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.RobotInfo)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.RobotInfo)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RobotInfo>
        PARSER = new com.google.protobuf.AbstractParser<RobotInfo>() {
      public RobotInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RobotInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RobotInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RobotInfo> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.RobotInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FSRDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.FSRData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double force = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<java.lang.Double> getForceList();
    /**
     * <code>repeated double force = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getForceCount();
    /**
     * <code>repeated double force = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getForce(int index);

    /**
     * <code>repeated double data = 2;</code>
     */
    java.util.List<java.lang.Double> getDataList();
    /**
     * <code>repeated double data = 2;</code>
     */
    int getDataCount();
    /**
     * <code>repeated double data = 2;</code>
     */
    double getData(int index);

    /**
     * <code>repeated bool valid = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<java.lang.Boolean> getValidList();
    /**
     * <code>repeated bool valid = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getValidCount();
    /**
     * <code>repeated bool valid = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean getValid(int index);
  }
  /**
   * Protobuf type {@code naothmessages.FSRData}
   */
  public  static final class FSRData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.FSRData)
      FSRDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FSRData.newBuilder() to construct.
    private FSRData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FSRData() {
      force_ = java.util.Collections.emptyList();
      data_ = java.util.Collections.emptyList();
      valid_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FSRData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                force_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              force_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                force_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                force_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                data_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              data_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                data_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                data_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                valid_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000004;
              }
              valid_.add(input.readBool());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                valid_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                valid_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          force_ = java.util.Collections.unmodifiableList(force_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          valid_ = java.util.Collections.unmodifiableList(valid_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FSRData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FSRData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.FSRData.class, de.naoth.rc.core.messages.FrameworkRepresentations.FSRData.Builder.class);
    }

    public static final int FORCE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> force_;
    /**
     * <code>repeated double force = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<java.lang.Double>
        getForceList() {
      return force_;
    }
    /**
     * <code>repeated double force = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getForceCount() {
      return force_.size();
    }
    /**
     * <code>repeated double force = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getForce(int index) {
      return force_.get(index);
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> data_;
    /**
     * <code>repeated double data = 2;</code>
     */
    public java.util.List<java.lang.Double>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated double data = 2;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated double data = 2;</code>
     */
    public double getData(int index) {
      return data_.get(index);
    }

    public static final int VALID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Boolean> valid_;
    /**
     * <code>repeated bool valid = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<java.lang.Boolean>
        getValidList() {
      return valid_;
    }
    /**
     * <code>repeated bool valid = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getValidCount() {
      return valid_.size();
    }
    /**
     * <code>repeated bool valid = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean getValid(int index) {
      return valid_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < force_.size(); i++) {
        output.writeDouble(1, force_.get(i));
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeDouble(2, data_.get(i));
      }
      for (int i = 0; i < valid_.size(); i++) {
        output.writeBool(3, valid_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getForceList().size();
        size += dataSize;
        size += 1 * getForceList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDataList().size();
        size += dataSize;
        size += 1 * getDataList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getValidList().size();
        size += dataSize;
        size += 1 * getValidList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.FSRData)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.FSRData other = (de.naoth.rc.core.messages.FrameworkRepresentations.FSRData) obj;

      boolean result = true;
      result = result && getForceList()
          .equals(other.getForceList());
      result = result && getDataList()
          .equals(other.getDataList());
      result = result && getValidList()
          .equals(other.getValidList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getForceCount() > 0) {
        hash = (37 * hash) + FORCE_FIELD_NUMBER;
        hash = (53 * hash) + getForceList().hashCode();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      if (getValidCount() > 0) {
        hash = (37 * hash) + VALID_FIELD_NUMBER;
        hash = (53 * hash) + getValidList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.FSRData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.FSRData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.FSRData)
        de.naoth.rc.core.messages.FrameworkRepresentations.FSRDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FSRData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FSRData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.FSRData.class, de.naoth.rc.core.messages.FrameworkRepresentations.FSRData.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.FSRData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        force_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        valid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_FSRData_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.FSRData getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.FSRData.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.FSRData build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.FSRData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.FSRData buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.FSRData result = new de.naoth.rc.core.messages.FrameworkRepresentations.FSRData(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          force_ = java.util.Collections.unmodifiableList(force_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.force_ = force_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.data_ = data_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          valid_ = java.util.Collections.unmodifiableList(valid_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.valid_ = valid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.FSRData) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.FSRData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.FSRData other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.FSRData.getDefaultInstance()) return this;
        if (!other.force_.isEmpty()) {
          if (force_.isEmpty()) {
            force_ = other.force_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureForceIsMutable();
            force_.addAll(other.force_);
          }
          onChanged();
        }
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
        if (!other.valid_.isEmpty()) {
          if (valid_.isEmpty()) {
            valid_ = other.valid_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValidIsMutable();
            valid_.addAll(other.valid_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.FSRData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.FSRData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> force_ = java.util.Collections.emptyList();
      private void ensureForceIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          force_ = new java.util.ArrayList<java.lang.Double>(force_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double force = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<java.lang.Double>
          getForceList() {
        return java.util.Collections.unmodifiableList(force_);
      }
      /**
       * <code>repeated double force = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getForceCount() {
        return force_.size();
      }
      /**
       * <code>repeated double force = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getForce(int index) {
        return force_.get(index);
      }
      /**
       * <code>repeated double force = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setForce(
          int index, double value) {
        ensureForceIsMutable();
        force_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double force = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addForce(double value) {
        ensureForceIsMutable();
        force_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double force = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllForce(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureForceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, force_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double force = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearForce() {
        force_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> data_ = java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = new java.util.ArrayList<java.lang.Double>(data_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated double data = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getDataList() {
        return java.util.Collections.unmodifiableList(data_);
      }
      /**
       * <code>repeated double data = 2;</code>
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated double data = 2;</code>
       */
      public double getData(int index) {
        return data_.get(index);
      }
      /**
       * <code>repeated double data = 2;</code>
       */
      public Builder setData(
          int index, double value) {
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double data = 2;</code>
       */
      public Builder addData(double value) {
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double data = 2;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double data = 2;</code>
       */
      public Builder clearData() {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> valid_ = java.util.Collections.emptyList();
      private void ensureValidIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          valid_ = new java.util.ArrayList<java.lang.Boolean>(valid_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated bool valid = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<java.lang.Boolean>
          getValidList() {
        return java.util.Collections.unmodifiableList(valid_);
      }
      /**
       * <code>repeated bool valid = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getValidCount() {
        return valid_.size();
      }
      /**
       * <code>repeated bool valid = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean getValid(int index) {
        return valid_.get(index);
      }
      /**
       * <code>repeated bool valid = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setValid(
          int index, boolean value) {
        ensureValidIsMutable();
        valid_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool valid = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addValid(boolean value) {
        ensureValidIsMutable();
        valid_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool valid = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllValid(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureValidIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valid_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool valid = 3 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearValid() {
        valid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.FSRData)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.FSRData)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.FSRData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.FSRData();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.FSRData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FSRData>
        PARSER = new com.google.protobuf.AbstractParser<FSRData>() {
      public FSRData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FSRData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FSRData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FSRData> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.FSRData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccelerometerDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.AccelerometerData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<java.lang.Double> getLegacyPackedDataList();
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getLegacyPackedDataCount();
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getLegacyPackedData(int index);

    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getData();
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getDataOrBuilder();

    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    boolean hasRawData();
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getRawData();
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getRawDataOrBuilder();
  }
  /**
   * Protobuf type {@code naothmessages.AccelerometerData}
   */
  public  static final class AccelerometerData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.AccelerometerData)
      AccelerometerDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AccelerometerData.newBuilder() to construct.
    private AccelerometerData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccelerometerData() {
      legacyPackedData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AccelerometerData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                legacyPackedData_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              legacyPackedData_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                legacyPackedData_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                legacyPackedData_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(de.naoth.rc.core.messages.CommonTypes.DoubleVector3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = rawData_.toBuilder();
              }
              rawData_ = input.readMessage(de.naoth.rc.core.messages.CommonTypes.DoubleVector3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rawData_);
                rawData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          legacyPackedData_ = java.util.Collections.unmodifiableList(legacyPackedData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_AccelerometerData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_AccelerometerData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData.class, de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData.Builder.class);
    }

    private int bitField0_;
    public static final int LEGACYPACKEDDATA_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> legacyPackedData_;
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<java.lang.Double>
        getLegacyPackedDataList() {
      return legacyPackedData_;
    }
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getLegacyPackedDataCount() {
      return legacyPackedData_.size();
    }
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getLegacyPackedData(int index) {
      return legacyPackedData_.get(index);
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private de.naoth.rc.core.messages.CommonTypes.DoubleVector3 data_;
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getData() {
      return data_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : data_;
    }
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getDataOrBuilder() {
      return data_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : data_;
    }

    public static final int RAWDATA_FIELD_NUMBER = 3;
    private de.naoth.rc.core.messages.CommonTypes.DoubleVector3 rawData_;
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    public boolean hasRawData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getRawData() {
      return rawData_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : rawData_;
    }
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getRawDataOrBuilder() {
      return rawData_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : rawData_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasData()) {
        if (!getData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRawData()) {
        if (!getRawData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < legacyPackedData_.size(); i++) {
        output.writeDouble(1, legacyPackedData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, getData());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getRawData());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getLegacyPackedDataList().size();
        size += dataSize;
        size += 1 * getLegacyPackedDataList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getData());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRawData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData other = (de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData) obj;

      boolean result = true;
      result = result && getLegacyPackedDataList()
          .equals(other.getLegacyPackedDataList());
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && (hasRawData() == other.hasRawData());
      if (hasRawData()) {
        result = result && getRawData()
            .equals(other.getRawData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLegacyPackedDataCount() > 0) {
        hash = (37 * hash) + LEGACYPACKEDDATA_FIELD_NUMBER;
        hash = (53 * hash) + getLegacyPackedDataList().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (hasRawData()) {
        hash = (37 * hash) + RAWDATA_FIELD_NUMBER;
        hash = (53 * hash) + getRawData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.AccelerometerData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.AccelerometerData)
        de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_AccelerometerData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_AccelerometerData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData.class, de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDataFieldBuilder();
          getRawDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        legacyPackedData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rawDataBuilder_ == null) {
          rawData_ = null;
        } else {
          rawDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_AccelerometerData_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData result = new de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          legacyPackedData_ = java.util.Collections.unmodifiableList(legacyPackedData_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.legacyPackedData_ = legacyPackedData_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rawDataBuilder_ == null) {
          result.rawData_ = rawData_;
        } else {
          result.rawData_ = rawDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData.getDefaultInstance()) return this;
        if (!other.legacyPackedData_.isEmpty()) {
          if (legacyPackedData_.isEmpty()) {
            legacyPackedData_ = other.legacyPackedData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureLegacyPackedDataIsMutable();
            legacyPackedData_.addAll(other.legacyPackedData_);
          }
          onChanged();
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (other.hasRawData()) {
          mergeRawData(other.getRawData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasData()) {
          if (!getData().isInitialized()) {
            return false;
          }
        }
        if (hasRawData()) {
          if (!getRawData().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> legacyPackedData_ = java.util.Collections.emptyList();
      private void ensureLegacyPackedDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          legacyPackedData_ = new java.util.ArrayList<java.lang.Double>(legacyPackedData_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<java.lang.Double>
          getLegacyPackedDataList() {
        return java.util.Collections.unmodifiableList(legacyPackedData_);
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getLegacyPackedDataCount() {
        return legacyPackedData_.size();
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getLegacyPackedData(int index) {
        return legacyPackedData_.get(index);
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setLegacyPackedData(
          int index, double value) {
        ensureLegacyPackedDataIsMutable();
        legacyPackedData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addLegacyPackedData(double value) {
        ensureLegacyPackedDataIsMutable();
        legacyPackedData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllLegacyPackedData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureLegacyPackedDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, legacyPackedData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearLegacyPackedData() {
        legacyPackedData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private de.naoth.rc.core.messages.CommonTypes.DoubleVector3 data_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder> dataBuilder_;
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public Builder setData(de.naoth.rc.core.messages.CommonTypes.DoubleVector3 value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public Builder setData(
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public Builder mergeData(de.naoth.rc.core.messages.CommonTypes.DoubleVector3 value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              data_ != null &&
              data_ != de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance()) {
            data_ =
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder getDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private de.naoth.rc.core.messages.CommonTypes.DoubleVector3 rawData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder> rawDataBuilder_;
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public boolean hasRawData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getRawData() {
        if (rawDataBuilder_ == null) {
          return rawData_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : rawData_;
        } else {
          return rawDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public Builder setRawData(de.naoth.rc.core.messages.CommonTypes.DoubleVector3 value) {
        if (rawDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rawData_ = value;
          onChanged();
        } else {
          rawDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public Builder setRawData(
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder builderForValue) {
        if (rawDataBuilder_ == null) {
          rawData_ = builderForValue.build();
          onChanged();
        } else {
          rawDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public Builder mergeRawData(de.naoth.rc.core.messages.CommonTypes.DoubleVector3 value) {
        if (rawDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rawData_ != null &&
              rawData_ != de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance()) {
            rawData_ =
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.newBuilder(rawData_).mergeFrom(value).buildPartial();
          } else {
            rawData_ = value;
          }
          onChanged();
        } else {
          rawDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public Builder clearRawData() {
        if (rawDataBuilder_ == null) {
          rawData_ = null;
          onChanged();
        } else {
          rawDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder getRawDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRawDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getRawDataOrBuilder() {
        if (rawDataBuilder_ != null) {
          return rawDataBuilder_.getMessageOrBuilder();
        } else {
          return rawData_ == null ?
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : rawData_;
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder> 
          getRawDataFieldBuilder() {
        if (rawDataBuilder_ == null) {
          rawDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder>(
                  getRawData(),
                  getParentForChildren(),
                  isClean());
          rawData_ = null;
        }
        return rawDataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.AccelerometerData)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.AccelerometerData)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AccelerometerData>
        PARSER = new com.google.protobuf.AbstractParser<AccelerometerData>() {
      public AccelerometerData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AccelerometerData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccelerometerData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccelerometerData> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.AccelerometerData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GyrometerDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.GyrometerData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<java.lang.Double> getLegacyPackedDataList();
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getLegacyPackedDataCount();
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getLegacyPackedData(int index);

    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getData();
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getDataOrBuilder();

    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    boolean hasRawData();
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getRawData();
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getRawDataOrBuilder();

    /**
     * <code>optional double ref = 4;</code>
     */
    boolean hasRef();
    /**
     * <code>optional double ref = 4;</code>
     */
    double getRef();
  }
  /**
   * Protobuf type {@code naothmessages.GyrometerData}
   */
  public  static final class GyrometerData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.GyrometerData)
      GyrometerDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GyrometerData.newBuilder() to construct.
    private GyrometerData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GyrometerData() {
      legacyPackedData_ = java.util.Collections.emptyList();
      ref_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GyrometerData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                legacyPackedData_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              legacyPackedData_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                legacyPackedData_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                legacyPackedData_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(de.naoth.rc.core.messages.CommonTypes.DoubleVector3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = rawData_.toBuilder();
              }
              rawData_ = input.readMessage(de.naoth.rc.core.messages.CommonTypes.DoubleVector3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rawData_);
                rawData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 33: {
              bitField0_ |= 0x00000004;
              ref_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          legacyPackedData_ = java.util.Collections.unmodifiableList(legacyPackedData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_GyrometerData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_GyrometerData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData.class, de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData.Builder.class);
    }

    private int bitField0_;
    public static final int LEGACYPACKEDDATA_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> legacyPackedData_;
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<java.lang.Double>
        getLegacyPackedDataList() {
      return legacyPackedData_;
    }
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getLegacyPackedDataCount() {
      return legacyPackedData_.size();
    }
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getLegacyPackedData(int index) {
      return legacyPackedData_.get(index);
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private de.naoth.rc.core.messages.CommonTypes.DoubleVector3 data_;
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getData() {
      return data_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : data_;
    }
    /**
     * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getDataOrBuilder() {
      return data_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : data_;
    }

    public static final int RAWDATA_FIELD_NUMBER = 3;
    private de.naoth.rc.core.messages.CommonTypes.DoubleVector3 rawData_;
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    public boolean hasRawData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getRawData() {
      return rawData_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : rawData_;
    }
    /**
     * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getRawDataOrBuilder() {
      return rawData_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : rawData_;
    }

    public static final int REF_FIELD_NUMBER = 4;
    private double ref_;
    /**
     * <code>optional double ref = 4;</code>
     */
    public boolean hasRef() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double ref = 4;</code>
     */
    public double getRef() {
      return ref_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasData()) {
        if (!getData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRawData()) {
        if (!getRawData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < legacyPackedData_.size(); i++) {
        output.writeDouble(1, legacyPackedData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, getData());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getRawData());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(4, ref_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getLegacyPackedDataList().size();
        size += dataSize;
        size += 1 * getLegacyPackedDataList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getData());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRawData());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, ref_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData other = (de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData) obj;

      boolean result = true;
      result = result && getLegacyPackedDataList()
          .equals(other.getLegacyPackedDataList());
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && (hasRawData() == other.hasRawData());
      if (hasRawData()) {
        result = result && getRawData()
            .equals(other.getRawData());
      }
      result = result && (hasRef() == other.hasRef());
      if (hasRef()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getRef())
            == java.lang.Double.doubleToLongBits(
                other.getRef()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLegacyPackedDataCount() > 0) {
        hash = (37 * hash) + LEGACYPACKEDDATA_FIELD_NUMBER;
        hash = (53 * hash) + getLegacyPackedDataList().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (hasRawData()) {
        hash = (37 * hash) + RAWDATA_FIELD_NUMBER;
        hash = (53 * hash) + getRawData().hashCode();
      }
      if (hasRef()) {
        hash = (37 * hash) + REF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRef()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.GyrometerData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.GyrometerData)
        de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_GyrometerData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_GyrometerData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData.class, de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDataFieldBuilder();
          getRawDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        legacyPackedData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rawDataBuilder_ == null) {
          rawData_ = null;
        } else {
          rawDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        ref_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_GyrometerData_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData result = new de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          legacyPackedData_ = java.util.Collections.unmodifiableList(legacyPackedData_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.legacyPackedData_ = legacyPackedData_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rawDataBuilder_ == null) {
          result.rawData_ = rawData_;
        } else {
          result.rawData_ = rawDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ref_ = ref_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData.getDefaultInstance()) return this;
        if (!other.legacyPackedData_.isEmpty()) {
          if (legacyPackedData_.isEmpty()) {
            legacyPackedData_ = other.legacyPackedData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureLegacyPackedDataIsMutable();
            legacyPackedData_.addAll(other.legacyPackedData_);
          }
          onChanged();
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (other.hasRawData()) {
          mergeRawData(other.getRawData());
        }
        if (other.hasRef()) {
          setRef(other.getRef());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasData()) {
          if (!getData().isInitialized()) {
            return false;
          }
        }
        if (hasRawData()) {
          if (!getRawData().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> legacyPackedData_ = java.util.Collections.emptyList();
      private void ensureLegacyPackedDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          legacyPackedData_ = new java.util.ArrayList<java.lang.Double>(legacyPackedData_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<java.lang.Double>
          getLegacyPackedDataList() {
        return java.util.Collections.unmodifiableList(legacyPackedData_);
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getLegacyPackedDataCount() {
        return legacyPackedData_.size();
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getLegacyPackedData(int index) {
        return legacyPackedData_.get(index);
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setLegacyPackedData(
          int index, double value) {
        ensureLegacyPackedDataIsMutable();
        legacyPackedData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addLegacyPackedData(double value) {
        ensureLegacyPackedDataIsMutable();
        legacyPackedData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllLegacyPackedData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureLegacyPackedDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, legacyPackedData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearLegacyPackedData() {
        legacyPackedData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private de.naoth.rc.core.messages.CommonTypes.DoubleVector3 data_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder> dataBuilder_;
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public Builder setData(de.naoth.rc.core.messages.CommonTypes.DoubleVector3 value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public Builder setData(
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public Builder mergeData(de.naoth.rc.core.messages.CommonTypes.DoubleVector3 value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              data_ != null &&
              data_ != de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance()) {
            data_ =
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder getDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private de.naoth.rc.core.messages.CommonTypes.DoubleVector3 rawData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder> rawDataBuilder_;
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public boolean hasRawData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3 getRawData() {
        if (rawDataBuilder_ == null) {
          return rawData_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : rawData_;
        } else {
          return rawDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public Builder setRawData(de.naoth.rc.core.messages.CommonTypes.DoubleVector3 value) {
        if (rawDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rawData_ = value;
          onChanged();
        } else {
          rawDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public Builder setRawData(
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder builderForValue) {
        if (rawDataBuilder_ == null) {
          rawData_ = builderForValue.build();
          onChanged();
        } else {
          rawDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public Builder mergeRawData(de.naoth.rc.core.messages.CommonTypes.DoubleVector3 value) {
        if (rawDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              rawData_ != null &&
              rawData_ != de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance()) {
            rawData_ =
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.newBuilder(rawData_).mergeFrom(value).buildPartial();
          } else {
            rawData_ = value;
          }
          onChanged();
        } else {
          rawDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public Builder clearRawData() {
        if (rawDataBuilder_ == null) {
          rawData_ = null;
          onChanged();
        } else {
          rawDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder getRawDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRawDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder getRawDataOrBuilder() {
        if (rawDataBuilder_ != null) {
          return rawDataBuilder_.getMessageOrBuilder();
        } else {
          return rawData_ == null ?
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3.getDefaultInstance() : rawData_;
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector3 rawData = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder> 
          getRawDataFieldBuilder() {
        if (rawDataBuilder_ == null) {
          rawDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.DoubleVector3, de.naoth.rc.core.messages.CommonTypes.DoubleVector3.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector3OrBuilder>(
                  getRawData(),
                  getParentForChildren(),
                  isClean());
          rawData_ = null;
        }
        return rawDataBuilder_;
      }

      private double ref_ ;
      /**
       * <code>optional double ref = 4;</code>
       */
      public boolean hasRef() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double ref = 4;</code>
       */
      public double getRef() {
        return ref_;
      }
      /**
       * <code>optional double ref = 4;</code>
       */
      public Builder setRef(double value) {
        bitField0_ |= 0x00000008;
        ref_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double ref = 4;</code>
       */
      public Builder clearRef() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ref_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.GyrometerData)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.GyrometerData)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GyrometerData>
        PARSER = new com.google.protobuf.AbstractParser<GyrometerData>() {
      public GyrometerData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GyrometerData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GyrometerData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GyrometerData> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.GyrometerData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InertialSensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.InertialSensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<java.lang.Double> getLegacyPackedDataList();
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getLegacyPackedDataCount();
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated double getLegacyPackedData(int index);

    /**
     * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getData();
    /**
     * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
     */
    de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getDataOrBuilder();
  }
  /**
   * Protobuf type {@code naothmessages.InertialSensorData}
   */
  public  static final class InertialSensorData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.InertialSensorData)
      InertialSensorDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InertialSensorData.newBuilder() to construct.
    private InertialSensorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InertialSensorData() {
      legacyPackedData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InertialSensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                legacyPackedData_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              legacyPackedData_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                legacyPackedData_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                legacyPackedData_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(de.naoth.rc.core.messages.CommonTypes.DoubleVector2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          legacyPackedData_ = java.util.Collections.unmodifiableList(legacyPackedData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_InertialSensorData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_InertialSensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData.class, de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData.Builder.class);
    }

    private int bitField0_;
    public static final int LEGACYPACKEDDATA_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> legacyPackedData_;
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<java.lang.Double>
        getLegacyPackedDataList() {
      return legacyPackedData_;
    }
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getLegacyPackedDataCount() {
      return legacyPackedData_.size();
    }
    /**
     * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public double getLegacyPackedData(int index) {
      return legacyPackedData_.get(index);
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private de.naoth.rc.core.messages.CommonTypes.DoubleVector2 data_;
    /**
     * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getData() {
      return data_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : data_;
    }
    /**
     * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
     */
    public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getDataOrBuilder() {
      return data_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : data_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasData()) {
        if (!getData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < legacyPackedData_.size(); i++) {
        output.writeDouble(1, legacyPackedData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, getData());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getLegacyPackedDataList().size();
        size += dataSize;
        size += 1 * getLegacyPackedDataList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData other = (de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData) obj;

      boolean result = true;
      result = result && getLegacyPackedDataList()
          .equals(other.getLegacyPackedDataList());
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLegacyPackedDataCount() > 0) {
        hash = (37 * hash) + LEGACYPACKEDDATA_FIELD_NUMBER;
        hash = (53 * hash) + getLegacyPackedDataList().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.InertialSensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.InertialSensorData)
        de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_InertialSensorData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_InertialSensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData.class, de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        legacyPackedData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_InertialSensorData_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData result = new de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          legacyPackedData_ = java.util.Collections.unmodifiableList(legacyPackedData_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.legacyPackedData_ = legacyPackedData_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData.getDefaultInstance()) return this;
        if (!other.legacyPackedData_.isEmpty()) {
          if (legacyPackedData_.isEmpty()) {
            legacyPackedData_ = other.legacyPackedData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureLegacyPackedDataIsMutable();
            legacyPackedData_.addAll(other.legacyPackedData_);
          }
          onChanged();
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasData()) {
          if (!getData().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> legacyPackedData_ = java.util.Collections.emptyList();
      private void ensureLegacyPackedDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          legacyPackedData_ = new java.util.ArrayList<java.lang.Double>(legacyPackedData_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<java.lang.Double>
          getLegacyPackedDataList() {
        return java.util.Collections.unmodifiableList(legacyPackedData_);
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getLegacyPackedDataCount() {
        return legacyPackedData_.size();
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public double getLegacyPackedData(int index) {
        return legacyPackedData_.get(index);
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setLegacyPackedData(
          int index, double value) {
        ensureLegacyPackedDataIsMutable();
        legacyPackedData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addLegacyPackedData(double value) {
        ensureLegacyPackedDataIsMutable();
        legacyPackedData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllLegacyPackedData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureLegacyPackedDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, legacyPackedData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double legacyPackedData = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearLegacyPackedData() {
        legacyPackedData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private de.naoth.rc.core.messages.CommonTypes.DoubleVector2 data_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> dataBuilder_;
      /**
       * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector2 getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
       */
      public Builder setData(de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
       */
      public Builder setData(
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
       */
      public Builder mergeData(de.naoth.rc.core.messages.CommonTypes.DoubleVector2 value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              data_ != null &&
              data_ != de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance()) {
            data_ =
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder getDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
       */
      public de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>optional .naothmessages.DoubleVector2 data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              de.naoth.rc.core.messages.CommonTypes.DoubleVector2, de.naoth.rc.core.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.core.messages.CommonTypes.DoubleVector2OrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.InertialSensorData)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.InertialSensorData)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<InertialSensorData>
        PARSER = new com.google.protobuf.AbstractParser<InertialSensorData>() {
      public InertialSensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new InertialSensorData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InertialSensorData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InertialSensorData> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.InertialSensorData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ButtonDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:naothmessages.ButtonData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated bool isPressed = 1;</code>
     */
    java.util.List<java.lang.Boolean> getIsPressedList();
    /**
     * <code>repeated bool isPressed = 1;</code>
     */
    int getIsPressedCount();
    /**
     * <code>repeated bool isPressed = 1;</code>
     */
    boolean getIsPressed(int index);

    /**
     * <code>repeated uint32 numOfFramesPressed = 2;</code>
     */
    java.util.List<java.lang.Integer> getNumOfFramesPressedList();
    /**
     * <code>repeated uint32 numOfFramesPressed = 2;</code>
     */
    int getNumOfFramesPressedCount();
    /**
     * <code>repeated uint32 numOfFramesPressed = 2;</code>
     */
    int getNumOfFramesPressed(int index);

    /**
     * <code>repeated uint32 eventCounter = 3;</code>
     */
    java.util.List<java.lang.Integer> getEventCounterList();
    /**
     * <code>repeated uint32 eventCounter = 3;</code>
     */
    int getEventCounterCount();
    /**
     * <code>repeated uint32 eventCounter = 3;</code>
     */
    int getEventCounter(int index);
  }
  /**
   * Protobuf type {@code naothmessages.ButtonData}
   */
  public  static final class ButtonData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:naothmessages.ButtonData)
      ButtonDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ButtonData.newBuilder() to construct.
    private ButtonData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ButtonData() {
      isPressed_ = java.util.Collections.emptyList();
      numOfFramesPressed_ = java.util.Collections.emptyList();
      eventCounter_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ButtonData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                isPressed_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000001;
              }
              isPressed_.add(input.readBool());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                isPressed_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                isPressed_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                numOfFramesPressed_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              numOfFramesPressed_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                numOfFramesPressed_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                numOfFramesPressed_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                eventCounter_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              eventCounter_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                eventCounter_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                eventCounter_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          isPressed_ = java.util.Collections.unmodifiableList(isPressed_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          numOfFramesPressed_ = java.util.Collections.unmodifiableList(numOfFramesPressed_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          eventCounter_ = java.util.Collections.unmodifiableList(eventCounter_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_ButtonData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_ButtonData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData.class, de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData.Builder.class);
    }

    /**
     * Protobuf enum {@code naothmessages.ButtonData.ButtonID}
     */
    public enum ButtonID
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Chest = 0;</code>
       */
      Chest(0),
      /**
       * <code>LeftFootLeft = 1;</code>
       */
      LeftFootLeft(1),
      /**
       * <code>LeftFootRight = 2;</code>
       */
      LeftFootRight(2),
      /**
       * <code>RightFootLeft = 3;</code>
       */
      RightFootLeft(3),
      /**
       * <code>RightFootRight = 4;</code>
       */
      RightFootRight(4),
      /**
       * <code>HeadFront = 5;</code>
       */
      HeadFront(5),
      /**
       * <code>HeadMiddle = 6;</code>
       */
      HeadMiddle(6),
      /**
       * <code>HeadRear = 7;</code>
       */
      HeadRear(7),
      /**
       * <code>LeftHandBack = 8;</code>
       */
      LeftHandBack(8),
      /**
       * <code>LeftHandLeft = 9;</code>
       */
      LeftHandLeft(9),
      /**
       * <code>LeftHandRight = 10;</code>
       */
      LeftHandRight(10),
      /**
       * <code>RightHandBack = 11;</code>
       */
      RightHandBack(11),
      /**
       * <code>RightHandLeft = 12;</code>
       */
      RightHandLeft(12),
      /**
       * <code>RightHandRight = 13;</code>
       */
      RightHandRight(13),
      ;

      /**
       * <code>Chest = 0;</code>
       */
      public static final int Chest_VALUE = 0;
      /**
       * <code>LeftFootLeft = 1;</code>
       */
      public static final int LeftFootLeft_VALUE = 1;
      /**
       * <code>LeftFootRight = 2;</code>
       */
      public static final int LeftFootRight_VALUE = 2;
      /**
       * <code>RightFootLeft = 3;</code>
       */
      public static final int RightFootLeft_VALUE = 3;
      /**
       * <code>RightFootRight = 4;</code>
       */
      public static final int RightFootRight_VALUE = 4;
      /**
       * <code>HeadFront = 5;</code>
       */
      public static final int HeadFront_VALUE = 5;
      /**
       * <code>HeadMiddle = 6;</code>
       */
      public static final int HeadMiddle_VALUE = 6;
      /**
       * <code>HeadRear = 7;</code>
       */
      public static final int HeadRear_VALUE = 7;
      /**
       * <code>LeftHandBack = 8;</code>
       */
      public static final int LeftHandBack_VALUE = 8;
      /**
       * <code>LeftHandLeft = 9;</code>
       */
      public static final int LeftHandLeft_VALUE = 9;
      /**
       * <code>LeftHandRight = 10;</code>
       */
      public static final int LeftHandRight_VALUE = 10;
      /**
       * <code>RightHandBack = 11;</code>
       */
      public static final int RightHandBack_VALUE = 11;
      /**
       * <code>RightHandLeft = 12;</code>
       */
      public static final int RightHandLeft_VALUE = 12;
      /**
       * <code>RightHandRight = 13;</code>
       */
      public static final int RightHandRight_VALUE = 13;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ButtonID valueOf(int value) {
        return forNumber(value);
      }

      public static ButtonID forNumber(int value) {
        switch (value) {
          case 0: return Chest;
          case 1: return LeftFootLeft;
          case 2: return LeftFootRight;
          case 3: return RightFootLeft;
          case 4: return RightFootRight;
          case 5: return HeadFront;
          case 6: return HeadMiddle;
          case 7: return HeadRear;
          case 8: return LeftHandBack;
          case 9: return LeftHandLeft;
          case 10: return LeftHandRight;
          case 11: return RightHandBack;
          case 12: return RightHandLeft;
          case 13: return RightHandRight;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ButtonID>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ButtonID> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ButtonID>() {
              public ButtonID findValueByNumber(int number) {
                return ButtonID.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData.getDescriptor().getEnumTypes().get(0);
      }

      private static final ButtonID[] VALUES = values();

      public static ButtonID valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ButtonID(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:naothmessages.ButtonData.ButtonID)
    }

    public static final int ISPRESSED_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Boolean> isPressed_;
    /**
     * <code>repeated bool isPressed = 1;</code>
     */
    public java.util.List<java.lang.Boolean>
        getIsPressedList() {
      return isPressed_;
    }
    /**
     * <code>repeated bool isPressed = 1;</code>
     */
    public int getIsPressedCount() {
      return isPressed_.size();
    }
    /**
     * <code>repeated bool isPressed = 1;</code>
     */
    public boolean getIsPressed(int index) {
      return isPressed_.get(index);
    }

    public static final int NUMOFFRAMESPRESSED_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> numOfFramesPressed_;
    /**
     * <code>repeated uint32 numOfFramesPressed = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getNumOfFramesPressedList() {
      return numOfFramesPressed_;
    }
    /**
     * <code>repeated uint32 numOfFramesPressed = 2;</code>
     */
    public int getNumOfFramesPressedCount() {
      return numOfFramesPressed_.size();
    }
    /**
     * <code>repeated uint32 numOfFramesPressed = 2;</code>
     */
    public int getNumOfFramesPressed(int index) {
      return numOfFramesPressed_.get(index);
    }

    public static final int EVENTCOUNTER_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> eventCounter_;
    /**
     * <code>repeated uint32 eventCounter = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getEventCounterList() {
      return eventCounter_;
    }
    /**
     * <code>repeated uint32 eventCounter = 3;</code>
     */
    public int getEventCounterCount() {
      return eventCounter_.size();
    }
    /**
     * <code>repeated uint32 eventCounter = 3;</code>
     */
    public int getEventCounter(int index) {
      return eventCounter_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < isPressed_.size(); i++) {
        output.writeBool(1, isPressed_.get(i));
      }
      for (int i = 0; i < numOfFramesPressed_.size(); i++) {
        output.writeUInt32(2, numOfFramesPressed_.get(i));
      }
      for (int i = 0; i < eventCounter_.size(); i++) {
        output.writeUInt32(3, eventCounter_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 1 * getIsPressedList().size();
        size += dataSize;
        size += 1 * getIsPressedList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < numOfFramesPressed_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(numOfFramesPressed_.get(i));
        }
        size += dataSize;
        size += 1 * getNumOfFramesPressedList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < eventCounter_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(eventCounter_.get(i));
        }
        size += dataSize;
        size += 1 * getEventCounterList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData)) {
        return super.equals(obj);
      }
      de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData other = (de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData) obj;

      boolean result = true;
      result = result && getIsPressedList()
          .equals(other.getIsPressedList());
      result = result && getNumOfFramesPressedList()
          .equals(other.getNumOfFramesPressedList());
      result = result && getEventCounterList()
          .equals(other.getEventCounterList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIsPressedCount() > 0) {
        hash = (37 * hash) + ISPRESSED_FIELD_NUMBER;
        hash = (53 * hash) + getIsPressedList().hashCode();
      }
      if (getNumOfFramesPressedCount() > 0) {
        hash = (37 * hash) + NUMOFFRAMESPRESSED_FIELD_NUMBER;
        hash = (53 * hash) + getNumOfFramesPressedList().hashCode();
      }
      if (getEventCounterCount() > 0) {
        hash = (37 * hash) + EVENTCOUNTER_FIELD_NUMBER;
        hash = (53 * hash) + getEventCounterList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code naothmessages.ButtonData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:naothmessages.ButtonData)
        de.naoth.rc.core.messages.FrameworkRepresentations.ButtonDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_ButtonData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_ButtonData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData.class, de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData.Builder.class);
      }

      // Construct using de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        isPressed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        numOfFramesPressed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        eventCounter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.internal_static_naothmessages_ButtonData_descriptor;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData getDefaultInstanceForType() {
        return de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData.getDefaultInstance();
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData build() {
        de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData buildPartial() {
        de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData result = new de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          isPressed_ = java.util.Collections.unmodifiableList(isPressed_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.isPressed_ = isPressed_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          numOfFramesPressed_ = java.util.Collections.unmodifiableList(numOfFramesPressed_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.numOfFramesPressed_ = numOfFramesPressed_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          eventCounter_ = java.util.Collections.unmodifiableList(eventCounter_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.eventCounter_ = eventCounter_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData) {
          return mergeFrom((de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData other) {
        if (other == de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData.getDefaultInstance()) return this;
        if (!other.isPressed_.isEmpty()) {
          if (isPressed_.isEmpty()) {
            isPressed_ = other.isPressed_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIsPressedIsMutable();
            isPressed_.addAll(other.isPressed_);
          }
          onChanged();
        }
        if (!other.numOfFramesPressed_.isEmpty()) {
          if (numOfFramesPressed_.isEmpty()) {
            numOfFramesPressed_ = other.numOfFramesPressed_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNumOfFramesPressedIsMutable();
            numOfFramesPressed_.addAll(other.numOfFramesPressed_);
          }
          onChanged();
        }
        if (!other.eventCounter_.isEmpty()) {
          if (eventCounter_.isEmpty()) {
            eventCounter_ = other.eventCounter_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEventCounterIsMutable();
            eventCounter_.addAll(other.eventCounter_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Boolean> isPressed_ = java.util.Collections.emptyList();
      private void ensureIsPressedIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          isPressed_ = new java.util.ArrayList<java.lang.Boolean>(isPressed_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bool isPressed = 1;</code>
       */
      public java.util.List<java.lang.Boolean>
          getIsPressedList() {
        return java.util.Collections.unmodifiableList(isPressed_);
      }
      /**
       * <code>repeated bool isPressed = 1;</code>
       */
      public int getIsPressedCount() {
        return isPressed_.size();
      }
      /**
       * <code>repeated bool isPressed = 1;</code>
       */
      public boolean getIsPressed(int index) {
        return isPressed_.get(index);
      }
      /**
       * <code>repeated bool isPressed = 1;</code>
       */
      public Builder setIsPressed(
          int index, boolean value) {
        ensureIsPressedIsMutable();
        isPressed_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isPressed = 1;</code>
       */
      public Builder addIsPressed(boolean value) {
        ensureIsPressedIsMutable();
        isPressed_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isPressed = 1;</code>
       */
      public Builder addAllIsPressed(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsPressedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, isPressed_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool isPressed = 1;</code>
       */
      public Builder clearIsPressed() {
        isPressed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> numOfFramesPressed_ = java.util.Collections.emptyList();
      private void ensureNumOfFramesPressedIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          numOfFramesPressed_ = new java.util.ArrayList<java.lang.Integer>(numOfFramesPressed_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 numOfFramesPressed = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getNumOfFramesPressedList() {
        return java.util.Collections.unmodifiableList(numOfFramesPressed_);
      }
      /**
       * <code>repeated uint32 numOfFramesPressed = 2;</code>
       */
      public int getNumOfFramesPressedCount() {
        return numOfFramesPressed_.size();
      }
      /**
       * <code>repeated uint32 numOfFramesPressed = 2;</code>
       */
      public int getNumOfFramesPressed(int index) {
        return numOfFramesPressed_.get(index);
      }
      /**
       * <code>repeated uint32 numOfFramesPressed = 2;</code>
       */
      public Builder setNumOfFramesPressed(
          int index, int value) {
        ensureNumOfFramesPressedIsMutable();
        numOfFramesPressed_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 numOfFramesPressed = 2;</code>
       */
      public Builder addNumOfFramesPressed(int value) {
        ensureNumOfFramesPressedIsMutable();
        numOfFramesPressed_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 numOfFramesPressed = 2;</code>
       */
      public Builder addAllNumOfFramesPressed(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNumOfFramesPressedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, numOfFramesPressed_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 numOfFramesPressed = 2;</code>
       */
      public Builder clearNumOfFramesPressed() {
        numOfFramesPressed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> eventCounter_ = java.util.Collections.emptyList();
      private void ensureEventCounterIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          eventCounter_ = new java.util.ArrayList<java.lang.Integer>(eventCounter_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 eventCounter = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getEventCounterList() {
        return java.util.Collections.unmodifiableList(eventCounter_);
      }
      /**
       * <code>repeated uint32 eventCounter = 3;</code>
       */
      public int getEventCounterCount() {
        return eventCounter_.size();
      }
      /**
       * <code>repeated uint32 eventCounter = 3;</code>
       */
      public int getEventCounter(int index) {
        return eventCounter_.get(index);
      }
      /**
       * <code>repeated uint32 eventCounter = 3;</code>
       */
      public Builder setEventCounter(
          int index, int value) {
        ensureEventCounterIsMutable();
        eventCounter_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 eventCounter = 3;</code>
       */
      public Builder addEventCounter(int value) {
        ensureEventCounterIsMutable();
        eventCounter_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 eventCounter = 3;</code>
       */
      public Builder addAllEventCounter(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEventCounterIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, eventCounter_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 eventCounter = 3;</code>
       */
      public Builder clearEventCounter() {
        eventCounter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:naothmessages.ButtonData)
    }

    // @@protoc_insertion_point(class_scope:naothmessages.ButtonData)
    private static final de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData();
    }

    public static de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ButtonData>
        PARSER = new com.google.protobuf.AbstractParser<ButtonData>() {
      public ButtonData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ButtonData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ButtonData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ButtonData> getParserForType() {
      return PARSER;
    }

    public de.naoth.rc.core.messages.FrameworkRepresentations.ButtonData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_Image_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_Image_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_CameraInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_CameraInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_JointData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_JointData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_SensorJointData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_SensorJointData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_UltraSoundReceiveData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_UltraSoundReceiveData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_FrameInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_FrameInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_RobotInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_RobotInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_FSRData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_FSRData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_AccelerometerData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_AccelerometerData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_GyrometerData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_GyrometerData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_InertialSensorData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_InertialSensorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_ButtonData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_naothmessages_ButtonData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037Framework-Representations.proto\022\rnaoth" +
      "messages\032\021CommonTypes.proto\"\333\001\n\005Image\022\014\n" +
      "\004data\030\001 \002(\014\022\022\n\005width\030\002 \001(\005:\003640\022\023\n\006heigh" +
      "t\030\003 \001(\005:\003480\022-\n\ncameraInfo\030\004 \001(\0132\031.naoth" +
      "messages.CameraInfo\0220\n\006format\030\005 \001(\0162\033.na" +
      "othmessages.Image.Format:\003YUV\022\021\n\ttimesta" +
      "mp\030\006 \001(\r\"\'\n\006Format\022\007\n\003YUV\020\000\022\n\n\006YUV422\020\001\022" +
      "\010\n\004JPEG\020\002\"\322\004\n\nCameraInfo\022\027\n\017resolutionWi" +
      "dth\030\001 \002(\005\022\030\n\020resolutionHeight\030\002 \002(\005\0221\n\010c" +
      "ameraID\030\004 \001(\0162\027.naothmessages.CameraID:\006",
      "bottom\022\027\n\013focalLength\030\005 \001(\001B\002\030\001\022\035\n\021openi" +
      "ngAngleWidth\030\006 \001(\001B\002\030\001\022\036\n\022openingAngleHe" +
      "ight\030\007 \001(\001B\002\030\001\022\032\n\016opticalCenterX\030\010 \001(\001B\002" +
      "\030\001\022\032\n\016opticalCenterY\030\t \001(\001B\002\030\001\022\020\n\004size\030\n" +
      " \001(\003B\002\030\001\022\026\n\nmemorysize\030\013 \001(\003B\002\030\001\022\034\n\020came" +
      "raRollOffset\030\014 \001(\001B\002\030\001\022\034\n\020cameraTiltOffs" +
      "et\030\r \001(\001B\002\030\001\022:\n\020correctionOffset\030\022 \003(\0132\034" +
      ".naothmessages.DoubleVector2B\002\030\001\0229\n\017head" +
      "JointOffset\030\023 \003(\0132\034.naothmessages.Double" +
      "Vector2B\002\030\001\0221\n\016transformation\030\016 \003(\0132\025.na",
      "othmessages.Pose3DB\002\030\001\022\034\n\024openingAngleDi" +
      "agonal\030\017 \001(\001\022\021\n\tpixelSize\030\020 \001(\001\022\r\n\005focus" +
      "\030\021 \001(\001\"I\n\tJointData\022\020\n\010position\030\001 \003(\001\022\021\n" +
      "\tstiffness\030\002 \003(\001\022\n\n\002dp\030\003 \003(\001\022\013\n\003ddp\030\004 \003(" +
      "\001\"l\n\017SensorJointData\022+\n\tjointData\030\001 \002(\0132" +
      "\030.naothmessages.JointData\022\023\n\013temperature" +
      "\030\002 \003(\001\022\027\n\017electricCurrent\030\003 \003(\001\"i\n\025Ultra" +
      "SoundReceiveData\022\032\n\022ultraSoundTimeStep\030\001" +
      " \001(\r\022\017\n\007rawdata\030\002 \002(\001\022\020\n\010dataLeft\030\003 \003(\001\022" +
      "\021\n\tdataRight\030\004 \003(\001\".\n\tFrameInfo\022\023\n\013frame",
      "Number\030\001 \002(\r\022\014\n\004time\030\002 \002(\r\"p\n\tRobotInfo\022" +
      "\020\n\010platform\030\001 \001(\t\022\024\n\014bodyNickName\030\002 \001(\t\022" +
      "\024\n\014headNickName\030\003 \001(\t\022\016\n\006bodyID\030\004 \001(\t\022\025\n" +
      "\rbasicTimeStep\030\005 \001(\r\"=\n\007FSRData\022\021\n\005force" +
      "\030\001 \003(\001B\002\030\001\022\014\n\004data\030\002 \003(\001\022\021\n\005valid\030\003 \003(\010B" +
      "\002\030\001\"\214\001\n\021AccelerometerData\022\034\n\020legacyPacke" +
      "dData\030\001 \003(\001B\002\030\001\022*\n\004data\030\002 \001(\0132\034.naothmes" +
      "sages.DoubleVector3\022-\n\007rawData\030\003 \001(\0132\034.n" +
      "aothmessages.DoubleVector3\"\225\001\n\rGyrometer" +
      "Data\022\034\n\020legacyPackedData\030\001 \003(\001B\002\030\001\022*\n\004da",
      "ta\030\002 \001(\0132\034.naothmessages.DoubleVector3\022-" +
      "\n\007rawData\030\003 \001(\0132\034.naothmessages.DoubleVe" +
      "ctor3\022\013\n\003ref\030\004 \001(\001\"^\n\022InertialSensorData" +
      "\022\034\n\020legacyPackedData\030\001 \003(\001B\002\030\001\022*\n\004data\030\002" +
      " \001(\0132\034.naothmessages.DoubleVector2\"\323\002\n\nB" +
      "uttonData\022\021\n\tisPressed\030\001 \003(\010\022\032\n\022numOfFra" +
      "mesPressed\030\002 \003(\r\022\024\n\014eventCounter\030\003 \003(\r\"\377" +
      "\001\n\010ButtonID\022\t\n\005Chest\020\000\022\020\n\014LeftFootLeft\020\001" +
      "\022\021\n\rLeftFootRight\020\002\022\021\n\rRightFootLeft\020\003\022\022" +
      "\n\016RightFootRight\020\004\022\r\n\tHeadFront\020\005\022\016\n\nHea",
      "dMiddle\020\006\022\014\n\010HeadRear\020\007\022\020\n\014LeftHandBack\020" +
      "\010\022\020\n\014LeftHandLeft\020\t\022\021\n\rLeftHandRight\020\n\022\021" +
      "\n\rRightHandBack\020\013\022\021\n\rRightHandLeft\020\014\022\022\n\016" +
      "RightHandRight\020\rB\033\n\031de.naoth.rc.core.mes" +
      "sages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          de.naoth.rc.core.messages.CommonTypes.getDescriptor(),
        }, assigner);
    internal_static_naothmessages_Image_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_naothmessages_Image_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_Image_descriptor,
        new java.lang.String[] { "Data", "Width", "Height", "CameraInfo", "Format", "Timestamp", });
    internal_static_naothmessages_CameraInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_naothmessages_CameraInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_CameraInfo_descriptor,
        new java.lang.String[] { "ResolutionWidth", "ResolutionHeight", "CameraID", "FocalLength", "OpeningAngleWidth", "OpeningAngleHeight", "OpticalCenterX", "OpticalCenterY", "Size", "Memorysize", "CameraRollOffset", "CameraTiltOffset", "CorrectionOffset", "HeadJointOffset", "Transformation", "OpeningAngleDiagonal", "PixelSize", "Focus", });
    internal_static_naothmessages_JointData_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_naothmessages_JointData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_JointData_descriptor,
        new java.lang.String[] { "Position", "Stiffness", "Dp", "Ddp", });
    internal_static_naothmessages_SensorJointData_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_naothmessages_SensorJointData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_SensorJointData_descriptor,
        new java.lang.String[] { "JointData", "Temperature", "ElectricCurrent", });
    internal_static_naothmessages_UltraSoundReceiveData_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_naothmessages_UltraSoundReceiveData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_UltraSoundReceiveData_descriptor,
        new java.lang.String[] { "UltraSoundTimeStep", "Rawdata", "DataLeft", "DataRight", });
    internal_static_naothmessages_FrameInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_naothmessages_FrameInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_FrameInfo_descriptor,
        new java.lang.String[] { "FrameNumber", "Time", });
    internal_static_naothmessages_RobotInfo_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_naothmessages_RobotInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_RobotInfo_descriptor,
        new java.lang.String[] { "Platform", "BodyNickName", "HeadNickName", "BodyID", "BasicTimeStep", });
    internal_static_naothmessages_FSRData_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_naothmessages_FSRData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_FSRData_descriptor,
        new java.lang.String[] { "Force", "Data", "Valid", });
    internal_static_naothmessages_AccelerometerData_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_naothmessages_AccelerometerData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_AccelerometerData_descriptor,
        new java.lang.String[] { "LegacyPackedData", "Data", "RawData", });
    internal_static_naothmessages_GyrometerData_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_naothmessages_GyrometerData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_GyrometerData_descriptor,
        new java.lang.String[] { "LegacyPackedData", "Data", "RawData", "Ref", });
    internal_static_naothmessages_InertialSensorData_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_naothmessages_InertialSensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_InertialSensorData_descriptor,
        new java.lang.String[] { "LegacyPackedData", "Data", });
    internal_static_naothmessages_ButtonData_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_naothmessages_ButtonData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_naothmessages_ButtonData_descriptor,
        new java.lang.String[] { "IsPressed", "NumOfFramesPressed", "EventCounter", });
    de.naoth.rc.core.messages.CommonTypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
