package de.naoth.rc.dialogs;

import de.naoth.rc.components.simspark.SimsparkListener;
import de.naoth.rc.components.simspark.SimsparkManager;
import de.naoth.rc.core.dialog.AbstractDialog;
import de.naoth.rc.core.dialog.DialogPlugin;
import de.naoth.rc.core.dialog.RCDialog;
import de.naoth.rc.dataformats.SimsparkState;
import javax.swing.table.TableModel;
import net.xeoh.plugins.base.annotations.PluginImplementation;
import net.xeoh.plugins.base.annotations.injections.InjectPlugin;

/**
 * Dialog for showing the current simspark state - if connected to a running instance.
 * NOTE: if this dialog is no longer required, it can be removed; the statubar plugin has now all functionality.
 * 
 * @author Philipp Strobel <philippstrobel@posteo.de>
 */
public class Simspark extends AbstractDialog implements SimsparkListener
{
    @RCDialog(category = RCDialog.Category.Tools, name = "SimsparkMonitor")
    @PluginImplementation
    public static class Plugin extends DialogPlugin<Simspark> {
        @InjectPlugin
        public static SimsparkManager simsparkManger;
    }//end Plugin
    
    /**
     * Creates new form TeamCommViewerSimspark
     */
    public Simspark() {
        initComponents();
        addTableContent();
        
        jTable1.getColumnModel().getColumn(0).setWidth(20);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
        
        Plugin.simsparkManger.addSimsparkListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        monitorPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        monitorPanel.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jScrollPane2.setViewportView(jTable1);

        monitorPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        add(monitorPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Sets the table content to known simspark-state-fields.
     */
    private void addTableContent() {
        TableModel model = jTable1.getModel();
        model.setValueAt("time",        0, 0);
        model.setValueAt("play_mode",   1, 0);
        model.setValueAt("score_left",  2, 0);
        model.setValueAt("score_right", 3, 0);
        model.setValueAt("half",        4, 0);
        model.setValueAt("FieldLength", 5, 0);
        model.setValueAt("FieldWidth",  6, 0);
        model.setValueAt("FieldHeight", 7, 0);
        model.setValueAt("GoalWidth",   8, 0);
        model.setValueAt("GoalDepth",   9, 0);
        model.setValueAt("GoalHeight", 10, 0);
        model.setValueAt("BorderSize", 11, 0);
        model.setValueAt("FreeKickDistance", 12, 0);
        model.setValueAt("WaitBeforeKickOff",13, 0);
        model.setValueAt("AgentRadius",14, 0);
        model.setValueAt("BallRadius", 15, 0);
        model.setValueAt("BallMass",   16, 0);
        model.setValueAt("RuleGoalPauseTime",17, 0);
        model.setValueAt("RuleKickInPauseTime", 18, 0);
        model.setValueAt("RuleHalfTime",     19, 0);
        model.setValueAt("play_modes",       20, 0);
    }
    
    /**
     * Receives new Simspark states (listener).
     * @param state new/updated simspark state
     */
    @Override
    public void newSimsparkData(SimsparkState state) {
        // iterate through known simspark-state-fields and update values appropiate
        TableModel model = jTable1.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            model.setValueAt(state.get(model.getValueAt(i, 0)), i, 1);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel monitorPanel;
    // End of variables declaration//GEN-END:variables
}
