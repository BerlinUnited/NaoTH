/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StringSelectionPanel.java
 *
 * Created on 08.06.2012, 16:26:07
 */
package de.naoth.rc.dialogs.panels;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;

/**
 *
 * @author admin
 */
public class StringSelectionPanel extends javax.swing.JPanel {

    private ArrayList<String> optionsArray = new ArrayList<String>(); 
    private ArrayList<String> selectedArray = new ArrayList<String>(); 
    
    /** Creates new form StringSelectionPanel */
    public StringSelectionPanel() {
        initComponents();
        
        resetOptionListModel();
        resetSelectedListModel();
    }
    
    private void resetOptionListModel()
    {
        Collections.sort(optionsArray);
        optionsList.setModel(new javax.swing.AbstractListModel()
        {
            @Override
            public int getSize(){ return optionsArray.size(); }

            @Override
            public Object getElementAt(int i){ return optionsArray.get(i); }
        });
    }
    
    private void resetSelectedListModel()
    {
        Collections.sort(selectedArray);
        selectedList.setModel(new javax.swing.AbstractListModel()
        {
            @Override
            public int getSize(){ return selectedArray.size(); }

            @Override
            public Object getElementAt(int i){ return selectedArray.get(i); }
        });
    }
    
    public void clear()
    {
        optionsArray.clear();
        selectedArray.clear();
        resetOptionListModel();
        resetSelectedListModel();
    }
    
    public void addOption(String name)
    {
        optionsArray.add(name);
        resetOptionListModel();
    }
    
    public void addOptions(String[] names)
    {
        addOptions(Arrays.asList(names));
    }
    
    public void addOptions(Collection<? extends String> names)
    {
        optionsArray.addAll(names);
        resetOptionListModel();
    }
    
    public Collection<String> getSelection()
    {
        return selectedArray;
    }
    
    public Collection<String> getOptions()
    {
        return optionsArray;
    }
    
    public void select(Collection<? extends String> names)
    {
        if(names == null) return;
        
        for(String s: names)
        {
            if(optionsArray.contains(s))
            {
                optionsArray.remove(s);
                selectedArray.add(s);
            }
        }//end for
        resetOptionListModel();
        resetSelectedListModel();
    }//end select
    
    public void clearSelection()
    {
        optionsArray.addAll(selectedArray);
        selectedArray.clear();
        resetOptionListModel();
        resetSelectedListModel();
    }
    
    @Override
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled);
        optionsList.setEnabled(enabled);
        selectedList.setEnabled(enabled);
        moveToLeft.setEnabled(enabled);
        moveToRight.setEnabled(enabled);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        optionsList = new javax.swing.JList();
        toolBar = new javax.swing.JPanel();
        moveToRight = new javax.swing.JButton();
        moveToLeft = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedList = new javax.swing.JList();

        setMinimumSize(new java.awt.Dimension(400, 200));
        setPreferredSize(new java.awt.Dimension(500, 400));
        setLayout(new java.awt.GridBagLayout());

        optionsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(optionsList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 300;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);

        toolBar.setMaximumSize(new java.awt.Dimension(42, 32767));
        toolBar.setMinimumSize(new java.awt.Dimension(20, 46));
        toolBar.setPreferredSize(new java.awt.Dimension(32, 300));
        toolBar.setLayout(new java.awt.GridBagLayout());

        moveToRight.setText(">");
        moveToRight.setMaximumSize(new java.awt.Dimension(40, 50));
        moveToRight.setMinimumSize(new java.awt.Dimension(20, 50));
        moveToRight.setPreferredSize(new java.awt.Dimension(40, 50));
        moveToRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveToRightActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        toolBar.add(moveToRight, gridBagConstraints);

        moveToLeft.setText("<");
        moveToLeft.setMaximumSize(new java.awt.Dimension(40, 50));
        moveToLeft.setMinimumSize(new java.awt.Dimension(20, 50));
        moveToLeft.setPreferredSize(new java.awt.Dimension(40, 50));
        moveToLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveToLeftActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        toolBar.add(moveToLeft, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(toolBar, gridBagConstraints);

        selectedList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(selectedList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 300;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void moveToRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveToRightActionPerformed
        Collection selected = Arrays.asList(optionsList.getSelectedValues());
        selectedArray.addAll(selected);
        optionsArray.removeAll(selected);
        resetOptionListModel();
        resetSelectedListModel();
    }//GEN-LAST:event_moveToRightActionPerformed

    private void moveToLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveToLeftActionPerformed
        Collection selected = Arrays.asList(selectedList.getSelectedValues());
        optionsArray.addAll(selected);
        selectedArray.removeAll(selected);
        resetOptionListModel();
        resetSelectedListModel();
    }//GEN-LAST:event_moveToLeftActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton moveToLeft;
    private javax.swing.JButton moveToRight;
    private javax.swing.JList optionsList;
    private javax.swing.JList selectedList;
    private javax.swing.JPanel toolBar;
    // End of variables declaration//GEN-END:variables
}
