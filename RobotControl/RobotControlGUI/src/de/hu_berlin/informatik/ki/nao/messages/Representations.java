// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Representations.proto

package de.hu_berlin.informatik.ki.nao.messages;

public final class Representations {
  private Representations() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Image extends
      com.google.protobuf.GeneratedMessage {
    // Use Image.newBuilder() to construct.
    private Image() {
      initFields();
    }
    private Image(boolean noInit) {}
    
    private static final Image defaultInstance;
    public static Image getDefaultInstance() {
      return defaultInstance;
    }
    
    public Image getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_Image_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_Image_fieldAccessorTable;
    }
    
    public enum Format
        implements com.google.protobuf.ProtocolMessageEnum {
      YUV(0, 0),
      YUV422(1, 1),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Format valueOf(int value) {
        switch (value) {
          case 0: return YUV;
          case 1: return YUV422;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Format>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Format>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Format>() {
              public Format findValueByNumber(int number) {
                return Format.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.Image.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Format[] VALUES = {
        YUV, YUV422, 
      };
      public static Format valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Format(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        de.hu_berlin.informatik.ki.nao.messages.Representations.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:naothmessages.Image.Format)
    }
    
    // required bytes data = 1;
    public static final int DATA_FIELD_NUMBER = 1;
    private boolean hasData;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasData() { return hasData; }
    public com.google.protobuf.ByteString getData() { return data_; }
    
    // optional int32 width = 2 [default = 320];
    public static final int WIDTH_FIELD_NUMBER = 2;
    private boolean hasWidth;
    private int width_ = 320;
    public boolean hasWidth() { return hasWidth; }
    public int getWidth() { return width_; }
    
    // optional int32 height = 3 [default = 240];
    public static final int HEIGHT_FIELD_NUMBER = 3;
    private boolean hasHeight;
    private int height_ = 240;
    public boolean hasHeight() { return hasHeight; }
    public int getHeight() { return height_; }
    
    // optional .naothmessages.CameraInfo cameraInfo = 4;
    public static final int CAMERAINFO_FIELD_NUMBER = 4;
    private boolean hasCameraInfo;
    private de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo cameraInfo_;
    public boolean hasCameraInfo() { return hasCameraInfo; }
    public de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo getCameraInfo() { return cameraInfo_; }
    
    // optional .naothmessages.Image.Format format = 5 [default = YUV];
    public static final int FORMAT_FIELD_NUMBER = 5;
    private boolean hasFormat;
    private de.hu_berlin.informatik.ki.nao.messages.Representations.Image.Format format_;
    public boolean hasFormat() { return hasFormat; }
    public de.hu_berlin.informatik.ki.nao.messages.Representations.Image.Format getFormat() { return format_; }
    
    // optional uint32 timestamp = 6;
    public static final int TIMESTAMP_FIELD_NUMBER = 6;
    private boolean hasTimestamp;
    private int timestamp_ = 0;
    public boolean hasTimestamp() { return hasTimestamp; }
    public int getTimestamp() { return timestamp_; }
    
    private void initFields() {
      cameraInfo_ = de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.getDefaultInstance();
      format_ = de.hu_berlin.informatik.ki.nao.messages.Representations.Image.Format.YUV;
    }
    public final boolean isInitialized() {
      if (!hasData) return false;
      if (hasCameraInfo()) {
        if (!getCameraInfo().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasData()) {
        output.writeBytes(1, getData());
      }
      if (hasWidth()) {
        output.writeInt32(2, getWidth());
      }
      if (hasHeight()) {
        output.writeInt32(3, getHeight());
      }
      if (hasCameraInfo()) {
        output.writeMessage(4, getCameraInfo());
      }
      if (hasFormat()) {
        output.writeEnum(5, getFormat().getNumber());
      }
      if (hasTimestamp()) {
        output.writeUInt32(6, getTimestamp());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getData());
      }
      if (hasWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getWidth());
      }
      if (hasHeight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getHeight());
      }
      if (hasCameraInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCameraInfo());
      }
      if (hasFormat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, getFormat().getNumber());
      }
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getTimestamp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.Image prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.Image result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.Image.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.Image();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.Image internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.Image();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.Image.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.Image getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.Image.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.Image build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.Image buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.Image buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.Image returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.Image) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.Image)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.Image other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.Image.getDefaultInstance()) return this;
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasCameraInfo()) {
          mergeCameraInfo(other.getCameraInfo());
        }
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setData(input.readBytes());
              break;
            }
            case 16: {
              setWidth(input.readInt32());
              break;
            }
            case 24: {
              setHeight(input.readInt32());
              break;
            }
            case 34: {
              de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.newBuilder();
              if (hasCameraInfo()) {
                subBuilder.mergeFrom(getCameraInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCameraInfo(subBuilder.buildPartial());
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              de.hu_berlin.informatik.ki.nao.messages.Representations.Image.Format value = de.hu_berlin.informatik.ki.nao.messages.Representations.Image.Format.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                setFormat(value);
              }
              break;
            }
            case 48: {
              setTimestamp(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required bytes data = 1;
      public boolean hasData() {
        return result.hasData();
      }
      public com.google.protobuf.ByteString getData() {
        return result.getData();
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder clearData() {
        result.hasData = false;
        result.data_ = getDefaultInstance().getData();
        return this;
      }
      
      // optional int32 width = 2 [default = 320];
      public boolean hasWidth() {
        return result.hasWidth();
      }
      public int getWidth() {
        return result.getWidth();
      }
      public Builder setWidth(int value) {
        result.hasWidth = true;
        result.width_ = value;
        return this;
      }
      public Builder clearWidth() {
        result.hasWidth = false;
        result.width_ = 320;
        return this;
      }
      
      // optional int32 height = 3 [default = 240];
      public boolean hasHeight() {
        return result.hasHeight();
      }
      public int getHeight() {
        return result.getHeight();
      }
      public Builder setHeight(int value) {
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder clearHeight() {
        result.hasHeight = false;
        result.height_ = 240;
        return this;
      }
      
      // optional .naothmessages.CameraInfo cameraInfo = 4;
      public boolean hasCameraInfo() {
        return result.hasCameraInfo();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo getCameraInfo() {
        return result.getCameraInfo();
      }
      public Builder setCameraInfo(de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCameraInfo = true;
        result.cameraInfo_ = value;
        return this;
      }
      public Builder setCameraInfo(de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.Builder builderForValue) {
        result.hasCameraInfo = true;
        result.cameraInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeCameraInfo(de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo value) {
        if (result.hasCameraInfo() &&
            result.cameraInfo_ != de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.getDefaultInstance()) {
          result.cameraInfo_ =
            de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.newBuilder(result.cameraInfo_).mergeFrom(value).buildPartial();
        } else {
          result.cameraInfo_ = value;
        }
        result.hasCameraInfo = true;
        return this;
      }
      public Builder clearCameraInfo() {
        result.hasCameraInfo = false;
        result.cameraInfo_ = de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.getDefaultInstance();
        return this;
      }
      
      // optional .naothmessages.Image.Format format = 5 [default = YUV];
      public boolean hasFormat() {
        return result.hasFormat();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.Image.Format getFormat() {
        return result.getFormat();
      }
      public Builder setFormat(de.hu_berlin.informatik.ki.nao.messages.Representations.Image.Format value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFormat = true;
        result.format_ = value;
        return this;
      }
      public Builder clearFormat() {
        result.hasFormat = false;
        result.format_ = de.hu_berlin.informatik.ki.nao.messages.Representations.Image.Format.YUV;
        return this;
      }
      
      // optional uint32 timestamp = 6;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public int getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(int value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.Image)
    }
    
    static {
      defaultInstance = new Image(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.Image)
  }
  
  public static final class CameraInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use CameraInfo.newBuilder() to construct.
    private CameraInfo() {
      initFields();
    }
    private CameraInfo(boolean noInit) {}
    
    private static final CameraInfo defaultInstance;
    public static CameraInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_CameraInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_CameraInfo_fieldAccessorTable;
    }
    
    // required int32 resolutionWidth = 1;
    public static final int RESOLUTIONWIDTH_FIELD_NUMBER = 1;
    private boolean hasResolutionWidth;
    private int resolutionWidth_ = 0;
    public boolean hasResolutionWidth() { return hasResolutionWidth; }
    public int getResolutionWidth() { return resolutionWidth_; }
    
    // required int32 resolutionHeight = 2;
    public static final int RESOLUTIONHEIGHT_FIELD_NUMBER = 2;
    private boolean hasResolutionHeight;
    private int resolutionHeight_ = 0;
    public boolean hasResolutionHeight() { return hasResolutionHeight; }
    public int getResolutionHeight() { return resolutionHeight_; }
    
    // optional .naothmessages.CameraID cameraID = 4 [default = bottom];
    public static final int CAMERAID_FIELD_NUMBER = 4;
    private boolean hasCameraID;
    private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.CameraID cameraID_;
    public boolean hasCameraID() { return hasCameraID; }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.CameraID getCameraID() { return cameraID_; }
    
    // optional double focalLength = 5;
    public static final int FOCALLENGTH_FIELD_NUMBER = 5;
    private boolean hasFocalLength;
    private double focalLength_ = 0D;
    public boolean hasFocalLength() { return hasFocalLength; }
    public double getFocalLength() { return focalLength_; }
    
    // optional double openingAngleWidth = 6;
    public static final int OPENINGANGLEWIDTH_FIELD_NUMBER = 6;
    private boolean hasOpeningAngleWidth;
    private double openingAngleWidth_ = 0D;
    public boolean hasOpeningAngleWidth() { return hasOpeningAngleWidth; }
    public double getOpeningAngleWidth() { return openingAngleWidth_; }
    
    // optional double openingAngleHeight = 7;
    public static final int OPENINGANGLEHEIGHT_FIELD_NUMBER = 7;
    private boolean hasOpeningAngleHeight;
    private double openingAngleHeight_ = 0D;
    public boolean hasOpeningAngleHeight() { return hasOpeningAngleHeight; }
    public double getOpeningAngleHeight() { return openingAngleHeight_; }
    
    // optional double opticalCenterX = 8;
    public static final int OPTICALCENTERX_FIELD_NUMBER = 8;
    private boolean hasOpticalCenterX;
    private double opticalCenterX_ = 0D;
    public boolean hasOpticalCenterX() { return hasOpticalCenterX; }
    public double getOpticalCenterX() { return opticalCenterX_; }
    
    // optional double opticalCenterY = 9;
    public static final int OPTICALCENTERY_FIELD_NUMBER = 9;
    private boolean hasOpticalCenterY;
    private double opticalCenterY_ = 0D;
    public boolean hasOpticalCenterY() { return hasOpticalCenterY; }
    public double getOpticalCenterY() { return opticalCenterY_; }
    
    // optional int64 size = 10;
    public static final int SIZE_FIELD_NUMBER = 10;
    private boolean hasSize;
    private long size_ = 0L;
    public boolean hasSize() { return hasSize; }
    public long getSize() { return size_; }
    
    // optional int64 memorysize = 11;
    public static final int MEMORYSIZE_FIELD_NUMBER = 11;
    private boolean hasMemorysize;
    private long memorysize_ = 0L;
    public boolean hasMemorysize() { return hasMemorysize; }
    public long getMemorysize() { return memorysize_; }
    
    // optional double cameraRollOffset = 12;
    public static final int CAMERAROLLOFFSET_FIELD_NUMBER = 12;
    private boolean hasCameraRollOffset;
    private double cameraRollOffset_ = 0D;
    public boolean hasCameraRollOffset() { return hasCameraRollOffset; }
    public double getCameraRollOffset() { return cameraRollOffset_; }
    
    // optional double cameraTiltOffset = 13;
    public static final int CAMERATILTOFFSET_FIELD_NUMBER = 13;
    private boolean hasCameraTiltOffset;
    private double cameraTiltOffset_ = 0D;
    public boolean hasCameraTiltOffset() { return hasCameraTiltOffset; }
    public double getCameraTiltOffset() { return cameraTiltOffset_; }
    
    private void initFields() {
      cameraID_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.CameraID.bottom;
    }
    public final boolean isInitialized() {
      if (!hasResolutionWidth) return false;
      if (!hasResolutionHeight) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResolutionWidth()) {
        output.writeInt32(1, getResolutionWidth());
      }
      if (hasResolutionHeight()) {
        output.writeInt32(2, getResolutionHeight());
      }
      if (hasCameraID()) {
        output.writeEnum(4, getCameraID().getNumber());
      }
      if (hasFocalLength()) {
        output.writeDouble(5, getFocalLength());
      }
      if (hasOpeningAngleWidth()) {
        output.writeDouble(6, getOpeningAngleWidth());
      }
      if (hasOpeningAngleHeight()) {
        output.writeDouble(7, getOpeningAngleHeight());
      }
      if (hasOpticalCenterX()) {
        output.writeDouble(8, getOpticalCenterX());
      }
      if (hasOpticalCenterY()) {
        output.writeDouble(9, getOpticalCenterY());
      }
      if (hasSize()) {
        output.writeInt64(10, getSize());
      }
      if (hasMemorysize()) {
        output.writeInt64(11, getMemorysize());
      }
      if (hasCameraRollOffset()) {
        output.writeDouble(12, getCameraRollOffset());
      }
      if (hasCameraTiltOffset()) {
        output.writeDouble(13, getCameraTiltOffset());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResolutionWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getResolutionWidth());
      }
      if (hasResolutionHeight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getResolutionHeight());
      }
      if (hasCameraID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, getCameraID().getNumber());
      }
      if (hasFocalLength()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, getFocalLength());
      }
      if (hasOpeningAngleWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, getOpeningAngleWidth());
      }
      if (hasOpeningAngleHeight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, getOpeningAngleHeight());
      }
      if (hasOpticalCenterX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, getOpticalCenterX());
      }
      if (hasOpticalCenterY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, getOpticalCenterY());
      }
      if (hasSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, getSize());
      }
      if (hasMemorysize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, getMemorysize());
      }
      if (hasCameraRollOffset()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, getCameraRollOffset());
      }
      if (hasCameraTiltOffset()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, getCameraTiltOffset());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.getDefaultInstance()) return this;
        if (other.hasResolutionWidth()) {
          setResolutionWidth(other.getResolutionWidth());
        }
        if (other.hasResolutionHeight()) {
          setResolutionHeight(other.getResolutionHeight());
        }
        if (other.hasCameraID()) {
          setCameraID(other.getCameraID());
        }
        if (other.hasFocalLength()) {
          setFocalLength(other.getFocalLength());
        }
        if (other.hasOpeningAngleWidth()) {
          setOpeningAngleWidth(other.getOpeningAngleWidth());
        }
        if (other.hasOpeningAngleHeight()) {
          setOpeningAngleHeight(other.getOpeningAngleHeight());
        }
        if (other.hasOpticalCenterX()) {
          setOpticalCenterX(other.getOpticalCenterX());
        }
        if (other.hasOpticalCenterY()) {
          setOpticalCenterY(other.getOpticalCenterY());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasMemorysize()) {
          setMemorysize(other.getMemorysize());
        }
        if (other.hasCameraRollOffset()) {
          setCameraRollOffset(other.getCameraRollOffset());
        }
        if (other.hasCameraTiltOffset()) {
          setCameraTiltOffset(other.getCameraTiltOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setResolutionWidth(input.readInt32());
              break;
            }
            case 16: {
              setResolutionHeight(input.readInt32());
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.CameraID value = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.CameraID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                setCameraID(value);
              }
              break;
            }
            case 41: {
              setFocalLength(input.readDouble());
              break;
            }
            case 49: {
              setOpeningAngleWidth(input.readDouble());
              break;
            }
            case 57: {
              setOpeningAngleHeight(input.readDouble());
              break;
            }
            case 65: {
              setOpticalCenterX(input.readDouble());
              break;
            }
            case 73: {
              setOpticalCenterY(input.readDouble());
              break;
            }
            case 80: {
              setSize(input.readInt64());
              break;
            }
            case 88: {
              setMemorysize(input.readInt64());
              break;
            }
            case 97: {
              setCameraRollOffset(input.readDouble());
              break;
            }
            case 105: {
              setCameraTiltOffset(input.readDouble());
              break;
            }
          }
        }
      }
      
      
      // required int32 resolutionWidth = 1;
      public boolean hasResolutionWidth() {
        return result.hasResolutionWidth();
      }
      public int getResolutionWidth() {
        return result.getResolutionWidth();
      }
      public Builder setResolutionWidth(int value) {
        result.hasResolutionWidth = true;
        result.resolutionWidth_ = value;
        return this;
      }
      public Builder clearResolutionWidth() {
        result.hasResolutionWidth = false;
        result.resolutionWidth_ = 0;
        return this;
      }
      
      // required int32 resolutionHeight = 2;
      public boolean hasResolutionHeight() {
        return result.hasResolutionHeight();
      }
      public int getResolutionHeight() {
        return result.getResolutionHeight();
      }
      public Builder setResolutionHeight(int value) {
        result.hasResolutionHeight = true;
        result.resolutionHeight_ = value;
        return this;
      }
      public Builder clearResolutionHeight() {
        result.hasResolutionHeight = false;
        result.resolutionHeight_ = 0;
        return this;
      }
      
      // optional .naothmessages.CameraID cameraID = 4 [default = bottom];
      public boolean hasCameraID() {
        return result.hasCameraID();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.CameraID getCameraID() {
        return result.getCameraID();
      }
      public Builder setCameraID(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.CameraID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCameraID = true;
        result.cameraID_ = value;
        return this;
      }
      public Builder clearCameraID() {
        result.hasCameraID = false;
        result.cameraID_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.CameraID.bottom;
        return this;
      }
      
      // optional double focalLength = 5;
      public boolean hasFocalLength() {
        return result.hasFocalLength();
      }
      public double getFocalLength() {
        return result.getFocalLength();
      }
      public Builder setFocalLength(double value) {
        result.hasFocalLength = true;
        result.focalLength_ = value;
        return this;
      }
      public Builder clearFocalLength() {
        result.hasFocalLength = false;
        result.focalLength_ = 0D;
        return this;
      }
      
      // optional double openingAngleWidth = 6;
      public boolean hasOpeningAngleWidth() {
        return result.hasOpeningAngleWidth();
      }
      public double getOpeningAngleWidth() {
        return result.getOpeningAngleWidth();
      }
      public Builder setOpeningAngleWidth(double value) {
        result.hasOpeningAngleWidth = true;
        result.openingAngleWidth_ = value;
        return this;
      }
      public Builder clearOpeningAngleWidth() {
        result.hasOpeningAngleWidth = false;
        result.openingAngleWidth_ = 0D;
        return this;
      }
      
      // optional double openingAngleHeight = 7;
      public boolean hasOpeningAngleHeight() {
        return result.hasOpeningAngleHeight();
      }
      public double getOpeningAngleHeight() {
        return result.getOpeningAngleHeight();
      }
      public Builder setOpeningAngleHeight(double value) {
        result.hasOpeningAngleHeight = true;
        result.openingAngleHeight_ = value;
        return this;
      }
      public Builder clearOpeningAngleHeight() {
        result.hasOpeningAngleHeight = false;
        result.openingAngleHeight_ = 0D;
        return this;
      }
      
      // optional double opticalCenterX = 8;
      public boolean hasOpticalCenterX() {
        return result.hasOpticalCenterX();
      }
      public double getOpticalCenterX() {
        return result.getOpticalCenterX();
      }
      public Builder setOpticalCenterX(double value) {
        result.hasOpticalCenterX = true;
        result.opticalCenterX_ = value;
        return this;
      }
      public Builder clearOpticalCenterX() {
        result.hasOpticalCenterX = false;
        result.opticalCenterX_ = 0D;
        return this;
      }
      
      // optional double opticalCenterY = 9;
      public boolean hasOpticalCenterY() {
        return result.hasOpticalCenterY();
      }
      public double getOpticalCenterY() {
        return result.getOpticalCenterY();
      }
      public Builder setOpticalCenterY(double value) {
        result.hasOpticalCenterY = true;
        result.opticalCenterY_ = value;
        return this;
      }
      public Builder clearOpticalCenterY() {
        result.hasOpticalCenterY = false;
        result.opticalCenterY_ = 0D;
        return this;
      }
      
      // optional int64 size = 10;
      public boolean hasSize() {
        return result.hasSize();
      }
      public long getSize() {
        return result.getSize();
      }
      public Builder setSize(long value) {
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder clearSize() {
        result.hasSize = false;
        result.size_ = 0L;
        return this;
      }
      
      // optional int64 memorysize = 11;
      public boolean hasMemorysize() {
        return result.hasMemorysize();
      }
      public long getMemorysize() {
        return result.getMemorysize();
      }
      public Builder setMemorysize(long value) {
        result.hasMemorysize = true;
        result.memorysize_ = value;
        return this;
      }
      public Builder clearMemorysize() {
        result.hasMemorysize = false;
        result.memorysize_ = 0L;
        return this;
      }
      
      // optional double cameraRollOffset = 12;
      public boolean hasCameraRollOffset() {
        return result.hasCameraRollOffset();
      }
      public double getCameraRollOffset() {
        return result.getCameraRollOffset();
      }
      public Builder setCameraRollOffset(double value) {
        result.hasCameraRollOffset = true;
        result.cameraRollOffset_ = value;
        return this;
      }
      public Builder clearCameraRollOffset() {
        result.hasCameraRollOffset = false;
        result.cameraRollOffset_ = 0D;
        return this;
      }
      
      // optional double cameraTiltOffset = 13;
      public boolean hasCameraTiltOffset() {
        return result.hasCameraTiltOffset();
      }
      public double getCameraTiltOffset() {
        return result.getCameraTiltOffset();
      }
      public Builder setCameraTiltOffset(double value) {
        result.hasCameraTiltOffset = true;
        result.cameraTiltOffset_ = value;
        return this;
      }
      public Builder clearCameraTiltOffset() {
        result.hasCameraTiltOffset = false;
        result.cameraTiltOffset_ = 0D;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.CameraInfo)
    }
    
    static {
      defaultInstance = new CameraInfo(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.CameraInfo)
  }
  
  public static final class JointData extends
      com.google.protobuf.GeneratedMessage {
    // Use JointData.newBuilder() to construct.
    private JointData() {
      initFields();
    }
    private JointData(boolean noInit) {}
    
    private static final JointData defaultInstance;
    public static JointData getDefaultInstance() {
      return defaultInstance;
    }
    
    public JointData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_JointData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_JointData_fieldAccessorTable;
    }
    
    // repeated double position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> position_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getPositionList() {
      return position_;
    }
    public int getPositionCount() { return position_.size(); }
    public double getPosition(int index) {
      return position_.get(index);
    }
    
    // repeated double hardness = 2;
    public static final int HARDNESS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> hardness_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getHardnessList() {
      return hardness_;
    }
    public int getHardnessCount() { return hardness_.size(); }
    public double getHardness(int index) {
      return hardness_.get(index);
    }
    
    // repeated double dp = 3;
    public static final int DP_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> dp_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getDpList() {
      return dp_;
    }
    public int getDpCount() { return dp_.size(); }
    public double getDp(int index) {
      return dp_.get(index);
    }
    
    // repeated double ddp = 4;
    public static final int DDP_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> ddp_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getDdpList() {
      return ddp_;
    }
    public int getDdpCount() { return ddp_.size(); }
    public double getDdp(int index) {
      return ddp_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (double element : getPositionList()) {
        output.writeDouble(1, element);
      }
      for (double element : getHardnessList()) {
        output.writeDouble(2, element);
      }
      for (double element : getDpList()) {
        output.writeDouble(3, element);
      }
      for (double element : getDdpList()) {
        output.writeDouble(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getPositionList().size();
        size += dataSize;
        size += 1 * getPositionList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getHardnessList().size();
        size += dataSize;
        size += 1 * getHardnessList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDpList().size();
        size += dataSize;
        size += 1 * getDpList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDdpList().size();
        size += dataSize;
        size += 1 * getDdpList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.JointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.JointData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.JointData result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.JointData();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.JointData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.JointData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.JointData getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.JointData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.JointData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.JointData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.position_ != java.util.Collections.EMPTY_LIST) {
          result.position_ =
            java.util.Collections.unmodifiableList(result.position_);
        }
        if (result.hardness_ != java.util.Collections.EMPTY_LIST) {
          result.hardness_ =
            java.util.Collections.unmodifiableList(result.hardness_);
        }
        if (result.dp_ != java.util.Collections.EMPTY_LIST) {
          result.dp_ =
            java.util.Collections.unmodifiableList(result.dp_);
        }
        if (result.ddp_ != java.util.Collections.EMPTY_LIST) {
          result.ddp_ =
            java.util.Collections.unmodifiableList(result.ddp_);
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.JointData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.JointData) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.JointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.JointData other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.getDefaultInstance()) return this;
        if (!other.position_.isEmpty()) {
          if (result.position_.isEmpty()) {
            result.position_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.position_.addAll(other.position_);
        }
        if (!other.hardness_.isEmpty()) {
          if (result.hardness_.isEmpty()) {
            result.hardness_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.hardness_.addAll(other.hardness_);
        }
        if (!other.dp_.isEmpty()) {
          if (result.dp_.isEmpty()) {
            result.dp_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.dp_.addAll(other.dp_);
        }
        if (!other.ddp_.isEmpty()) {
          if (result.ddp_.isEmpty()) {
            result.ddp_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.ddp_.addAll(other.ddp_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              addPosition(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPosition(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              addHardness(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addHardness(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              addDp(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDp(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              addDdp(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDdp(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated double position = 1;
      public java.util.List<java.lang.Double> getPositionList() {
        return java.util.Collections.unmodifiableList(result.position_);
      }
      public int getPositionCount() {
        return result.getPositionCount();
      }
      public double getPosition(int index) {
        return result.getPosition(index);
      }
      public Builder setPosition(int index, double value) {
        result.position_.set(index, value);
        return this;
      }
      public Builder addPosition(double value) {
        if (result.position_.isEmpty()) {
          result.position_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.position_.add(value);
        return this;
      }
      public Builder addAllPosition(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.position_.isEmpty()) {
          result.position_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.position_);
        return this;
      }
      public Builder clearPosition() {
        result.position_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double hardness = 2;
      public java.util.List<java.lang.Double> getHardnessList() {
        return java.util.Collections.unmodifiableList(result.hardness_);
      }
      public int getHardnessCount() {
        return result.getHardnessCount();
      }
      public double getHardness(int index) {
        return result.getHardness(index);
      }
      public Builder setHardness(int index, double value) {
        result.hardness_.set(index, value);
        return this;
      }
      public Builder addHardness(double value) {
        if (result.hardness_.isEmpty()) {
          result.hardness_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.hardness_.add(value);
        return this;
      }
      public Builder addAllHardness(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.hardness_.isEmpty()) {
          result.hardness_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.hardness_);
        return this;
      }
      public Builder clearHardness() {
        result.hardness_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double dp = 3;
      public java.util.List<java.lang.Double> getDpList() {
        return java.util.Collections.unmodifiableList(result.dp_);
      }
      public int getDpCount() {
        return result.getDpCount();
      }
      public double getDp(int index) {
        return result.getDp(index);
      }
      public Builder setDp(int index, double value) {
        result.dp_.set(index, value);
        return this;
      }
      public Builder addDp(double value) {
        if (result.dp_.isEmpty()) {
          result.dp_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.dp_.add(value);
        return this;
      }
      public Builder addAllDp(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.dp_.isEmpty()) {
          result.dp_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.dp_);
        return this;
      }
      public Builder clearDp() {
        result.dp_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double ddp = 4;
      public java.util.List<java.lang.Double> getDdpList() {
        return java.util.Collections.unmodifiableList(result.ddp_);
      }
      public int getDdpCount() {
        return result.getDdpCount();
      }
      public double getDdp(int index) {
        return result.getDdp(index);
      }
      public Builder setDdp(int index, double value) {
        result.ddp_.set(index, value);
        return this;
      }
      public Builder addDdp(double value) {
        if (result.ddp_.isEmpty()) {
          result.ddp_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.ddp_.add(value);
        return this;
      }
      public Builder addAllDdp(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.ddp_.isEmpty()) {
          result.ddp_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.ddp_);
        return this;
      }
      public Builder clearDdp() {
        result.ddp_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.JointData)
    }
    
    static {
      defaultInstance = new JointData(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.JointData)
  }
  
  public static final class SensorJointData extends
      com.google.protobuf.GeneratedMessage {
    // Use SensorJointData.newBuilder() to construct.
    private SensorJointData() {
      initFields();
    }
    private SensorJointData(boolean noInit) {}
    
    private static final SensorJointData defaultInstance;
    public static SensorJointData getDefaultInstance() {
      return defaultInstance;
    }
    
    public SensorJointData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_SensorJointData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_SensorJointData_fieldAccessorTable;
    }
    
    // required .naothmessages.JointData jointData = 1;
    public static final int JOINTDATA_FIELD_NUMBER = 1;
    private boolean hasJointData;
    private de.hu_berlin.informatik.ki.nao.messages.Representations.JointData jointData_;
    public boolean hasJointData() { return hasJointData; }
    public de.hu_berlin.informatik.ki.nao.messages.Representations.JointData getJointData() { return jointData_; }
    
    // repeated double temperature = 2;
    public static final int TEMPERATURE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> temperature_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getTemperatureList() {
      return temperature_;
    }
    public int getTemperatureCount() { return temperature_.size(); }
    public double getTemperature(int index) {
      return temperature_.get(index);
    }
    
    // repeated double electricCurrent = 3;
    public static final int ELECTRICCURRENT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> electricCurrent_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getElectricCurrentList() {
      return electricCurrent_;
    }
    public int getElectricCurrentCount() { return electricCurrent_.size(); }
    public double getElectricCurrent(int index) {
      return electricCurrent_.get(index);
    }
    
    private void initFields() {
      jointData_ = de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasJointData) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasJointData()) {
        output.writeMessage(1, getJointData());
      }
      for (double element : getTemperatureList()) {
        output.writeDouble(2, element);
      }
      for (double element : getElectricCurrentList()) {
        output.writeDouble(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasJointData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getJointData());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getTemperatureList().size();
        size += dataSize;
        size += 1 * getTemperatureList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getElectricCurrentList().size();
        size += dataSize;
        size += 1 * getElectricCurrentList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.temperature_ != java.util.Collections.EMPTY_LIST) {
          result.temperature_ =
            java.util.Collections.unmodifiableList(result.temperature_);
        }
        if (result.electricCurrent_ != java.util.Collections.EMPTY_LIST) {
          result.electricCurrent_ =
            java.util.Collections.unmodifiableList(result.electricCurrent_);
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData.getDefaultInstance()) return this;
        if (other.hasJointData()) {
          mergeJointData(other.getJointData());
        }
        if (!other.temperature_.isEmpty()) {
          if (result.temperature_.isEmpty()) {
            result.temperature_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.temperature_.addAll(other.temperature_);
        }
        if (!other.electricCurrent_.isEmpty()) {
          if (result.electricCurrent_.isEmpty()) {
            result.electricCurrent_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.electricCurrent_.addAll(other.electricCurrent_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.newBuilder();
              if (hasJointData()) {
                subBuilder.mergeFrom(getJointData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setJointData(subBuilder.buildPartial());
              break;
            }
            case 17: {
              addTemperature(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTemperature(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              addElectricCurrent(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addElectricCurrent(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required .naothmessages.JointData jointData = 1;
      public boolean hasJointData() {
        return result.hasJointData();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.JointData getJointData() {
        return result.getJointData();
      }
      public Builder setJointData(de.hu_berlin.informatik.ki.nao.messages.Representations.JointData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasJointData = true;
        result.jointData_ = value;
        return this;
      }
      public Builder setJointData(de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.Builder builderForValue) {
        result.hasJointData = true;
        result.jointData_ = builderForValue.build();
        return this;
      }
      public Builder mergeJointData(de.hu_berlin.informatik.ki.nao.messages.Representations.JointData value) {
        if (result.hasJointData() &&
            result.jointData_ != de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.getDefaultInstance()) {
          result.jointData_ =
            de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.newBuilder(result.jointData_).mergeFrom(value).buildPartial();
        } else {
          result.jointData_ = value;
        }
        result.hasJointData = true;
        return this;
      }
      public Builder clearJointData() {
        result.hasJointData = false;
        result.jointData_ = de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.getDefaultInstance();
        return this;
      }
      
      // repeated double temperature = 2;
      public java.util.List<java.lang.Double> getTemperatureList() {
        return java.util.Collections.unmodifiableList(result.temperature_);
      }
      public int getTemperatureCount() {
        return result.getTemperatureCount();
      }
      public double getTemperature(int index) {
        return result.getTemperature(index);
      }
      public Builder setTemperature(int index, double value) {
        result.temperature_.set(index, value);
        return this;
      }
      public Builder addTemperature(double value) {
        if (result.temperature_.isEmpty()) {
          result.temperature_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.temperature_.add(value);
        return this;
      }
      public Builder addAllTemperature(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.temperature_.isEmpty()) {
          result.temperature_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.temperature_);
        return this;
      }
      public Builder clearTemperature() {
        result.temperature_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double electricCurrent = 3;
      public java.util.List<java.lang.Double> getElectricCurrentList() {
        return java.util.Collections.unmodifiableList(result.electricCurrent_);
      }
      public int getElectricCurrentCount() {
        return result.getElectricCurrentCount();
      }
      public double getElectricCurrent(int index) {
        return result.getElectricCurrent(index);
      }
      public Builder setElectricCurrent(int index, double value) {
        result.electricCurrent_.set(index, value);
        return this;
      }
      public Builder addElectricCurrent(double value) {
        if (result.electricCurrent_.isEmpty()) {
          result.electricCurrent_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.electricCurrent_.add(value);
        return this;
      }
      public Builder addAllElectricCurrent(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.electricCurrent_.isEmpty()) {
          result.electricCurrent_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.electricCurrent_);
        return this;
      }
      public Builder clearElectricCurrent() {
        result.electricCurrent_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.SensorJointData)
    }
    
    static {
      defaultInstance = new SensorJointData(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.SensorJointData)
  }
  
  public static final class CameraMatrix extends
      com.google.protobuf.GeneratedMessage {
    // Use CameraMatrix.newBuilder() to construct.
    private CameraMatrix() {
      initFields();
    }
    private CameraMatrix(boolean noInit) {}
    
    private static final CameraMatrix defaultInstance;
    public static CameraMatrix getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraMatrix getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_CameraMatrix_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_CameraMatrix_fieldAccessorTable;
    }
    
    // required .naothmessages.Pose3D pose = 1;
    public static final int POSE_FIELD_NUMBER = 1;
    private boolean hasPose;
    private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D pose_;
    public boolean hasPose() { return hasPose; }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D getPose() { return pose_; }
    
    private void initFields() {
      pose_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasPose) return false;
      if (!getPose().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPose()) {
        output.writeMessage(1, getPose());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPose()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPose());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix.getDefaultInstance()) return this;
        if (other.hasPose()) {
          mergePose(other.getPose());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.newBuilder();
              if (hasPose()) {
                subBuilder.mergeFrom(getPose());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPose(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .naothmessages.Pose3D pose = 1;
      public boolean hasPose() {
        return result.hasPose();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D getPose() {
        return result.getPose();
      }
      public Builder setPose(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPose = true;
        result.pose_ = value;
        return this;
      }
      public Builder setPose(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.Builder builderForValue) {
        result.hasPose = true;
        result.pose_ = builderForValue.build();
        return this;
      }
      public Builder mergePose(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D value) {
        if (result.hasPose() &&
            result.pose_ != de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.getDefaultInstance()) {
          result.pose_ =
            de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.newBuilder(result.pose_).mergeFrom(value).buildPartial();
        } else {
          result.pose_ = value;
        }
        result.hasPose = true;
        return this;
      }
      public Builder clearPose() {
        result.hasPose = false;
        result.pose_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.CameraMatrix)
    }
    
    static {
      defaultInstance = new CameraMatrix(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.CameraMatrix)
  }
  
  public static final class FrameInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use FrameInfo.newBuilder() to construct.
    private FrameInfo() {
      initFields();
    }
    private FrameInfo(boolean noInit) {}
    
    private static final FrameInfo defaultInstance;
    public static FrameInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public FrameInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_FrameInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_FrameInfo_fieldAccessorTable;
    }
    
    // optional uint32 frameNumber = 1;
    public static final int FRAMENUMBER_FIELD_NUMBER = 1;
    private boolean hasFrameNumber;
    private int frameNumber_ = 0;
    public boolean hasFrameNumber() { return hasFrameNumber; }
    public int getFrameNumber() { return frameNumber_; }
    
    // optional uint32 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private boolean hasTime;
    private int time_ = 0;
    public boolean hasTime() { return hasTime; }
    public int getTime() { return time_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFrameNumber()) {
        output.writeUInt32(1, getFrameNumber());
      }
      if (hasTime()) {
        output.writeUInt32(2, getTime());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFrameNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getFrameNumber());
      }
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.getDefaultInstance()) return this;
        if (other.hasFrameNumber()) {
          setFrameNumber(other.getFrameNumber());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setFrameNumber(input.readUInt32());
              break;
            }
            case 16: {
              setTime(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 frameNumber = 1;
      public boolean hasFrameNumber() {
        return result.hasFrameNumber();
      }
      public int getFrameNumber() {
        return result.getFrameNumber();
      }
      public Builder setFrameNumber(int value) {
        result.hasFrameNumber = true;
        result.frameNumber_ = value;
        return this;
      }
      public Builder clearFrameNumber() {
        result.hasFrameNumber = false;
        result.frameNumber_ = 0;
        return this;
      }
      
      // optional uint32 time = 2;
      public boolean hasTime() {
        return result.hasTime();
      }
      public int getTime() {
        return result.getTime();
      }
      public Builder setTime(int value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.FrameInfo)
    }
    
    static {
      defaultInstance = new FrameInfo(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.FrameInfo)
  }
  
  public static final class BallPercept extends
      com.google.protobuf.GeneratedMessage {
    // Use BallPercept.newBuilder() to construct.
    private BallPercept() {
      initFields();
    }
    private BallPercept(boolean noInit) {}
    
    private static final BallPercept defaultInstance;
    public static BallPercept getDefaultInstance() {
      return defaultInstance;
    }
    
    public BallPercept getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_BallPercept_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_BallPercept_fieldAccessorTable;
    }
    
    // optional bool ballWasSeen = 1;
    public static final int BALLWASSEEN_FIELD_NUMBER = 1;
    private boolean hasBallWasSeen;
    private boolean ballWasSeen_ = false;
    public boolean hasBallWasSeen() { return hasBallWasSeen; }
    public boolean getBallWasSeen() { return ballWasSeen_; }
    
    // optional .naothmessages.DoubleVector2 centerInImage = 2;
    public static final int CENTERINIMAGE_FIELD_NUMBER = 2;
    private boolean hasCenterInImage;
    private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 centerInImage_;
    public boolean hasCenterInImage() { return hasCenterInImage; }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 getCenterInImage() { return centerInImage_; }
    
    // optional double radiusInImage = 3;
    public static final int RADIUSINIMAGE_FIELD_NUMBER = 3;
    private boolean hasRadiusInImage;
    private double radiusInImage_ = 0D;
    public boolean hasRadiusInImage() { return hasRadiusInImage; }
    public double getRadiusInImage() { return radiusInImage_; }
    
    // optional .naothmessages.Color ballColor = 4;
    public static final int BALLCOLOR_FIELD_NUMBER = 4;
    private boolean hasBallColor;
    private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Color ballColor_;
    public boolean hasBallColor() { return hasBallColor; }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Color getBallColor() { return ballColor_; }
    
    // optional .naothmessages.DoubleVector2 bearingBasedOffsetOnField = 5;
    public static final int BEARINGBASEDOFFSETONFIELD_FIELD_NUMBER = 5;
    private boolean hasBearingBasedOffsetOnField;
    private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 bearingBasedOffsetOnField_;
    public boolean hasBearingBasedOffsetOnField() { return hasBearingBasedOffsetOnField; }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 getBearingBasedOffsetOnField() { return bearingBasedOffsetOnField_; }
    
    // optional .naothmessages.FrameInfo frameInfoWhenBallWasSeen = 6;
    public static final int FRAMEINFOWHENBALLWASSEEN_FIELD_NUMBER = 6;
    private boolean hasFrameInfoWhenBallWasSeen;
    private de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo frameInfoWhenBallWasSeen_;
    public boolean hasFrameInfoWhenBallWasSeen() { return hasFrameInfoWhenBallWasSeen; }
    public de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo getFrameInfoWhenBallWasSeen() { return frameInfoWhenBallWasSeen_; }
    
    private void initFields() {
      centerInImage_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.getDefaultInstance();
      ballColor_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Color.none;
      bearingBasedOffsetOnField_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.getDefaultInstance();
      frameInfoWhenBallWasSeen_ = de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasCenterInImage()) {
        if (!getCenterInImage().isInitialized()) return false;
      }
      if (hasBearingBasedOffsetOnField()) {
        if (!getBearingBasedOffsetOnField().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBallWasSeen()) {
        output.writeBool(1, getBallWasSeen());
      }
      if (hasCenterInImage()) {
        output.writeMessage(2, getCenterInImage());
      }
      if (hasRadiusInImage()) {
        output.writeDouble(3, getRadiusInImage());
      }
      if (hasBallColor()) {
        output.writeEnum(4, getBallColor().getNumber());
      }
      if (hasBearingBasedOffsetOnField()) {
        output.writeMessage(5, getBearingBasedOffsetOnField());
      }
      if (hasFrameInfoWhenBallWasSeen()) {
        output.writeMessage(6, getFrameInfoWhenBallWasSeen());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBallWasSeen()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getBallWasSeen());
      }
      if (hasCenterInImage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCenterInImage());
      }
      if (hasRadiusInImage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, getRadiusInImage());
      }
      if (hasBallColor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, getBallColor().getNumber());
      }
      if (hasBearingBasedOffsetOnField()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getBearingBasedOffsetOnField());
      }
      if (hasFrameInfoWhenBallWasSeen()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getFrameInfoWhenBallWasSeen());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept.getDefaultInstance()) return this;
        if (other.hasBallWasSeen()) {
          setBallWasSeen(other.getBallWasSeen());
        }
        if (other.hasCenterInImage()) {
          mergeCenterInImage(other.getCenterInImage());
        }
        if (other.hasRadiusInImage()) {
          setRadiusInImage(other.getRadiusInImage());
        }
        if (other.hasBallColor()) {
          setBallColor(other.getBallColor());
        }
        if (other.hasBearingBasedOffsetOnField()) {
          mergeBearingBasedOffsetOnField(other.getBearingBasedOffsetOnField());
        }
        if (other.hasFrameInfoWhenBallWasSeen()) {
          mergeFrameInfoWhenBallWasSeen(other.getFrameInfoWhenBallWasSeen());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setBallWasSeen(input.readBool());
              break;
            }
            case 18: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.newBuilder();
              if (hasCenterInImage()) {
                subBuilder.mergeFrom(getCenterInImage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCenterInImage(subBuilder.buildPartial());
              break;
            }
            case 25: {
              setRadiusInImage(input.readDouble());
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Color value = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Color.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                setBallColor(value);
              }
              break;
            }
            case 42: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.newBuilder();
              if (hasBearingBasedOffsetOnField()) {
                subBuilder.mergeFrom(getBearingBasedOffsetOnField());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBearingBasedOffsetOnField(subBuilder.buildPartial());
              break;
            }
            case 50: {
              de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.newBuilder();
              if (hasFrameInfoWhenBallWasSeen()) {
                subBuilder.mergeFrom(getFrameInfoWhenBallWasSeen());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFrameInfoWhenBallWasSeen(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional bool ballWasSeen = 1;
      public boolean hasBallWasSeen() {
        return result.hasBallWasSeen();
      }
      public boolean getBallWasSeen() {
        return result.getBallWasSeen();
      }
      public Builder setBallWasSeen(boolean value) {
        result.hasBallWasSeen = true;
        result.ballWasSeen_ = value;
        return this;
      }
      public Builder clearBallWasSeen() {
        result.hasBallWasSeen = false;
        result.ballWasSeen_ = false;
        return this;
      }
      
      // optional .naothmessages.DoubleVector2 centerInImage = 2;
      public boolean hasCenterInImage() {
        return result.hasCenterInImage();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 getCenterInImage() {
        return result.getCenterInImage();
      }
      public Builder setCenterInImage(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCenterInImage = true;
        result.centerInImage_ = value;
        return this;
      }
      public Builder setCenterInImage(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        result.hasCenterInImage = true;
        result.centerInImage_ = builderForValue.build();
        return this;
      }
      public Builder mergeCenterInImage(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 value) {
        if (result.hasCenterInImage() &&
            result.centerInImage_ != de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.getDefaultInstance()) {
          result.centerInImage_ =
            de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.newBuilder(result.centerInImage_).mergeFrom(value).buildPartial();
        } else {
          result.centerInImage_ = value;
        }
        result.hasCenterInImage = true;
        return this;
      }
      public Builder clearCenterInImage() {
        result.hasCenterInImage = false;
        result.centerInImage_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.getDefaultInstance();
        return this;
      }
      
      // optional double radiusInImage = 3;
      public boolean hasRadiusInImage() {
        return result.hasRadiusInImage();
      }
      public double getRadiusInImage() {
        return result.getRadiusInImage();
      }
      public Builder setRadiusInImage(double value) {
        result.hasRadiusInImage = true;
        result.radiusInImage_ = value;
        return this;
      }
      public Builder clearRadiusInImage() {
        result.hasRadiusInImage = false;
        result.radiusInImage_ = 0D;
        return this;
      }
      
      // optional .naothmessages.Color ballColor = 4;
      public boolean hasBallColor() {
        return result.hasBallColor();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Color getBallColor() {
        return result.getBallColor();
      }
      public Builder setBallColor(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBallColor = true;
        result.ballColor_ = value;
        return this;
      }
      public Builder clearBallColor() {
        result.hasBallColor = false;
        result.ballColor_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Color.none;
        return this;
      }
      
      // optional .naothmessages.DoubleVector2 bearingBasedOffsetOnField = 5;
      public boolean hasBearingBasedOffsetOnField() {
        return result.hasBearingBasedOffsetOnField();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 getBearingBasedOffsetOnField() {
        return result.getBearingBasedOffsetOnField();
      }
      public Builder setBearingBasedOffsetOnField(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBearingBasedOffsetOnField = true;
        result.bearingBasedOffsetOnField_ = value;
        return this;
      }
      public Builder setBearingBasedOffsetOnField(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        result.hasBearingBasedOffsetOnField = true;
        result.bearingBasedOffsetOnField_ = builderForValue.build();
        return this;
      }
      public Builder mergeBearingBasedOffsetOnField(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 value) {
        if (result.hasBearingBasedOffsetOnField() &&
            result.bearingBasedOffsetOnField_ != de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.getDefaultInstance()) {
          result.bearingBasedOffsetOnField_ =
            de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.newBuilder(result.bearingBasedOffsetOnField_).mergeFrom(value).buildPartial();
        } else {
          result.bearingBasedOffsetOnField_ = value;
        }
        result.hasBearingBasedOffsetOnField = true;
        return this;
      }
      public Builder clearBearingBasedOffsetOnField() {
        result.hasBearingBasedOffsetOnField = false;
        result.bearingBasedOffsetOnField_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.getDefaultInstance();
        return this;
      }
      
      // optional .naothmessages.FrameInfo frameInfoWhenBallWasSeen = 6;
      public boolean hasFrameInfoWhenBallWasSeen() {
        return result.hasFrameInfoWhenBallWasSeen();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo getFrameInfoWhenBallWasSeen() {
        return result.getFrameInfoWhenBallWasSeen();
      }
      public Builder setFrameInfoWhenBallWasSeen(de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFrameInfoWhenBallWasSeen = true;
        result.frameInfoWhenBallWasSeen_ = value;
        return this;
      }
      public Builder setFrameInfoWhenBallWasSeen(de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.Builder builderForValue) {
        result.hasFrameInfoWhenBallWasSeen = true;
        result.frameInfoWhenBallWasSeen_ = builderForValue.build();
        return this;
      }
      public Builder mergeFrameInfoWhenBallWasSeen(de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo value) {
        if (result.hasFrameInfoWhenBallWasSeen() &&
            result.frameInfoWhenBallWasSeen_ != de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.getDefaultInstance()) {
          result.frameInfoWhenBallWasSeen_ =
            de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.newBuilder(result.frameInfoWhenBallWasSeen_).mergeFrom(value).buildPartial();
        } else {
          result.frameInfoWhenBallWasSeen_ = value;
        }
        result.hasFrameInfoWhenBallWasSeen = true;
        return this;
      }
      public Builder clearFrameInfoWhenBallWasSeen() {
        result.hasFrameInfoWhenBallWasSeen = false;
        result.frameInfoWhenBallWasSeen_ = de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.BallPercept)
    }
    
    static {
      defaultInstance = new BallPercept(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.BallPercept)
  }
  
  public static final class GoalPercept extends
      com.google.protobuf.GeneratedMessage {
    // Use GoalPercept.newBuilder() to construct.
    private GoalPercept() {
      initFields();
    }
    private GoalPercept(boolean noInit) {}
    
    private static final GoalPercept defaultInstance;
    public static GoalPercept getDefaultInstance() {
      return defaultInstance;
    }
    
    public GoalPercept getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_GoalPercept_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_GoalPercept_fieldAccessorTable;
    }
    
    // optional double angleToSeenGoal = 1;
    public static final int ANGLETOSEENGOAL_FIELD_NUMBER = 1;
    private boolean hasAngleToSeenGoal;
    private double angleToSeenGoal_ = 0D;
    public boolean hasAngleToSeenGoal() { return hasAngleToSeenGoal; }
    public double getAngleToSeenGoal() { return angleToSeenGoal_; }
    
    // optional .naothmessages.DoubleVector3 goalCentroid = 2;
    public static final int GOALCENTROID_FIELD_NUMBER = 2;
    private boolean hasGoalCentroid;
    private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 goalCentroid_;
    public boolean hasGoalCentroid() { return hasGoalCentroid; }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 getGoalCentroid() { return goalCentroid_; }
    
    // optional int32 numberOfSeenPosts = 3;
    public static final int NUMBEROFSEENPOSTS_FIELD_NUMBER = 3;
    private boolean hasNumberOfSeenPosts;
    private int numberOfSeenPosts_ = 0;
    public boolean hasNumberOfSeenPosts() { return hasNumberOfSeenPosts; }
    public int getNumberOfSeenPosts() { return numberOfSeenPosts_; }
    
    // repeated .naothmessages.GoalPost post = 4;
    public static final int POST_FIELD_NUMBER = 4;
    private java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost> post_ =
      java.util.Collections.emptyList();
    public java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost> getPostList() {
      return post_;
    }
    public int getPostCount() { return post_.size(); }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost getPost(int index) {
      return post_.get(index);
    }
    
    private void initFields() {
      goalCentroid_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasGoalCentroid()) {
        if (!getGoalCentroid().isInitialized()) return false;
      }
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost element : getPostList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAngleToSeenGoal()) {
        output.writeDouble(1, getAngleToSeenGoal());
      }
      if (hasGoalCentroid()) {
        output.writeMessage(2, getGoalCentroid());
      }
      if (hasNumberOfSeenPosts()) {
        output.writeInt32(3, getNumberOfSeenPosts());
      }
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost element : getPostList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAngleToSeenGoal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getAngleToSeenGoal());
      }
      if (hasGoalCentroid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGoalCentroid());
      }
      if (hasNumberOfSeenPosts()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getNumberOfSeenPosts());
      }
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost element : getPostList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.post_ != java.util.Collections.EMPTY_LIST) {
          result.post_ =
            java.util.Collections.unmodifiableList(result.post_);
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept.getDefaultInstance()) return this;
        if (other.hasAngleToSeenGoal()) {
          setAngleToSeenGoal(other.getAngleToSeenGoal());
        }
        if (other.hasGoalCentroid()) {
          mergeGoalCentroid(other.getGoalCentroid());
        }
        if (other.hasNumberOfSeenPosts()) {
          setNumberOfSeenPosts(other.getNumberOfSeenPosts());
        }
        if (!other.post_.isEmpty()) {
          if (result.post_.isEmpty()) {
            result.post_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost>();
          }
          result.post_.addAll(other.post_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setAngleToSeenGoal(input.readDouble());
              break;
            }
            case 18: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.newBuilder();
              if (hasGoalCentroid()) {
                subBuilder.mergeFrom(getGoalCentroid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGoalCentroid(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setNumberOfSeenPosts(input.readInt32());
              break;
            }
            case 34: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPost(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional double angleToSeenGoal = 1;
      public boolean hasAngleToSeenGoal() {
        return result.hasAngleToSeenGoal();
      }
      public double getAngleToSeenGoal() {
        return result.getAngleToSeenGoal();
      }
      public Builder setAngleToSeenGoal(double value) {
        result.hasAngleToSeenGoal = true;
        result.angleToSeenGoal_ = value;
        return this;
      }
      public Builder clearAngleToSeenGoal() {
        result.hasAngleToSeenGoal = false;
        result.angleToSeenGoal_ = 0D;
        return this;
      }
      
      // optional .naothmessages.DoubleVector3 goalCentroid = 2;
      public boolean hasGoalCentroid() {
        return result.hasGoalCentroid();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 getGoalCentroid() {
        return result.getGoalCentroid();
      }
      public Builder setGoalCentroid(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGoalCentroid = true;
        result.goalCentroid_ = value;
        return this;
      }
      public Builder setGoalCentroid(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.Builder builderForValue) {
        result.hasGoalCentroid = true;
        result.goalCentroid_ = builderForValue.build();
        return this;
      }
      public Builder mergeGoalCentroid(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 value) {
        if (result.hasGoalCentroid() &&
            result.goalCentroid_ != de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.getDefaultInstance()) {
          result.goalCentroid_ =
            de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.newBuilder(result.goalCentroid_).mergeFrom(value).buildPartial();
        } else {
          result.goalCentroid_ = value;
        }
        result.hasGoalCentroid = true;
        return this;
      }
      public Builder clearGoalCentroid() {
        result.hasGoalCentroid = false;
        result.goalCentroid_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.getDefaultInstance();
        return this;
      }
      
      // optional int32 numberOfSeenPosts = 3;
      public boolean hasNumberOfSeenPosts() {
        return result.hasNumberOfSeenPosts();
      }
      public int getNumberOfSeenPosts() {
        return result.getNumberOfSeenPosts();
      }
      public Builder setNumberOfSeenPosts(int value) {
        result.hasNumberOfSeenPosts = true;
        result.numberOfSeenPosts_ = value;
        return this;
      }
      public Builder clearNumberOfSeenPosts() {
        result.hasNumberOfSeenPosts = false;
        result.numberOfSeenPosts_ = 0;
        return this;
      }
      
      // repeated .naothmessages.GoalPost post = 4;
      public java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost> getPostList() {
        return java.util.Collections.unmodifiableList(result.post_);
      }
      public int getPostCount() {
        return result.getPostCount();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost getPost(int index) {
        return result.getPost(index);
      }
      public Builder setPost(int index, de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.post_.set(index, value);
        return this;
      }
      public Builder setPost(int index, de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost.Builder builderForValue) {
        result.post_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPost(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.post_.isEmpty()) {
          result.post_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost>();
        }
        result.post_.add(value);
        return this;
      }
      public Builder addPost(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost.Builder builderForValue) {
        if (result.post_.isEmpty()) {
          result.post_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost>();
        }
        result.post_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPost(
          java.lang.Iterable<? extends de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost> values) {
        if (result.post_.isEmpty()) {
          result.post_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.GoalPost>();
        }
        super.addAll(values, result.post_);
        return this;
      }
      public Builder clearPost() {
        result.post_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.GoalPercept)
    }
    
    static {
      defaultInstance = new GoalPercept(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.GoalPercept)
  }
  
  public static final class WalkRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use WalkRequest.newBuilder() to construct.
    private WalkRequest() {
      initFields();
    }
    private WalkRequest(boolean noInit) {}
    
    private static final WalkRequest defaultInstance;
    public static WalkRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public WalkRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_WalkRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_WalkRequest_fieldAccessorTable;
    }
    
    // required uint32 coordinate = 1;
    public static final int COORDINATE_FIELD_NUMBER = 1;
    private boolean hasCoordinate;
    private int coordinate_ = 0;
    public boolean hasCoordinate() { return hasCoordinate; }
    public int getCoordinate() { return coordinate_; }
    
    // required bool stopWithStand = 2;
    public static final int STOPWITHSTAND_FIELD_NUMBER = 2;
    private boolean hasStopWithStand;
    private boolean stopWithStand_ = false;
    public boolean hasStopWithStand() { return hasStopWithStand; }
    public boolean getStopWithStand() { return stopWithStand_; }
    
    // required bool stable = 3;
    public static final int STABLE_FIELD_NUMBER = 3;
    private boolean hasStable;
    private boolean stable_ = false;
    public boolean hasStable() { return hasStable; }
    public boolean getStable() { return stable_; }
    
    // required .naothmessages.Pose2D pose = 4;
    public static final int POSE_FIELD_NUMBER = 4;
    private boolean hasPose;
    private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D pose_;
    public boolean hasPose() { return hasPose; }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D getPose() { return pose_; }
    
    private void initFields() {
      pose_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasCoordinate) return false;
      if (!hasStopWithStand) return false;
      if (!hasStable) return false;
      if (!hasPose) return false;
      if (!getPose().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCoordinate()) {
        output.writeUInt32(1, getCoordinate());
      }
      if (hasStopWithStand()) {
        output.writeBool(2, getStopWithStand());
      }
      if (hasStable()) {
        output.writeBool(3, getStable());
      }
      if (hasPose()) {
        output.writeMessage(4, getPose());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCoordinate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getCoordinate());
      }
      if (hasStopWithStand()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getStopWithStand());
      }
      if (hasStable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getStable());
      }
      if (hasPose()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPose());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.getDefaultInstance()) return this;
        if (other.hasCoordinate()) {
          setCoordinate(other.getCoordinate());
        }
        if (other.hasStopWithStand()) {
          setStopWithStand(other.getStopWithStand());
        }
        if (other.hasStable()) {
          setStable(other.getStable());
        }
        if (other.hasPose()) {
          mergePose(other.getPose());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCoordinate(input.readUInt32());
              break;
            }
            case 16: {
              setStopWithStand(input.readBool());
              break;
            }
            case 24: {
              setStable(input.readBool());
              break;
            }
            case 34: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D.newBuilder();
              if (hasPose()) {
                subBuilder.mergeFrom(getPose());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPose(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint32 coordinate = 1;
      public boolean hasCoordinate() {
        return result.hasCoordinate();
      }
      public int getCoordinate() {
        return result.getCoordinate();
      }
      public Builder setCoordinate(int value) {
        result.hasCoordinate = true;
        result.coordinate_ = value;
        return this;
      }
      public Builder clearCoordinate() {
        result.hasCoordinate = false;
        result.coordinate_ = 0;
        return this;
      }
      
      // required bool stopWithStand = 2;
      public boolean hasStopWithStand() {
        return result.hasStopWithStand();
      }
      public boolean getStopWithStand() {
        return result.getStopWithStand();
      }
      public Builder setStopWithStand(boolean value) {
        result.hasStopWithStand = true;
        result.stopWithStand_ = value;
        return this;
      }
      public Builder clearStopWithStand() {
        result.hasStopWithStand = false;
        result.stopWithStand_ = false;
        return this;
      }
      
      // required bool stable = 3;
      public boolean hasStable() {
        return result.hasStable();
      }
      public boolean getStable() {
        return result.getStable();
      }
      public Builder setStable(boolean value) {
        result.hasStable = true;
        result.stable_ = value;
        return this;
      }
      public Builder clearStable() {
        result.hasStable = false;
        result.stable_ = false;
        return this;
      }
      
      // required .naothmessages.Pose2D pose = 4;
      public boolean hasPose() {
        return result.hasPose();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D getPose() {
        return result.getPose();
      }
      public Builder setPose(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPose = true;
        result.pose_ = value;
        return this;
      }
      public Builder setPose(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D.Builder builderForValue) {
        result.hasPose = true;
        result.pose_ = builderForValue.build();
        return this;
      }
      public Builder mergePose(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D value) {
        if (result.hasPose() &&
            result.pose_ != de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D.getDefaultInstance()) {
          result.pose_ =
            de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D.newBuilder(result.pose_).mergeFrom(value).buildPartial();
        } else {
          result.pose_ = value;
        }
        result.hasPose = true;
        return this;
      }
      public Builder clearPose() {
        result.hasPose = false;
        result.pose_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose2D.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.WalkRequest)
    }
    
    static {
      defaultInstance = new WalkRequest(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.WalkRequest)
  }
  
  public static final class MotionRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use MotionRequest.newBuilder() to construct.
    private MotionRequest() {
      initFields();
    }
    private MotionRequest(boolean noInit) {}
    
    private static final MotionRequest defaultInstance;
    public static MotionRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public MotionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_MotionRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_MotionRequest_fieldAccessorTable;
    }
    
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // required uint32 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private boolean hasTime;
    private int time_ = 0;
    public boolean hasTime() { return hasTime; }
    public int getTime() { return time_; }
    
    // required bool forced = 3;
    public static final int FORCED_FIELD_NUMBER = 3;
    private boolean hasForced;
    private boolean forced_ = false;
    public boolean hasForced() { return hasForced; }
    public boolean getForced() { return forced_; }
    
    // optional .naothmessages.WalkRequest walkRequest = 4;
    public static final int WALKREQUEST_FIELD_NUMBER = 4;
    private boolean hasWalkRequest;
    private de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest walkRequest_;
    public boolean hasWalkRequest() { return hasWalkRequest; }
    public de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest getWalkRequest() { return walkRequest_; }
    
    private void initFields() {
      walkRequest_ = de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasTime) return false;
      if (!hasForced) return false;
      if (hasWalkRequest()) {
        if (!getWalkRequest().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeUInt32(1, getId());
      }
      if (hasTime()) {
        output.writeUInt32(2, getTime());
      }
      if (hasForced()) {
        output.writeBool(3, getForced());
      }
      if (hasWalkRequest()) {
        output.writeMessage(4, getWalkRequest());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getId());
      }
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getTime());
      }
      if (hasForced()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getForced());
      }
      if (hasWalkRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getWalkRequest());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasForced()) {
          setForced(other.getForced());
        }
        if (other.hasWalkRequest()) {
          mergeWalkRequest(other.getWalkRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readUInt32());
              break;
            }
            case 16: {
              setTime(input.readUInt32());
              break;
            }
            case 24: {
              setForced(input.readBool());
              break;
            }
            case 34: {
              de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.newBuilder();
              if (hasWalkRequest()) {
                subBuilder.mergeFrom(getWalkRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWalkRequest(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // required uint32 time = 2;
      public boolean hasTime() {
        return result.hasTime();
      }
      public int getTime() {
        return result.getTime();
      }
      public Builder setTime(int value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0;
        return this;
      }
      
      // required bool forced = 3;
      public boolean hasForced() {
        return result.hasForced();
      }
      public boolean getForced() {
        return result.getForced();
      }
      public Builder setForced(boolean value) {
        result.hasForced = true;
        result.forced_ = value;
        return this;
      }
      public Builder clearForced() {
        result.hasForced = false;
        result.forced_ = false;
        return this;
      }
      
      // optional .naothmessages.WalkRequest walkRequest = 4;
      public boolean hasWalkRequest() {
        return result.hasWalkRequest();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest getWalkRequest() {
        return result.getWalkRequest();
      }
      public Builder setWalkRequest(de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasWalkRequest = true;
        result.walkRequest_ = value;
        return this;
      }
      public Builder setWalkRequest(de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.Builder builderForValue) {
        result.hasWalkRequest = true;
        result.walkRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeWalkRequest(de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest value) {
        if (result.hasWalkRequest() &&
            result.walkRequest_ != de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.getDefaultInstance()) {
          result.walkRequest_ =
            de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.newBuilder(result.walkRequest_).mergeFrom(value).buildPartial();
        } else {
          result.walkRequest_ = value;
        }
        result.hasWalkRequest = true;
        return this;
      }
      public Builder clearWalkRequest() {
        result.hasWalkRequest = false;
        result.walkRequest_ = de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.MotionRequest)
    }
    
    static {
      defaultInstance = new MotionRequest(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.MotionRequest)
  }
  
  public static final class LinePercept extends
      com.google.protobuf.GeneratedMessage {
    // Use LinePercept.newBuilder() to construct.
    private LinePercept() {
      initFields();
    }
    private LinePercept(boolean noInit) {}
    
    private static final LinePercept defaultInstance;
    public static LinePercept getDefaultInstance() {
      return defaultInstance;
    }
    
    public LinePercept getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_LinePercept_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_LinePercept_fieldAccessorTable;
    }
    
    // repeated .naothmessages.FieldLineSegment lines = 1;
    public static final int LINES_FIELD_NUMBER = 1;
    private java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment> lines_ =
      java.util.Collections.emptyList();
    public java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment> getLinesList() {
      return lines_;
    }
    public int getLinesCount() { return lines_.size(); }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment getLines(int index) {
      return lines_.get(index);
    }
    
    // repeated .naothmessages.Intersection intersections = 2;
    public static final int INTERSECTIONS_FIELD_NUMBER = 2;
    private java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection> intersections_ =
      java.util.Collections.emptyList();
    public java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection> getIntersectionsList() {
      return intersections_;
    }
    public int getIntersectionsCount() { return intersections_.size(); }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection getIntersections(int index) {
      return intersections_.get(index);
    }
    
    // optional .naothmessages.DoubleVector2 middleCircleCenter = 3;
    public static final int MIDDLECIRCLECENTER_FIELD_NUMBER = 3;
    private boolean hasMiddleCircleCenter;
    private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 middleCircleCenter_;
    public boolean hasMiddleCircleCenter() { return hasMiddleCircleCenter; }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 getMiddleCircleCenter() { return middleCircleCenter_; }
    
    private void initFields() {
      middleCircleCenter_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.getDefaultInstance();
    }
    public final boolean isInitialized() {
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment element : getLinesList()) {
        if (!element.isInitialized()) return false;
      }
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection element : getIntersectionsList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasMiddleCircleCenter()) {
        if (!getMiddleCircleCenter().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment element : getLinesList()) {
        output.writeMessage(1, element);
      }
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection element : getIntersectionsList()) {
        output.writeMessage(2, element);
      }
      if (hasMiddleCircleCenter()) {
        output.writeMessage(3, getMiddleCircleCenter());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment element : getLinesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection element : getIntersectionsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasMiddleCircleCenter()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMiddleCircleCenter());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.lines_ != java.util.Collections.EMPTY_LIST) {
          result.lines_ =
            java.util.Collections.unmodifiableList(result.lines_);
        }
        if (result.intersections_ != java.util.Collections.EMPTY_LIST) {
          result.intersections_ =
            java.util.Collections.unmodifiableList(result.intersections_);
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept.getDefaultInstance()) return this;
        if (!other.lines_.isEmpty()) {
          if (result.lines_.isEmpty()) {
            result.lines_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment>();
          }
          result.lines_.addAll(other.lines_);
        }
        if (!other.intersections_.isEmpty()) {
          if (result.intersections_.isEmpty()) {
            result.intersections_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection>();
          }
          result.intersections_.addAll(other.intersections_);
        }
        if (other.hasMiddleCircleCenter()) {
          mergeMiddleCircleCenter(other.getMiddleCircleCenter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLines(subBuilder.buildPartial());
              break;
            }
            case 18: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addIntersections(subBuilder.buildPartial());
              break;
            }
            case 26: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.newBuilder();
              if (hasMiddleCircleCenter()) {
                subBuilder.mergeFrom(getMiddleCircleCenter());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMiddleCircleCenter(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .naothmessages.FieldLineSegment lines = 1;
      public java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment> getLinesList() {
        return java.util.Collections.unmodifiableList(result.lines_);
      }
      public int getLinesCount() {
        return result.getLinesCount();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment getLines(int index) {
        return result.getLines(index);
      }
      public Builder setLines(int index, de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.lines_.set(index, value);
        return this;
      }
      public Builder setLines(int index, de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment.Builder builderForValue) {
        result.lines_.set(index, builderForValue.build());
        return this;
      }
      public Builder addLines(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.lines_.isEmpty()) {
          result.lines_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment>();
        }
        result.lines_.add(value);
        return this;
      }
      public Builder addLines(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment.Builder builderForValue) {
        if (result.lines_.isEmpty()) {
          result.lines_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment>();
        }
        result.lines_.add(builderForValue.build());
        return this;
      }
      public Builder addAllLines(
          java.lang.Iterable<? extends de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment> values) {
        if (result.lines_.isEmpty()) {
          result.lines_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.FieldLineSegment>();
        }
        super.addAll(values, result.lines_);
        return this;
      }
      public Builder clearLines() {
        result.lines_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .naothmessages.Intersection intersections = 2;
      public java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection> getIntersectionsList() {
        return java.util.Collections.unmodifiableList(result.intersections_);
      }
      public int getIntersectionsCount() {
        return result.getIntersectionsCount();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection getIntersections(int index) {
        return result.getIntersections(index);
      }
      public Builder setIntersections(int index, de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.intersections_.set(index, value);
        return this;
      }
      public Builder setIntersections(int index, de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection.Builder builderForValue) {
        result.intersections_.set(index, builderForValue.build());
        return this;
      }
      public Builder addIntersections(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.intersections_.isEmpty()) {
          result.intersections_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection>();
        }
        result.intersections_.add(value);
        return this;
      }
      public Builder addIntersections(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection.Builder builderForValue) {
        if (result.intersections_.isEmpty()) {
          result.intersections_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection>();
        }
        result.intersections_.add(builderForValue.build());
        return this;
      }
      public Builder addAllIntersections(
          java.lang.Iterable<? extends de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection> values) {
        if (result.intersections_.isEmpty()) {
          result.intersections_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Intersection>();
        }
        super.addAll(values, result.intersections_);
        return this;
      }
      public Builder clearIntersections() {
        result.intersections_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .naothmessages.DoubleVector2 middleCircleCenter = 3;
      public boolean hasMiddleCircleCenter() {
        return result.hasMiddleCircleCenter();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 getMiddleCircleCenter() {
        return result.getMiddleCircleCenter();
      }
      public Builder setMiddleCircleCenter(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMiddleCircleCenter = true;
        result.middleCircleCenter_ = value;
        return this;
      }
      public Builder setMiddleCircleCenter(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        result.hasMiddleCircleCenter = true;
        result.middleCircleCenter_ = builderForValue.build();
        return this;
      }
      public Builder mergeMiddleCircleCenter(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2 value) {
        if (result.hasMiddleCircleCenter() &&
            result.middleCircleCenter_ != de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.getDefaultInstance()) {
          result.middleCircleCenter_ =
            de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.newBuilder(result.middleCircleCenter_).mergeFrom(value).buildPartial();
        } else {
          result.middleCircleCenter_ = value;
        }
        result.hasMiddleCircleCenter = true;
        return this;
      }
      public Builder clearMiddleCircleCenter() {
        result.hasMiddleCircleCenter = false;
        result.middleCircleCenter_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector2.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.LinePercept)
    }
    
    static {
      defaultInstance = new LinePercept(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.LinePercept)
  }
  
  public static final class FSRData extends
      com.google.protobuf.GeneratedMessage {
    // Use FSRData.newBuilder() to construct.
    private FSRData() {
      initFields();
    }
    private FSRData(boolean noInit) {}
    
    private static final FSRData defaultInstance;
    public static FSRData getDefaultInstance() {
      return defaultInstance;
    }
    
    public FSRData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_FSRData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.Representations.internal_static_naothmessages_FSRData_fieldAccessorTable;
    }
    
    // repeated double force = 1;
    public static final int FORCE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> force_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getForceList() {
      return force_;
    }
    public int getForceCount() { return force_.size(); }
    public double getForce(int index) {
      return force_.get(index);
    }
    
    // repeated double data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> data_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getDataList() {
      return data_;
    }
    public int getDataCount() { return data_.size(); }
    public double getData(int index) {
      return data_.get(index);
    }
    
    // repeated bool valid = 3;
    public static final int VALID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Boolean> valid_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Boolean> getValidList() {
      return valid_;
    }
    public int getValidCount() { return valid_.size(); }
    public boolean getValid(int index) {
      return valid_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (double element : getForceList()) {
        output.writeDouble(1, element);
      }
      for (double element : getDataList()) {
        output.writeDouble(2, element);
      }
      for (boolean element : getValidList()) {
        output.writeBool(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getForceList().size();
        size += dataSize;
        size += 1 * getForceList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDataList().size();
        size += dataSize;
        size += 1 * getDataList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getValidList().size();
        size += dataSize;
        size += 1 * getValidList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.force_ != java.util.Collections.EMPTY_LIST) {
          result.force_ =
            java.util.Collections.unmodifiableList(result.force_);
        }
        if (result.data_ != java.util.Collections.EMPTY_LIST) {
          result.data_ =
            java.util.Collections.unmodifiableList(result.data_);
        }
        if (result.valid_ != java.util.Collections.EMPTY_LIST) {
          result.valid_ =
            java.util.Collections.unmodifiableList(result.valid_);
        }
        de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData.getDefaultInstance()) return this;
        if (!other.force_.isEmpty()) {
          if (result.force_.isEmpty()) {
            result.force_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.force_.addAll(other.force_);
        }
        if (!other.data_.isEmpty()) {
          if (result.data_.isEmpty()) {
            result.data_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.data_.addAll(other.data_);
        }
        if (!other.valid_.isEmpty()) {
          if (result.valid_.isEmpty()) {
            result.valid_ = new java.util.ArrayList<java.lang.Boolean>();
          }
          result.valid_.addAll(other.valid_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              addForce(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addForce(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              addData(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addData(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              addValid(input.readBool());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addValid(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated double force = 1;
      public java.util.List<java.lang.Double> getForceList() {
        return java.util.Collections.unmodifiableList(result.force_);
      }
      public int getForceCount() {
        return result.getForceCount();
      }
      public double getForce(int index) {
        return result.getForce(index);
      }
      public Builder setForce(int index, double value) {
        result.force_.set(index, value);
        return this;
      }
      public Builder addForce(double value) {
        if (result.force_.isEmpty()) {
          result.force_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.force_.add(value);
        return this;
      }
      public Builder addAllForce(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.force_.isEmpty()) {
          result.force_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.force_);
        return this;
      }
      public Builder clearForce() {
        result.force_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double data = 2;
      public java.util.List<java.lang.Double> getDataList() {
        return java.util.Collections.unmodifiableList(result.data_);
      }
      public int getDataCount() {
        return result.getDataCount();
      }
      public double getData(int index) {
        return result.getData(index);
      }
      public Builder setData(int index, double value) {
        result.data_.set(index, value);
        return this;
      }
      public Builder addData(double value) {
        if (result.data_.isEmpty()) {
          result.data_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.data_.add(value);
        return this;
      }
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.data_.isEmpty()) {
          result.data_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.data_);
        return this;
      }
      public Builder clearData() {
        result.data_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated bool valid = 3;
      public java.util.List<java.lang.Boolean> getValidList() {
        return java.util.Collections.unmodifiableList(result.valid_);
      }
      public int getValidCount() {
        return result.getValidCount();
      }
      public boolean getValid(int index) {
        return result.getValid(index);
      }
      public Builder setValid(int index, boolean value) {
        result.valid_.set(index, value);
        return this;
      }
      public Builder addValid(boolean value) {
        if (result.valid_.isEmpty()) {
          result.valid_ = new java.util.ArrayList<java.lang.Boolean>();
        }
        result.valid_.add(value);
        return this;
      }
      public Builder addAllValid(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        if (result.valid_.isEmpty()) {
          result.valid_ = new java.util.ArrayList<java.lang.Boolean>();
        }
        super.addAll(values, result.valid_);
        return this;
      }
      public Builder clearValid() {
        result.valid_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.FSRData)
    }
    
    static {
      defaultInstance = new FSRData(true);
      de.hu_berlin.informatik.ki.nao.messages.Representations.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.FSRData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_Image_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_Image_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_CameraInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_CameraInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_JointData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_JointData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_SensorJointData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_SensorJointData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_CameraMatrix_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_CameraMatrix_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_FrameInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_FrameInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_BallPercept_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_BallPercept_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_GoalPercept_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_GoalPercept_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_WalkRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_WalkRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_MotionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_MotionRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_LinePercept_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_LinePercept_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_FSRData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_FSRData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025Representations.proto\022\rnaothmessages\032\021" +
      "CommonTypes.proto\"\321\001\n\005Image\022\014\n\004data\030\001 \002(" +
      "\014\022\022\n\005width\030\002 \001(\005:\003320\022\023\n\006height\030\003 \001(\005:\0032" +
      "40\022-\n\ncameraInfo\030\004 \001(\0132\031.naothmessages.C" +
      "ameraInfo\0220\n\006format\030\005 \001(\0162\033.naothmessage" +
      "s.Image.Format:\003YUV\022\021\n\ttimestamp\030\006 \001(\r\"\035" +
      "\n\006Format\022\007\n\003YUV\020\000\022\n\n\006YUV422\020\001\"\304\002\n\nCamera" +
      "Info\022\027\n\017resolutionWidth\030\001 \002(\005\022\030\n\020resolut" +
      "ionHeight\030\002 \002(\005\0221\n\010cameraID\030\004 \001(\0162\027.naot" +
      "hmessages.CameraID:\006bottom\022\023\n\013focalLengt",
      "h\030\005 \001(\001\022\031\n\021openingAngleWidth\030\006 \001(\001\022\032\n\022op" +
      "eningAngleHeight\030\007 \001(\001\022\026\n\016opticalCenterX" +
      "\030\010 \001(\001\022\026\n\016opticalCenterY\030\t \001(\001\022\014\n\004size\030\n" +
      " \001(\003\022\022\n\nmemorysize\030\013 \001(\003\022\030\n\020cameraRollOf" +
      "fset\030\014 \001(\001\022\030\n\020cameraTiltOffset\030\r \001(\001\"H\n\t" +
      "JointData\022\020\n\010position\030\001 \003(\001\022\020\n\010hardness\030" +
      "\002 \003(\001\022\n\n\002dp\030\003 \003(\001\022\013\n\003ddp\030\004 \003(\001\"l\n\017Sensor" +
      "JointData\022+\n\tjointData\030\001 \002(\0132\030.naothmess" +
      "ages.JointData\022\023\n\013temperature\030\002 \003(\001\022\027\n\017e" +
      "lectricCurrent\030\003 \003(\001\"3\n\014CameraMatrix\022#\n\004",
      "pose\030\001 \002(\0132\025.naothmessages.Pose3D\".\n\tFra" +
      "meInfo\022\023\n\013frameNumber\030\001 \001(\r\022\014\n\004time\030\002 \001(" +
      "\r\"\224\002\n\013BallPercept\022\023\n\013ballWasSeen\030\001 \001(\010\0223" +
      "\n\rcenterInImage\030\002 \001(\0132\034.naothmessages.Do" +
      "ubleVector2\022\025\n\rradiusInImage\030\003 \001(\001\022\'\n\tba" +
      "llColor\030\004 \001(\0162\024.naothmessages.Color\022?\n\031b" +
      "earingBasedOffsetOnField\030\005 \001(\0132\034.naothme" +
      "ssages.DoubleVector2\022:\n\030frameInfoWhenBal" +
      "lWasSeen\030\006 \001(\0132\030.naothmessages.FrameInfo" +
      "\"\234\001\n\013GoalPercept\022\027\n\017angleToSeenGoal\030\001 \001(",
      "\001\0222\n\014goalCentroid\030\002 \001(\0132\034.naothmessages." +
      "DoubleVector3\022\031\n\021numberOfSeenPosts\030\003 \001(\005" +
      "\022%\n\004post\030\004 \003(\0132\027.naothmessages.GoalPost\"" +
      "m\n\013WalkRequest\022\022\n\ncoordinate\030\001 \002(\r\022\025\n\rst" +
      "opWithStand\030\002 \002(\010\022\016\n\006stable\030\003 \002(\010\022#\n\004pos" +
      "e\030\004 \002(\0132\025.naothmessages.Pose2D\"j\n\rMotion" +
      "Request\022\n\n\002id\030\001 \002(\r\022\014\n\004time\030\002 \002(\r\022\016\n\006for" +
      "ced\030\003 \002(\010\022/\n\013walkRequest\030\004 \001(\0132\032.naothme" +
      "ssages.WalkRequest\"\253\001\n\013LinePercept\022.\n\005li" +
      "nes\030\001 \003(\0132\037.naothmessages.FieldLineSegme",
      "nt\0222\n\rintersections\030\002 \003(\0132\033.naothmessage" +
      "s.Intersection\0228\n\022middleCircleCenter\030\003 \001" +
      "(\0132\034.naothmessages.DoubleVector2\"5\n\007FSRD" +
      "ata\022\r\n\005force\030\001 \003(\001\022\014\n\004data\030\002 \003(\001\022\r\n\005vali" +
      "d\030\003 \003(\010B)\n\'de.hu_berlin.informatik.ki.na" +
      "o.messages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_naothmessages_Image_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_naothmessages_Image_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_Image_descriptor,
              new java.lang.String[] { "Data", "Width", "Height", "CameraInfo", "Format", "Timestamp", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.Image.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.Image.Builder.class);
          internal_static_naothmessages_CameraInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_naothmessages_CameraInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_CameraInfo_descriptor,
              new java.lang.String[] { "ResolutionWidth", "ResolutionHeight", "CameraID", "FocalLength", "OpeningAngleWidth", "OpeningAngleHeight", "OpticalCenterX", "OpticalCenterY", "Size", "Memorysize", "CameraRollOffset", "CameraTiltOffset", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.CameraInfo.Builder.class);
          internal_static_naothmessages_JointData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_naothmessages_JointData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_JointData_descriptor,
              new java.lang.String[] { "Position", "Hardness", "Dp", "Ddp", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.JointData.Builder.class);
          internal_static_naothmessages_SensorJointData_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_naothmessages_SensorJointData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_SensorJointData_descriptor,
              new java.lang.String[] { "JointData", "Temperature", "ElectricCurrent", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.SensorJointData.Builder.class);
          internal_static_naothmessages_CameraMatrix_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_naothmessages_CameraMatrix_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_CameraMatrix_descriptor,
              new java.lang.String[] { "Pose", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.CameraMatrix.Builder.class);
          internal_static_naothmessages_FrameInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_naothmessages_FrameInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_FrameInfo_descriptor,
              new java.lang.String[] { "FrameNumber", "Time", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.FrameInfo.Builder.class);
          internal_static_naothmessages_BallPercept_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_naothmessages_BallPercept_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_BallPercept_descriptor,
              new java.lang.String[] { "BallWasSeen", "CenterInImage", "RadiusInImage", "BallColor", "BearingBasedOffsetOnField", "FrameInfoWhenBallWasSeen", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.BallPercept.Builder.class);
          internal_static_naothmessages_GoalPercept_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_naothmessages_GoalPercept_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_GoalPercept_descriptor,
              new java.lang.String[] { "AngleToSeenGoal", "GoalCentroid", "NumberOfSeenPosts", "Post", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.GoalPercept.Builder.class);
          internal_static_naothmessages_WalkRequest_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_naothmessages_WalkRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_WalkRequest_descriptor,
              new java.lang.String[] { "Coordinate", "StopWithStand", "Stable", "Pose", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.WalkRequest.Builder.class);
          internal_static_naothmessages_MotionRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_naothmessages_MotionRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_MotionRequest_descriptor,
              new java.lang.String[] { "Id", "Time", "Forced", "WalkRequest", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.MotionRequest.Builder.class);
          internal_static_naothmessages_LinePercept_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_naothmessages_LinePercept_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_LinePercept_descriptor,
              new java.lang.String[] { "Lines", "Intersections", "MiddleCircleCenter", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.LinePercept.Builder.class);
          internal_static_naothmessages_FSRData_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_naothmessages_FSRData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_FSRData_descriptor,
              new java.lang.String[] { "Force", "Data", "Valid", },
              de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData.class,
              de.hu_berlin.informatik.ki.nao.messages.Representations.FSRData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          de.hu_berlin.informatik.ki.nao.messages.CommonTypes.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
