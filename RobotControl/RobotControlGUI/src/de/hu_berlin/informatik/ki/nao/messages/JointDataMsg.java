// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JointData.proto

package de.hu_berlin.informatik.ki.nao.messages;

public final class JointDataMsg {
  private JointDataMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class JointData extends
      com.google.protobuf.GeneratedMessage {
    // Use JointData.newBuilder() to construct.
    private JointData() {
      initFields();
    }
    private JointData(boolean noInit) {}
    
    private static final JointData defaultInstance;
    public static JointData getDefaultInstance() {
      return defaultInstance;
    }
    
    public JointData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.internal_static_naothmessages_JointData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.internal_static_naothmessages_JointData_fieldAccessorTable;
    }
    
    // repeated double position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> position_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getPositionList() {
      return position_;
    }
    public int getPositionCount() { return position_.size(); }
    public double getPosition(int index) {
      return position_.get(index);
    }
    
    // repeated double hardness = 2;
    public static final int HARDNESS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> hardness_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getHardnessList() {
      return hardness_;
    }
    public int getHardnessCount() { return hardness_.size(); }
    public double getHardness(int index) {
      return hardness_.get(index);
    }
    
    // repeated double dp = 3;
    public static final int DP_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> dp_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getDpList() {
      return dp_;
    }
    public int getDpCount() { return dp_.size(); }
    public double getDp(int index) {
      return dp_.get(index);
    }
    
    // repeated double ddp = 4;
    public static final int DDP_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> ddp_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getDdpList() {
      return ddp_;
    }
    public int getDdpCount() { return ddp_.size(); }
    public double getDdp(int index) {
      return ddp_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (double element : getPositionList()) {
        output.writeDouble(1, element);
      }
      for (double element : getHardnessList()) {
        output.writeDouble(2, element);
      }
      for (double element : getDpList()) {
        output.writeDouble(3, element);
      }
      for (double element : getDdpList()) {
        output.writeDouble(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getPositionList().size();
        size += dataSize;
        size += 1 * getPositionList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getHardnessList().size();
        size += dataSize;
        size += 1 * getHardnessList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDpList().size();
        size += dataSize;
        size += 1 * getDpList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDdpList().size();
        size += dataSize;
        size += 1 * getDdpList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.position_ != java.util.Collections.EMPTY_LIST) {
          result.position_ =
            java.util.Collections.unmodifiableList(result.position_);
        }
        if (result.hardness_ != java.util.Collections.EMPTY_LIST) {
          result.hardness_ =
            java.util.Collections.unmodifiableList(result.hardness_);
        }
        if (result.dp_ != java.util.Collections.EMPTY_LIST) {
          result.dp_ =
            java.util.Collections.unmodifiableList(result.dp_);
        }
        if (result.ddp_ != java.util.Collections.EMPTY_LIST) {
          result.ddp_ =
            java.util.Collections.unmodifiableList(result.ddp_);
        }
        de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.getDefaultInstance()) return this;
        if (!other.position_.isEmpty()) {
          if (result.position_.isEmpty()) {
            result.position_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.position_.addAll(other.position_);
        }
        if (!other.hardness_.isEmpty()) {
          if (result.hardness_.isEmpty()) {
            result.hardness_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.hardness_.addAll(other.hardness_);
        }
        if (!other.dp_.isEmpty()) {
          if (result.dp_.isEmpty()) {
            result.dp_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.dp_.addAll(other.dp_);
        }
        if (!other.ddp_.isEmpty()) {
          if (result.ddp_.isEmpty()) {
            result.ddp_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.ddp_.addAll(other.ddp_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              addPosition(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPosition(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              addHardness(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addHardness(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              addDp(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDp(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              addDdp(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDdp(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated double position = 1;
      public java.util.List<java.lang.Double> getPositionList() {
        return java.util.Collections.unmodifiableList(result.position_);
      }
      public int getPositionCount() {
        return result.getPositionCount();
      }
      public double getPosition(int index) {
        return result.getPosition(index);
      }
      public Builder setPosition(int index, double value) {
        result.position_.set(index, value);
        return this;
      }
      public Builder addPosition(double value) {
        if (result.position_.isEmpty()) {
          result.position_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.position_.add(value);
        return this;
      }
      public Builder addAllPosition(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.position_.isEmpty()) {
          result.position_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.position_);
        return this;
      }
      public Builder clearPosition() {
        result.position_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double hardness = 2;
      public java.util.List<java.lang.Double> getHardnessList() {
        return java.util.Collections.unmodifiableList(result.hardness_);
      }
      public int getHardnessCount() {
        return result.getHardnessCount();
      }
      public double getHardness(int index) {
        return result.getHardness(index);
      }
      public Builder setHardness(int index, double value) {
        result.hardness_.set(index, value);
        return this;
      }
      public Builder addHardness(double value) {
        if (result.hardness_.isEmpty()) {
          result.hardness_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.hardness_.add(value);
        return this;
      }
      public Builder addAllHardness(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.hardness_.isEmpty()) {
          result.hardness_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.hardness_);
        return this;
      }
      public Builder clearHardness() {
        result.hardness_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double dp = 3;
      public java.util.List<java.lang.Double> getDpList() {
        return java.util.Collections.unmodifiableList(result.dp_);
      }
      public int getDpCount() {
        return result.getDpCount();
      }
      public double getDp(int index) {
        return result.getDp(index);
      }
      public Builder setDp(int index, double value) {
        result.dp_.set(index, value);
        return this;
      }
      public Builder addDp(double value) {
        if (result.dp_.isEmpty()) {
          result.dp_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.dp_.add(value);
        return this;
      }
      public Builder addAllDp(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.dp_.isEmpty()) {
          result.dp_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.dp_);
        return this;
      }
      public Builder clearDp() {
        result.dp_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double ddp = 4;
      public java.util.List<java.lang.Double> getDdpList() {
        return java.util.Collections.unmodifiableList(result.ddp_);
      }
      public int getDdpCount() {
        return result.getDdpCount();
      }
      public double getDdp(int index) {
        return result.getDdp(index);
      }
      public Builder setDdp(int index, double value) {
        result.ddp_.set(index, value);
        return this;
      }
      public Builder addDdp(double value) {
        if (result.ddp_.isEmpty()) {
          result.ddp_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.ddp_.add(value);
        return this;
      }
      public Builder addAllDdp(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.ddp_.isEmpty()) {
          result.ddp_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.ddp_);
        return this;
      }
      public Builder clearDdp() {
        result.ddp_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.JointData)
    }
    
    static {
      defaultInstance = new JointData(true);
      de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.JointData)
  }
  
  public static final class SensorJointData extends
      com.google.protobuf.GeneratedMessage {
    // Use SensorJointData.newBuilder() to construct.
    private SensorJointData() {
      initFields();
    }
    private SensorJointData(boolean noInit) {}
    
    private static final SensorJointData defaultInstance;
    public static SensorJointData getDefaultInstance() {
      return defaultInstance;
    }
    
    public SensorJointData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.internal_static_naothmessages_SensorJointData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.internal_static_naothmessages_SensorJointData_fieldAccessorTable;
    }
    
    // required .naothmessages.JointData jointData = 1;
    public static final int JOINTDATA_FIELD_NUMBER = 1;
    private boolean hasJointData;
    private de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData jointData_;
    public boolean hasJointData() { return hasJointData; }
    public de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData getJointData() { return jointData_; }
    
    // repeated double temperature = 2;
    public static final int TEMPERATURE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> temperature_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getTemperatureList() {
      return temperature_;
    }
    public int getTemperatureCount() { return temperature_.size(); }
    public double getTemperature(int index) {
      return temperature_.get(index);
    }
    
    // repeated double electricCurrent = 3;
    public static final int ELECTRICCURRENT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> electricCurrent_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getElectricCurrentList() {
      return electricCurrent_;
    }
    public int getElectricCurrentCount() { return electricCurrent_.size(); }
    public double getElectricCurrent(int index) {
      return electricCurrent_.get(index);
    }
    
    private void initFields() {
      jointData_ = de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasJointData) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasJointData()) {
        output.writeMessage(1, getJointData());
      }
      for (double element : getTemperatureList()) {
        output.writeDouble(2, element);
      }
      for (double element : getElectricCurrentList()) {
        output.writeDouble(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasJointData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getJointData());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getTemperatureList().size();
        size += dataSize;
        size += 1 * getTemperatureList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getElectricCurrentList().size();
        size += dataSize;
        size += 1 * getElectricCurrentList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.temperature_ != java.util.Collections.EMPTY_LIST) {
          result.temperature_ =
            java.util.Collections.unmodifiableList(result.temperature_);
        }
        if (result.electricCurrent_ != java.util.Collections.EMPTY_LIST) {
          result.electricCurrent_ =
            java.util.Collections.unmodifiableList(result.electricCurrent_);
        }
        de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData.getDefaultInstance()) return this;
        if (other.hasJointData()) {
          mergeJointData(other.getJointData());
        }
        if (!other.temperature_.isEmpty()) {
          if (result.temperature_.isEmpty()) {
            result.temperature_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.temperature_.addAll(other.temperature_);
        }
        if (!other.electricCurrent_.isEmpty()) {
          if (result.electricCurrent_.isEmpty()) {
            result.electricCurrent_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.electricCurrent_.addAll(other.electricCurrent_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.newBuilder();
              if (hasJointData()) {
                subBuilder.mergeFrom(getJointData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setJointData(subBuilder.buildPartial());
              break;
            }
            case 17: {
              addTemperature(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTemperature(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              addElectricCurrent(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addElectricCurrent(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required .naothmessages.JointData jointData = 1;
      public boolean hasJointData() {
        return result.hasJointData();
      }
      public de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData getJointData() {
        return result.getJointData();
      }
      public Builder setJointData(de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasJointData = true;
        result.jointData_ = value;
        return this;
      }
      public Builder setJointData(de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.Builder builderForValue) {
        result.hasJointData = true;
        result.jointData_ = builderForValue.build();
        return this;
      }
      public Builder mergeJointData(de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData value) {
        if (result.hasJointData() &&
            result.jointData_ != de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.getDefaultInstance()) {
          result.jointData_ =
            de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.newBuilder(result.jointData_).mergeFrom(value).buildPartial();
        } else {
          result.jointData_ = value;
        }
        result.hasJointData = true;
        return this;
      }
      public Builder clearJointData() {
        result.hasJointData = false;
        result.jointData_ = de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.getDefaultInstance();
        return this;
      }
      
      // repeated double temperature = 2;
      public java.util.List<java.lang.Double> getTemperatureList() {
        return java.util.Collections.unmodifiableList(result.temperature_);
      }
      public int getTemperatureCount() {
        return result.getTemperatureCount();
      }
      public double getTemperature(int index) {
        return result.getTemperature(index);
      }
      public Builder setTemperature(int index, double value) {
        result.temperature_.set(index, value);
        return this;
      }
      public Builder addTemperature(double value) {
        if (result.temperature_.isEmpty()) {
          result.temperature_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.temperature_.add(value);
        return this;
      }
      public Builder addAllTemperature(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.temperature_.isEmpty()) {
          result.temperature_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.temperature_);
        return this;
      }
      public Builder clearTemperature() {
        result.temperature_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double electricCurrent = 3;
      public java.util.List<java.lang.Double> getElectricCurrentList() {
        return java.util.Collections.unmodifiableList(result.electricCurrent_);
      }
      public int getElectricCurrentCount() {
        return result.getElectricCurrentCount();
      }
      public double getElectricCurrent(int index) {
        return result.getElectricCurrent(index);
      }
      public Builder setElectricCurrent(int index, double value) {
        result.electricCurrent_.set(index, value);
        return this;
      }
      public Builder addElectricCurrent(double value) {
        if (result.electricCurrent_.isEmpty()) {
          result.electricCurrent_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.electricCurrent_.add(value);
        return this;
      }
      public Builder addAllElectricCurrent(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.electricCurrent_.isEmpty()) {
          result.electricCurrent_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.electricCurrent_);
        return this;
      }
      public Builder clearElectricCurrent() {
        result.electricCurrent_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.SensorJointData)
    }
    
    static {
      defaultInstance = new SensorJointData(true);
      de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.SensorJointData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_JointData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_JointData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_SensorJointData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_SensorJointData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017JointData.proto\022\rnaothmessages\"H\n\tJoin" +
      "tData\022\020\n\010position\030\001 \003(\001\022\020\n\010hardness\030\002 \003(" +
      "\001\022\n\n\002dp\030\003 \003(\001\022\013\n\003ddp\030\004 \003(\001\"l\n\017SensorJoin" +
      "tData\022+\n\tjointData\030\001 \002(\0132\030.naothmessages" +
      ".JointData\022\023\n\013temperature\030\002 \003(\001\022\027\n\017elect" +
      "ricCurrent\030\003 \003(\001B7\n\'de.hu_berlin.informa" +
      "tik.ki.nao.messagesB\014JointDataMsg"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_naothmessages_JointData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_naothmessages_JointData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_JointData_descriptor,
              new java.lang.String[] { "Position", "Hardness", "Dp", "Ddp", },
              de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.class,
              de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.JointData.Builder.class);
          internal_static_naothmessages_SensorJointData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_naothmessages_SensorJointData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_SensorJointData_descriptor,
              new java.lang.String[] { "JointData", "Temperature", "ElectricCurrent", },
              de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData.class,
              de.hu_berlin.informatik.ki.nao.messages.JointDataMsg.SensorJointData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
