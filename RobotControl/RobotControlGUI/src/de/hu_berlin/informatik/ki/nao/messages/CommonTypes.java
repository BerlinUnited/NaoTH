// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonTypes.proto

package de.hu_berlin.informatik.ki.nao.messages;

public final class CommonTypes {
  private CommonTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Pose3D extends
      com.google.protobuf.GeneratedMessage {
    // Use Pose3D.newBuilder() to construct.
    private Pose3D() {
      initFields();
    }
    private Pose3D(boolean noInit) {}
    
    private static final Pose3D defaultInstance;
    public static Pose3D getDefaultInstance() {
      return defaultInstance;
    }
    
    public Pose3D getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.internal_static_naothmessages_Pose3D_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.internal_static_naothmessages_Pose3D_fieldAccessorTable;
    }
    
    // required .naothmessages.DoubleVector3 translation = 1;
    public static final int TRANSLATION_FIELD_NUMBER = 1;
    private boolean hasTranslation;
    private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 translation_;
    public boolean hasTranslation() { return hasTranslation; }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 getTranslation() { return translation_; }
    
    // repeated .naothmessages.DoubleVector3 rotation = 2;
    public static final int ROTATION_FIELD_NUMBER = 2;
    private java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3> rotation_ =
      java.util.Collections.emptyList();
    public java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3> getRotationList() {
      return rotation_;
    }
    public int getRotationCount() { return rotation_.size(); }
    public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 getRotation(int index) {
      return rotation_.get(index);
    }
    
    private void initFields() {
      translation_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTranslation) return false;
      if (!getTranslation().isInitialized()) return false;
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 element : getRotationList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTranslation()) {
        output.writeMessage(1, getTranslation());
      }
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 element : getRotationList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTranslation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTranslation());
      }
      for (de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 element : getRotationList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.rotation_ != java.util.Collections.EMPTY_LIST) {
          result.rotation_ =
            java.util.Collections.unmodifiableList(result.rotation_);
        }
        de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.getDefaultInstance()) return this;
        if (other.hasTranslation()) {
          mergeTranslation(other.getTranslation());
        }
        if (!other.rotation_.isEmpty()) {
          if (result.rotation_.isEmpty()) {
            result.rotation_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3>();
          }
          result.rotation_.addAll(other.rotation_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.newBuilder();
              if (hasTranslation()) {
                subBuilder.mergeFrom(getTranslation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTranslation(subBuilder.buildPartial());
              break;
            }
            case 18: {
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.Builder subBuilder = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRotation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .naothmessages.DoubleVector3 translation = 1;
      public boolean hasTranslation() {
        return result.hasTranslation();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 getTranslation() {
        return result.getTranslation();
      }
      public Builder setTranslation(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTranslation = true;
        result.translation_ = value;
        return this;
      }
      public Builder setTranslation(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.Builder builderForValue) {
        result.hasTranslation = true;
        result.translation_ = builderForValue.build();
        return this;
      }
      public Builder mergeTranslation(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 value) {
        if (result.hasTranslation() &&
            result.translation_ != de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.getDefaultInstance()) {
          result.translation_ =
            de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.newBuilder(result.translation_).mergeFrom(value).buildPartial();
        } else {
          result.translation_ = value;
        }
        result.hasTranslation = true;
        return this;
      }
      public Builder clearTranslation() {
        result.hasTranslation = false;
        result.translation_ = de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.getDefaultInstance();
        return this;
      }
      
      // repeated .naothmessages.DoubleVector3 rotation = 2;
      public java.util.List<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3> getRotationList() {
        return java.util.Collections.unmodifiableList(result.rotation_);
      }
      public int getRotationCount() {
        return result.getRotationCount();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 getRotation(int index) {
        return result.getRotation(index);
      }
      public Builder setRotation(int index, de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.rotation_.set(index, value);
        return this;
      }
      public Builder setRotation(int index, de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.Builder builderForValue) {
        result.rotation_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRotation(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.rotation_.isEmpty()) {
          result.rotation_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3>();
        }
        result.rotation_.add(value);
        return this;
      }
      public Builder addRotation(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.Builder builderForValue) {
        if (result.rotation_.isEmpty()) {
          result.rotation_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3>();
        }
        result.rotation_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRotation(
          java.lang.Iterable<? extends de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3> values) {
        if (result.rotation_.isEmpty()) {
          result.rotation_ = new java.util.ArrayList<de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3>();
        }
        super.addAll(values, result.rotation_);
        return this;
      }
      public Builder clearRotation() {
        result.rotation_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.Pose3D)
    }
    
    static {
      defaultInstance = new Pose3D(true);
      de.hu_berlin.informatik.ki.nao.messages.CommonTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.Pose3D)
  }
  
  public static final class DoubleVector extends
      com.google.protobuf.GeneratedMessage {
    // Use DoubleVector.newBuilder() to construct.
    private DoubleVector() {
      initFields();
    }
    private DoubleVector(boolean noInit) {}
    
    private static final DoubleVector defaultInstance;
    public static DoubleVector getDefaultInstance() {
      return defaultInstance;
    }
    
    public DoubleVector getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.internal_static_naothmessages_DoubleVector_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.internal_static_naothmessages_DoubleVector_fieldAccessorTable;
    }
    
    // repeated double v = 1;
    public static final int V_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> v_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getVList() {
      return v_;
    }
    public int getVCount() { return v_.size(); }
    public double getV(int index) {
      return v_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (double element : getVList()) {
        output.writeDouble(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getVList().size();
        size += dataSize;
        size += 1 * getVList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.v_ != java.util.Collections.EMPTY_LIST) {
          result.v_ =
            java.util.Collections.unmodifiableList(result.v_);
        }
        de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector.getDefaultInstance()) return this;
        if (!other.v_.isEmpty()) {
          if (result.v_.isEmpty()) {
            result.v_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.v_.addAll(other.v_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              addV(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addV(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated double v = 1;
      public java.util.List<java.lang.Double> getVList() {
        return java.util.Collections.unmodifiableList(result.v_);
      }
      public int getVCount() {
        return result.getVCount();
      }
      public double getV(int index) {
        return result.getV(index);
      }
      public Builder setV(int index, double value) {
        result.v_.set(index, value);
        return this;
      }
      public Builder addV(double value) {
        if (result.v_.isEmpty()) {
          result.v_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.v_.add(value);
        return this;
      }
      public Builder addAllV(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.v_.isEmpty()) {
          result.v_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.v_);
        return this;
      }
      public Builder clearV() {
        result.v_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.DoubleVector)
    }
    
    static {
      defaultInstance = new DoubleVector(true);
      de.hu_berlin.informatik.ki.nao.messages.CommonTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.DoubleVector)
  }
  
  public static final class DoubleVector3 extends
      com.google.protobuf.GeneratedMessage {
    // Use DoubleVector3.newBuilder() to construct.
    private DoubleVector3() {
      initFields();
    }
    private DoubleVector3(boolean noInit) {}
    
    private static final DoubleVector3 defaultInstance;
    public static DoubleVector3 getDefaultInstance() {
      return defaultInstance;
    }
    
    public DoubleVector3 getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.internal_static_naothmessages_DoubleVector3_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.internal_static_naothmessages_DoubleVector3_fieldAccessorTable;
    }
    
    // required double x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private boolean hasX;
    private double x_ = 0D;
    public boolean hasX() { return hasX; }
    public double getX() { return x_; }
    
    // required double y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private boolean hasY;
    private double y_ = 0D;
    public boolean hasY() { return hasY; }
    public double getY() { return y_; }
    
    // required double z = 3;
    public static final int Z_FIELD_NUMBER = 3;
    private boolean hasZ;
    private double z_ = 0D;
    public boolean hasZ() { return hasZ; }
    public double getZ() { return z_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasX) return false;
      if (!hasY) return false;
      if (!hasZ) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasX()) {
        output.writeDouble(1, getX());
      }
      if (hasY()) {
        output.writeDouble(2, getY());
      }
      if (hasZ()) {
        output.writeDouble(3, getZ());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getY());
      }
      if (hasZ()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, getZ());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 result;
      
      // Construct using de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3();
        return builder;
      }
      
      protected de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.getDescriptor();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 getDefaultInstanceForType() {
        return de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3) {
          return mergeFrom((de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3 other) {
        if (other == de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setX(input.readDouble());
              break;
            }
            case 17: {
              setY(input.readDouble());
              break;
            }
            case 25: {
              setZ(input.readDouble());
              break;
            }
          }
        }
      }
      
      
      // required double x = 1;
      public boolean hasX() {
        return result.hasX();
      }
      public double getX() {
        return result.getX();
      }
      public Builder setX(double value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0D;
        return this;
      }
      
      // required double y = 2;
      public boolean hasY() {
        return result.hasY();
      }
      public double getY() {
        return result.getY();
      }
      public Builder setY(double value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0D;
        return this;
      }
      
      // required double z = 3;
      public boolean hasZ() {
        return result.hasZ();
      }
      public double getZ() {
        return result.getZ();
      }
      public Builder setZ(double value) {
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder clearZ() {
        result.hasZ = false;
        result.z_ = 0D;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.DoubleVector3)
    }
    
    static {
      defaultInstance = new DoubleVector3(true);
      de.hu_berlin.informatik.ki.nao.messages.CommonTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.DoubleVector3)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_Pose3D_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_Pose3D_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_DoubleVector_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_DoubleVector_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_DoubleVector3_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_DoubleVector3_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021CommonTypes.proto\022\rnaothmessages\"k\n\006Po" +
      "se3D\0221\n\013translation\030\001 \002(\0132\034.naothmessage" +
      "s.DoubleVector3\022.\n\010rotation\030\002 \003(\0132\034.naot" +
      "hmessages.DoubleVector3\"\031\n\014DoubleVector\022" +
      "\t\n\001v\030\001 \003(\001\"0\n\rDoubleVector3\022\t\n\001x\030\001 \002(\001\022\t" +
      "\n\001y\030\002 \002(\001\022\t\n\001z\030\003 \002(\001B)\n\'de.hu_berlin.inf" +
      "ormatik.ki.nao.messages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_naothmessages_Pose3D_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_naothmessages_Pose3D_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_Pose3D_descriptor,
              new java.lang.String[] { "Translation", "Rotation", },
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.class,
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.Pose3D.Builder.class);
          internal_static_naothmessages_DoubleVector_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_naothmessages_DoubleVector_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_DoubleVector_descriptor,
              new java.lang.String[] { "V", },
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector.class,
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector.Builder.class);
          internal_static_naothmessages_DoubleVector3_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_naothmessages_DoubleVector3_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_DoubleVector3_descriptor,
              new java.lang.String[] { "X", "Y", "Z", },
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.class,
              de.hu_berlin.informatik.ki.nao.messages.CommonTypes.DoubleVector3.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
