// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Framework-Representations.proto

package de.naoth.rc.messages;

public final class FrameworkRepresentations {
  private FrameworkRepresentations() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ImageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required bytes data = 1;
    boolean hasData();
    com.google.protobuf.ByteString getData();
    
    // optional int32 width = 2 [default = 320];
    boolean hasWidth();
    int getWidth();
    
    // optional int32 height = 3 [default = 240];
    boolean hasHeight();
    int getHeight();
    
    // optional .naothmessages.CameraInfo cameraInfo = 4;
    boolean hasCameraInfo();
    de.naoth.rc.messages.FrameworkRepresentations.CameraInfo getCameraInfo();
    de.naoth.rc.messages.FrameworkRepresentations.CameraInfoOrBuilder getCameraInfoOrBuilder();
    
    // optional .naothmessages.Image.Format format = 5 [default = YUV];
    boolean hasFormat();
    de.naoth.rc.messages.FrameworkRepresentations.Image.Format getFormat();
    
    // optional uint32 timestamp = 6;
    boolean hasTimestamp();
    int getTimestamp();
  }
  public static final class Image extends
      com.google.protobuf.GeneratedMessage
      implements ImageOrBuilder {
    // Use Image.newBuilder() to construct.
    private Image(Builder builder) {
      super(builder);
    }
    private Image(boolean noInit) {}
    
    private static final Image defaultInstance;
    public static Image getDefaultInstance() {
      return defaultInstance;
    }
    
    public Image getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_Image_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_Image_fieldAccessorTable;
    }
    
    public enum Format
        implements com.google.protobuf.ProtocolMessageEnum {
      YUV(0, 0),
      YUV422(1, 1),
      ;
      
      public static final int YUV_VALUE = 0;
      public static final int YUV422_VALUE = 1;
      
      
      public final int getNumber() { return value; }
      
      public static Format valueOf(int value) {
        switch (value) {
          case 0: return YUV;
          case 1: return YUV422;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Format>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Format>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Format>() {
              public Format findValueByNumber(int number) {
                return Format.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return de.naoth.rc.messages.FrameworkRepresentations.Image.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Format[] VALUES = {
        YUV, YUV422, 
      };
      
      public static Format valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private Format(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:naothmessages.Image.Format)
    }
    
    private int bitField0_;
    // required bytes data = 1;
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    
    // optional int32 width = 2 [default = 320];
    public static final int WIDTH_FIELD_NUMBER = 2;
    private int width_;
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getWidth() {
      return width_;
    }
    
    // optional int32 height = 3 [default = 240];
    public static final int HEIGHT_FIELD_NUMBER = 3;
    private int height_;
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getHeight() {
      return height_;
    }
    
    // optional .naothmessages.CameraInfo cameraInfo = 4;
    public static final int CAMERAINFO_FIELD_NUMBER = 4;
    private de.naoth.rc.messages.FrameworkRepresentations.CameraInfo cameraInfo_;
    public boolean hasCameraInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public de.naoth.rc.messages.FrameworkRepresentations.CameraInfo getCameraInfo() {
      return cameraInfo_;
    }
    public de.naoth.rc.messages.FrameworkRepresentations.CameraInfoOrBuilder getCameraInfoOrBuilder() {
      return cameraInfo_;
    }
    
    // optional .naothmessages.Image.Format format = 5 [default = YUV];
    public static final int FORMAT_FIELD_NUMBER = 5;
    private de.naoth.rc.messages.FrameworkRepresentations.Image.Format format_;
    public boolean hasFormat() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public de.naoth.rc.messages.FrameworkRepresentations.Image.Format getFormat() {
      return format_;
    }
    
    // optional uint32 timestamp = 6;
    public static final int TIMESTAMP_FIELD_NUMBER = 6;
    private int timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getTimestamp() {
      return timestamp_;
    }
    
    private void initFields() {
      data_ = com.google.protobuf.ByteString.EMPTY;
      width_ = 320;
      height_ = 240;
      cameraInfo_ = de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance();
      format_ = de.naoth.rc.messages.FrameworkRepresentations.Image.Format.YUV;
      timestamp_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCameraInfo()) {
        if (!getCameraInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, cameraInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, format_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, width_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, height_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cameraInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, format_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.naoth.rc.messages.FrameworkRepresentations.Image prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.naoth.rc.messages.FrameworkRepresentations.ImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_Image_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_Image_fieldAccessorTable;
      }
      
      // Construct using de.naoth.rc.messages.FrameworkRepresentations.Image.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCameraInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 320;
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 240;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cameraInfoBuilder_ == null) {
          cameraInfo_ = de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance();
        } else {
          cameraInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        format_ = de.naoth.rc.messages.FrameworkRepresentations.Image.Format.YUV;
        bitField0_ = (bitField0_ & ~0x00000010);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.Image.getDescriptor();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.Image getDefaultInstanceForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.Image.getDefaultInstance();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.Image build() {
        de.naoth.rc.messages.FrameworkRepresentations.Image result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.naoth.rc.messages.FrameworkRepresentations.Image buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.naoth.rc.messages.FrameworkRepresentations.Image result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.Image buildPartial() {
        de.naoth.rc.messages.FrameworkRepresentations.Image result = new de.naoth.rc.messages.FrameworkRepresentations.Image(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (cameraInfoBuilder_ == null) {
          result.cameraInfo_ = cameraInfo_;
        } else {
          result.cameraInfo_ = cameraInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.format_ = format_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.messages.FrameworkRepresentations.Image) {
          return mergeFrom((de.naoth.rc.messages.FrameworkRepresentations.Image)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.naoth.rc.messages.FrameworkRepresentations.Image other) {
        if (other == de.naoth.rc.messages.FrameworkRepresentations.Image.getDefaultInstance()) return this;
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasCameraInfo()) {
          mergeCameraInfo(other.getCameraInfo());
        }
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasData()) {
          
          return false;
        }
        if (hasCameraInfo()) {
          if (!getCameraInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              data_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              width_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              height_ = input.readInt32();
              break;
            }
            case 34: {
              de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.Builder subBuilder = de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.newBuilder();
              if (hasCameraInfo()) {
                subBuilder.mergeFrom(getCameraInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCameraInfo(subBuilder.buildPartial());
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              de.naoth.rc.messages.FrameworkRepresentations.Image.Format value = de.naoth.rc.messages.FrameworkRepresentations.Image.Format.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                format_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              timestamp_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required bytes data = 1;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        data_ = value;
        onChanged();
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      
      // optional int32 width = 2 [default = 320];
      private int width_ = 320;
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getWidth() {
        return width_;
      }
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000002;
        width_ = value;
        onChanged();
        return this;
      }
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 320;
        onChanged();
        return this;
      }
      
      // optional int32 height = 3 [default = 240];
      private int height_ = 240;
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getHeight() {
        return height_;
      }
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000004;
        height_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 240;
        onChanged();
        return this;
      }
      
      // optional .naothmessages.CameraInfo cameraInfo = 4;
      private de.naoth.rc.messages.FrameworkRepresentations.CameraInfo cameraInfo_ = de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.naoth.rc.messages.FrameworkRepresentations.CameraInfo, de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.Builder, de.naoth.rc.messages.FrameworkRepresentations.CameraInfoOrBuilder> cameraInfoBuilder_;
      public boolean hasCameraInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public de.naoth.rc.messages.FrameworkRepresentations.CameraInfo getCameraInfo() {
        if (cameraInfoBuilder_ == null) {
          return cameraInfo_;
        } else {
          return cameraInfoBuilder_.getMessage();
        }
      }
      public Builder setCameraInfo(de.naoth.rc.messages.FrameworkRepresentations.CameraInfo value) {
        if (cameraInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cameraInfo_ = value;
          onChanged();
        } else {
          cameraInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setCameraInfo(
          de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.Builder builderForValue) {
        if (cameraInfoBuilder_ == null) {
          cameraInfo_ = builderForValue.build();
          onChanged();
        } else {
          cameraInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeCameraInfo(de.naoth.rc.messages.FrameworkRepresentations.CameraInfo value) {
        if (cameraInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              cameraInfo_ != de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance()) {
            cameraInfo_ =
              de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.newBuilder(cameraInfo_).mergeFrom(value).buildPartial();
          } else {
            cameraInfo_ = value;
          }
          onChanged();
        } else {
          cameraInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearCameraInfo() {
        if (cameraInfoBuilder_ == null) {
          cameraInfo_ = de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance();
          onChanged();
        } else {
          cameraInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.Builder getCameraInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCameraInfoFieldBuilder().getBuilder();
      }
      public de.naoth.rc.messages.FrameworkRepresentations.CameraInfoOrBuilder getCameraInfoOrBuilder() {
        if (cameraInfoBuilder_ != null) {
          return cameraInfoBuilder_.getMessageOrBuilder();
        } else {
          return cameraInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          de.naoth.rc.messages.FrameworkRepresentations.CameraInfo, de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.Builder, de.naoth.rc.messages.FrameworkRepresentations.CameraInfoOrBuilder> 
          getCameraInfoFieldBuilder() {
        if (cameraInfoBuilder_ == null) {
          cameraInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.naoth.rc.messages.FrameworkRepresentations.CameraInfo, de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.Builder, de.naoth.rc.messages.FrameworkRepresentations.CameraInfoOrBuilder>(
                  cameraInfo_,
                  getParentForChildren(),
                  isClean());
          cameraInfo_ = null;
        }
        return cameraInfoBuilder_;
      }
      
      // optional .naothmessages.Image.Format format = 5 [default = YUV];
      private de.naoth.rc.messages.FrameworkRepresentations.Image.Format format_ = de.naoth.rc.messages.FrameworkRepresentations.Image.Format.YUV;
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public de.naoth.rc.messages.FrameworkRepresentations.Image.Format getFormat() {
        return format_;
      }
      public Builder setFormat(de.naoth.rc.messages.FrameworkRepresentations.Image.Format value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        format_ = value;
        onChanged();
        return this;
      }
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000010);
        format_ = de.naoth.rc.messages.FrameworkRepresentations.Image.Format.YUV;
        onChanged();
        return this;
      }
      
      // optional uint32 timestamp = 6;
      private int timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000020;
        timestamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        timestamp_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.Image)
    }
    
    static {
      defaultInstance = new Image(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.Image)
  }
  
  public interface CameraInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 resolutionWidth = 1;
    boolean hasResolutionWidth();
    int getResolutionWidth();
    
    // required int32 resolutionHeight = 2;
    boolean hasResolutionHeight();
    int getResolutionHeight();
    
    // optional .naothmessages.CameraID cameraID = 4 [default = bottom];
    boolean hasCameraID();
    de.naoth.rc.messages.CommonTypes.CameraID getCameraID();
    
    // optional double focalLength = 5 [deprecated = true];
    @java.lang.Deprecated boolean hasFocalLength();
    @java.lang.Deprecated double getFocalLength();
    
    // optional double openingAngleWidth = 6 [deprecated = true];
    @java.lang.Deprecated boolean hasOpeningAngleWidth();
    @java.lang.Deprecated double getOpeningAngleWidth();
    
    // optional double openingAngleHeight = 7 [deprecated = true];
    @java.lang.Deprecated boolean hasOpeningAngleHeight();
    @java.lang.Deprecated double getOpeningAngleHeight();
    
    // optional double opticalCenterX = 8 [deprecated = true];
    @java.lang.Deprecated boolean hasOpticalCenterX();
    @java.lang.Deprecated double getOpticalCenterX();
    
    // optional double opticalCenterY = 9 [deprecated = true];
    @java.lang.Deprecated boolean hasOpticalCenterY();
    @java.lang.Deprecated double getOpticalCenterY();
    
    // optional int64 size = 10 [deprecated = true];
    @java.lang.Deprecated boolean hasSize();
    @java.lang.Deprecated long getSize();
    
    // optional int64 memorysize = 11 [deprecated = true];
    @java.lang.Deprecated boolean hasMemorysize();
    @java.lang.Deprecated long getMemorysize();
    
    // optional double cameraRollOffset = 12 [deprecated = true];
    @java.lang.Deprecated boolean hasCameraRollOffset();
    @java.lang.Deprecated double getCameraRollOffset();
    
    // optional double cameraTiltOffset = 13 [deprecated = true];
    @java.lang.Deprecated boolean hasCameraTiltOffset();
    @java.lang.Deprecated double getCameraTiltOffset();
    
    // repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];
    @java.lang.Deprecated java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> 
        getCorrectionOffsetList();
    @java.lang.Deprecated de.naoth.rc.messages.CommonTypes.DoubleVector2 getCorrectionOffset(int index);
    @java.lang.Deprecated int getCorrectionOffsetCount();
    @java.lang.Deprecated java.util.List<? extends de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> 
        getCorrectionOffsetOrBuilderList();
    @java.lang.Deprecated de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder getCorrectionOffsetOrBuilder(
        int index);
    
    // repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];
    @java.lang.Deprecated java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> 
        getHeadJointOffsetList();
    @java.lang.Deprecated de.naoth.rc.messages.CommonTypes.DoubleVector2 getHeadJointOffset(int index);
    @java.lang.Deprecated int getHeadJointOffsetCount();
    @java.lang.Deprecated java.util.List<? extends de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> 
        getHeadJointOffsetOrBuilderList();
    @java.lang.Deprecated de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder getHeadJointOffsetOrBuilder(
        int index);
    
    // repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];
    @java.lang.Deprecated java.util.List<de.naoth.rc.messages.CommonTypes.Pose3D> 
        getTransformationList();
    @java.lang.Deprecated de.naoth.rc.messages.CommonTypes.Pose3D getTransformation(int index);
    @java.lang.Deprecated int getTransformationCount();
    @java.lang.Deprecated java.util.List<? extends de.naoth.rc.messages.CommonTypes.Pose3DOrBuilder> 
        getTransformationOrBuilderList();
    @java.lang.Deprecated de.naoth.rc.messages.CommonTypes.Pose3DOrBuilder getTransformationOrBuilder(
        int index);
    
    // optional double openingAngleDiagonal = 15;
    boolean hasOpeningAngleDiagonal();
    double getOpeningAngleDiagonal();
    
    // optional double pixelSize = 16;
    boolean hasPixelSize();
    double getPixelSize();
    
    // optional double focus = 17;
    boolean hasFocus();
    double getFocus();
  }
  public static final class CameraInfo extends
      com.google.protobuf.GeneratedMessage
      implements CameraInfoOrBuilder {
    // Use CameraInfo.newBuilder() to construct.
    private CameraInfo(Builder builder) {
      super(builder);
    }
    private CameraInfo(boolean noInit) {}
    
    private static final CameraInfo defaultInstance;
    public static CameraInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_CameraInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_CameraInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 resolutionWidth = 1;
    public static final int RESOLUTIONWIDTH_FIELD_NUMBER = 1;
    private int resolutionWidth_;
    public boolean hasResolutionWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getResolutionWidth() {
      return resolutionWidth_;
    }
    
    // required int32 resolutionHeight = 2;
    public static final int RESOLUTIONHEIGHT_FIELD_NUMBER = 2;
    private int resolutionHeight_;
    public boolean hasResolutionHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getResolutionHeight() {
      return resolutionHeight_;
    }
    
    // optional .naothmessages.CameraID cameraID = 4 [default = bottom];
    public static final int CAMERAID_FIELD_NUMBER = 4;
    private de.naoth.rc.messages.CommonTypes.CameraID cameraID_;
    public boolean hasCameraID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public de.naoth.rc.messages.CommonTypes.CameraID getCameraID() {
      return cameraID_;
    }
    
    // optional double focalLength = 5 [deprecated = true];
    public static final int FOCALLENGTH_FIELD_NUMBER = 5;
    private double focalLength_;
    @java.lang.Deprecated public boolean hasFocalLength() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    @java.lang.Deprecated public double getFocalLength() {
      return focalLength_;
    }
    
    // optional double openingAngleWidth = 6 [deprecated = true];
    public static final int OPENINGANGLEWIDTH_FIELD_NUMBER = 6;
    private double openingAngleWidth_;
    @java.lang.Deprecated public boolean hasOpeningAngleWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    @java.lang.Deprecated public double getOpeningAngleWidth() {
      return openingAngleWidth_;
    }
    
    // optional double openingAngleHeight = 7 [deprecated = true];
    public static final int OPENINGANGLEHEIGHT_FIELD_NUMBER = 7;
    private double openingAngleHeight_;
    @java.lang.Deprecated public boolean hasOpeningAngleHeight() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    @java.lang.Deprecated public double getOpeningAngleHeight() {
      return openingAngleHeight_;
    }
    
    // optional double opticalCenterX = 8 [deprecated = true];
    public static final int OPTICALCENTERX_FIELD_NUMBER = 8;
    private double opticalCenterX_;
    @java.lang.Deprecated public boolean hasOpticalCenterX() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    @java.lang.Deprecated public double getOpticalCenterX() {
      return opticalCenterX_;
    }
    
    // optional double opticalCenterY = 9 [deprecated = true];
    public static final int OPTICALCENTERY_FIELD_NUMBER = 9;
    private double opticalCenterY_;
    @java.lang.Deprecated public boolean hasOpticalCenterY() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    @java.lang.Deprecated public double getOpticalCenterY() {
      return opticalCenterY_;
    }
    
    // optional int64 size = 10 [deprecated = true];
    public static final int SIZE_FIELD_NUMBER = 10;
    private long size_;
    @java.lang.Deprecated public boolean hasSize() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    @java.lang.Deprecated public long getSize() {
      return size_;
    }
    
    // optional int64 memorysize = 11 [deprecated = true];
    public static final int MEMORYSIZE_FIELD_NUMBER = 11;
    private long memorysize_;
    @java.lang.Deprecated public boolean hasMemorysize() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    @java.lang.Deprecated public long getMemorysize() {
      return memorysize_;
    }
    
    // optional double cameraRollOffset = 12 [deprecated = true];
    public static final int CAMERAROLLOFFSET_FIELD_NUMBER = 12;
    private double cameraRollOffset_;
    @java.lang.Deprecated public boolean hasCameraRollOffset() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    @java.lang.Deprecated public double getCameraRollOffset() {
      return cameraRollOffset_;
    }
    
    // optional double cameraTiltOffset = 13 [deprecated = true];
    public static final int CAMERATILTOFFSET_FIELD_NUMBER = 13;
    private double cameraTiltOffset_;
    @java.lang.Deprecated public boolean hasCameraTiltOffset() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    @java.lang.Deprecated public double getCameraTiltOffset() {
      return cameraTiltOffset_;
    }
    
    // repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];
    public static final int CORRECTIONOFFSET_FIELD_NUMBER = 18;
    private java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> correctionOffset_;
    @java.lang.Deprecated public java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> getCorrectionOffsetList() {
      return correctionOffset_;
    }
    @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> 
        getCorrectionOffsetOrBuilderList() {
      return correctionOffset_;
    }
    @java.lang.Deprecated public int getCorrectionOffsetCount() {
      return correctionOffset_.size();
    }
    @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2 getCorrectionOffset(int index) {
      return correctionOffset_.get(index);
    }
    @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder getCorrectionOffsetOrBuilder(
        int index) {
      return correctionOffset_.get(index);
    }
    
    // repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];
    public static final int HEADJOINTOFFSET_FIELD_NUMBER = 19;
    private java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> headJointOffset_;
    @java.lang.Deprecated public java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> getHeadJointOffsetList() {
      return headJointOffset_;
    }
    @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> 
        getHeadJointOffsetOrBuilderList() {
      return headJointOffset_;
    }
    @java.lang.Deprecated public int getHeadJointOffsetCount() {
      return headJointOffset_.size();
    }
    @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2 getHeadJointOffset(int index) {
      return headJointOffset_.get(index);
    }
    @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder getHeadJointOffsetOrBuilder(
        int index) {
      return headJointOffset_.get(index);
    }
    
    // repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];
    public static final int TRANSFORMATION_FIELD_NUMBER = 14;
    private java.util.List<de.naoth.rc.messages.CommonTypes.Pose3D> transformation_;
    @java.lang.Deprecated public java.util.List<de.naoth.rc.messages.CommonTypes.Pose3D> getTransformationList() {
      return transformation_;
    }
    @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.messages.CommonTypes.Pose3DOrBuilder> 
        getTransformationOrBuilderList() {
      return transformation_;
    }
    @java.lang.Deprecated public int getTransformationCount() {
      return transformation_.size();
    }
    @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.Pose3D getTransformation(int index) {
      return transformation_.get(index);
    }
    @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.Pose3DOrBuilder getTransformationOrBuilder(
        int index) {
      return transformation_.get(index);
    }
    
    // optional double openingAngleDiagonal = 15;
    public static final int OPENINGANGLEDIAGONAL_FIELD_NUMBER = 15;
    private double openingAngleDiagonal_;
    public boolean hasOpeningAngleDiagonal() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public double getOpeningAngleDiagonal() {
      return openingAngleDiagonal_;
    }
    
    // optional double pixelSize = 16;
    public static final int PIXELSIZE_FIELD_NUMBER = 16;
    private double pixelSize_;
    public boolean hasPixelSize() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public double getPixelSize() {
      return pixelSize_;
    }
    
    // optional double focus = 17;
    public static final int FOCUS_FIELD_NUMBER = 17;
    private double focus_;
    public boolean hasFocus() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public double getFocus() {
      return focus_;
    }
    
    private void initFields() {
      resolutionWidth_ = 0;
      resolutionHeight_ = 0;
      cameraID_ = de.naoth.rc.messages.CommonTypes.CameraID.bottom;
      focalLength_ = 0D;
      openingAngleWidth_ = 0D;
      openingAngleHeight_ = 0D;
      opticalCenterX_ = 0D;
      opticalCenterY_ = 0D;
      size_ = 0L;
      memorysize_ = 0L;
      cameraRollOffset_ = 0D;
      cameraTiltOffset_ = 0D;
      correctionOffset_ = java.util.Collections.emptyList();
      headJointOffset_ = java.util.Collections.emptyList();
      transformation_ = java.util.Collections.emptyList();
      openingAngleDiagonal_ = 0D;
      pixelSize_ = 0D;
      focus_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasResolutionWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResolutionHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCorrectionOffsetCount(); i++) {
        if (!getCorrectionOffset(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getHeadJointOffsetCount(); i++) {
        if (!getHeadJointOffset(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTransformationCount(); i++) {
        if (!getTransformation(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, resolutionWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, resolutionHeight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(4, cameraID_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(5, focalLength_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(6, openingAngleWidth_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(7, openingAngleHeight_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(8, opticalCenterX_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(9, opticalCenterY_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(10, size_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(11, memorysize_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(12, cameraRollOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(13, cameraTiltOffset_);
      }
      for (int i = 0; i < transformation_.size(); i++) {
        output.writeMessage(14, transformation_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(15, openingAngleDiagonal_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(16, pixelSize_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(17, focus_);
      }
      for (int i = 0; i < correctionOffset_.size(); i++) {
        output.writeMessage(18, correctionOffset_.get(i));
      }
      for (int i = 0; i < headJointOffset_.size(); i++) {
        output.writeMessage(19, headJointOffset_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, resolutionWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, resolutionHeight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, cameraID_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, focalLength_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, openingAngleWidth_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, openingAngleHeight_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, opticalCenterX_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, opticalCenterY_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, size_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, memorysize_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, cameraRollOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, cameraTiltOffset_);
      }
      for (int i = 0; i < transformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, transformation_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, openingAngleDiagonal_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, pixelSize_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, focus_);
      }
      for (int i = 0; i < correctionOffset_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, correctionOffset_.get(i));
      }
      for (int i = 0; i < headJointOffset_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, headJointOffset_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.CameraInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.naoth.rc.messages.FrameworkRepresentations.CameraInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.naoth.rc.messages.FrameworkRepresentations.CameraInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_CameraInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_CameraInfo_fieldAccessorTable;
      }
      
      // Construct using de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCorrectionOffsetFieldBuilder();
          getHeadJointOffsetFieldBuilder();
          getTransformationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        resolutionWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        resolutionHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cameraID_ = de.naoth.rc.messages.CommonTypes.CameraID.bottom;
        bitField0_ = (bitField0_ & ~0x00000004);
        focalLength_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        openingAngleWidth_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        openingAngleHeight_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        opticalCenterX_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        opticalCenterY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        memorysize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        cameraRollOffset_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        cameraTiltOffset_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (correctionOffsetBuilder_ == null) {
          correctionOffset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          correctionOffsetBuilder_.clear();
        }
        if (headJointOffsetBuilder_ == null) {
          headJointOffset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          headJointOffsetBuilder_.clear();
        }
        if (transformationBuilder_ == null) {
          transformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          transformationBuilder_.clear();
        }
        openingAngleDiagonal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00008000);
        pixelSize_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        focus_ = 0D;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.getDescriptor();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.CameraInfo getDefaultInstanceForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.CameraInfo build() {
        de.naoth.rc.messages.FrameworkRepresentations.CameraInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.naoth.rc.messages.FrameworkRepresentations.CameraInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.naoth.rc.messages.FrameworkRepresentations.CameraInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.CameraInfo buildPartial() {
        de.naoth.rc.messages.FrameworkRepresentations.CameraInfo result = new de.naoth.rc.messages.FrameworkRepresentations.CameraInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resolutionWidth_ = resolutionWidth_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.resolutionHeight_ = resolutionHeight_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cameraID_ = cameraID_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.focalLength_ = focalLength_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.openingAngleWidth_ = openingAngleWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.openingAngleHeight_ = openingAngleHeight_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.opticalCenterX_ = opticalCenterX_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.opticalCenterY_ = opticalCenterY_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.memorysize_ = memorysize_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.cameraRollOffset_ = cameraRollOffset_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.cameraTiltOffset_ = cameraTiltOffset_;
        if (correctionOffsetBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            correctionOffset_ = java.util.Collections.unmodifiableList(correctionOffset_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.correctionOffset_ = correctionOffset_;
        } else {
          result.correctionOffset_ = correctionOffsetBuilder_.build();
        }
        if (headJointOffsetBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            headJointOffset_ = java.util.Collections.unmodifiableList(headJointOffset_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.headJointOffset_ = headJointOffset_;
        } else {
          result.headJointOffset_ = headJointOffsetBuilder_.build();
        }
        if (transformationBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            transformation_ = java.util.Collections.unmodifiableList(transformation_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.transformation_ = transformation_;
        } else {
          result.transformation_ = transformationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.openingAngleDiagonal_ = openingAngleDiagonal_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.pixelSize_ = pixelSize_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.focus_ = focus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.messages.FrameworkRepresentations.CameraInfo) {
          return mergeFrom((de.naoth.rc.messages.FrameworkRepresentations.CameraInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.naoth.rc.messages.FrameworkRepresentations.CameraInfo other) {
        if (other == de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.getDefaultInstance()) return this;
        if (other.hasResolutionWidth()) {
          setResolutionWidth(other.getResolutionWidth());
        }
        if (other.hasResolutionHeight()) {
          setResolutionHeight(other.getResolutionHeight());
        }
        if (other.hasCameraID()) {
          setCameraID(other.getCameraID());
        }
        if (other.hasFocalLength()) {
          setFocalLength(other.getFocalLength());
        }
        if (other.hasOpeningAngleWidth()) {
          setOpeningAngleWidth(other.getOpeningAngleWidth());
        }
        if (other.hasOpeningAngleHeight()) {
          setOpeningAngleHeight(other.getOpeningAngleHeight());
        }
        if (other.hasOpticalCenterX()) {
          setOpticalCenterX(other.getOpticalCenterX());
        }
        if (other.hasOpticalCenterY()) {
          setOpticalCenterY(other.getOpticalCenterY());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasMemorysize()) {
          setMemorysize(other.getMemorysize());
        }
        if (other.hasCameraRollOffset()) {
          setCameraRollOffset(other.getCameraRollOffset());
        }
        if (other.hasCameraTiltOffset()) {
          setCameraTiltOffset(other.getCameraTiltOffset());
        }
        if (correctionOffsetBuilder_ == null) {
          if (!other.correctionOffset_.isEmpty()) {
            if (correctionOffset_.isEmpty()) {
              correctionOffset_ = other.correctionOffset_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureCorrectionOffsetIsMutable();
              correctionOffset_.addAll(other.correctionOffset_);
            }
            onChanged();
          }
        } else {
          if (!other.correctionOffset_.isEmpty()) {
            if (correctionOffsetBuilder_.isEmpty()) {
              correctionOffsetBuilder_.dispose();
              correctionOffsetBuilder_ = null;
              correctionOffset_ = other.correctionOffset_;
              bitField0_ = (bitField0_ & ~0x00001000);
              correctionOffsetBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCorrectionOffsetFieldBuilder() : null;
            } else {
              correctionOffsetBuilder_.addAllMessages(other.correctionOffset_);
            }
          }
        }
        if (headJointOffsetBuilder_ == null) {
          if (!other.headJointOffset_.isEmpty()) {
            if (headJointOffset_.isEmpty()) {
              headJointOffset_ = other.headJointOffset_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureHeadJointOffsetIsMutable();
              headJointOffset_.addAll(other.headJointOffset_);
            }
            onChanged();
          }
        } else {
          if (!other.headJointOffset_.isEmpty()) {
            if (headJointOffsetBuilder_.isEmpty()) {
              headJointOffsetBuilder_.dispose();
              headJointOffsetBuilder_ = null;
              headJointOffset_ = other.headJointOffset_;
              bitField0_ = (bitField0_ & ~0x00002000);
              headJointOffsetBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHeadJointOffsetFieldBuilder() : null;
            } else {
              headJointOffsetBuilder_.addAllMessages(other.headJointOffset_);
            }
          }
        }
        if (transformationBuilder_ == null) {
          if (!other.transformation_.isEmpty()) {
            if (transformation_.isEmpty()) {
              transformation_ = other.transformation_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureTransformationIsMutable();
              transformation_.addAll(other.transformation_);
            }
            onChanged();
          }
        } else {
          if (!other.transformation_.isEmpty()) {
            if (transformationBuilder_.isEmpty()) {
              transformationBuilder_.dispose();
              transformationBuilder_ = null;
              transformation_ = other.transformation_;
              bitField0_ = (bitField0_ & ~0x00004000);
              transformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTransformationFieldBuilder() : null;
            } else {
              transformationBuilder_.addAllMessages(other.transformation_);
            }
          }
        }
        if (other.hasOpeningAngleDiagonal()) {
          setOpeningAngleDiagonal(other.getOpeningAngleDiagonal());
        }
        if (other.hasPixelSize()) {
          setPixelSize(other.getPixelSize());
        }
        if (other.hasFocus()) {
          setFocus(other.getFocus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasResolutionWidth()) {
          
          return false;
        }
        if (!hasResolutionHeight()) {
          
          return false;
        }
        for (int i = 0; i < getCorrectionOffsetCount(); i++) {
          if (!getCorrectionOffset(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getHeadJointOffsetCount(); i++) {
          if (!getHeadJointOffset(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTransformationCount(); i++) {
          if (!getTransformation(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              resolutionWidth_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              resolutionHeight_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              de.naoth.rc.messages.CommonTypes.CameraID value = de.naoth.rc.messages.CommonTypes.CameraID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                cameraID_ = value;
              }
              break;
            }
            case 41: {
              bitField0_ |= 0x00000008;
              focalLength_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000010;
              openingAngleWidth_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000020;
              openingAngleHeight_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000040;
              opticalCenterX_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000080;
              opticalCenterY_ = input.readDouble();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              size_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              memorysize_ = input.readInt64();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000400;
              cameraRollOffset_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00000800;
              cameraTiltOffset_ = input.readDouble();
              break;
            }
            case 114: {
              de.naoth.rc.messages.CommonTypes.Pose3D.Builder subBuilder = de.naoth.rc.messages.CommonTypes.Pose3D.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTransformation(subBuilder.buildPartial());
              break;
            }
            case 121: {
              bitField0_ |= 0x00008000;
              openingAngleDiagonal_ = input.readDouble();
              break;
            }
            case 129: {
              bitField0_ |= 0x00010000;
              pixelSize_ = input.readDouble();
              break;
            }
            case 137: {
              bitField0_ |= 0x00020000;
              focus_ = input.readDouble();
              break;
            }
            case 146: {
              de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder subBuilder = de.naoth.rc.messages.CommonTypes.DoubleVector2.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCorrectionOffset(subBuilder.buildPartial());
              break;
            }
            case 154: {
              de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder subBuilder = de.naoth.rc.messages.CommonTypes.DoubleVector2.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHeadJointOffset(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 resolutionWidth = 1;
      private int resolutionWidth_ ;
      public boolean hasResolutionWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getResolutionWidth() {
        return resolutionWidth_;
      }
      public Builder setResolutionWidth(int value) {
        bitField0_ |= 0x00000001;
        resolutionWidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearResolutionWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resolutionWidth_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 resolutionHeight = 2;
      private int resolutionHeight_ ;
      public boolean hasResolutionHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getResolutionHeight() {
        return resolutionHeight_;
      }
      public Builder setResolutionHeight(int value) {
        bitField0_ |= 0x00000002;
        resolutionHeight_ = value;
        onChanged();
        return this;
      }
      public Builder clearResolutionHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        resolutionHeight_ = 0;
        onChanged();
        return this;
      }
      
      // optional .naothmessages.CameraID cameraID = 4 [default = bottom];
      private de.naoth.rc.messages.CommonTypes.CameraID cameraID_ = de.naoth.rc.messages.CommonTypes.CameraID.bottom;
      public boolean hasCameraID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public de.naoth.rc.messages.CommonTypes.CameraID getCameraID() {
        return cameraID_;
      }
      public Builder setCameraID(de.naoth.rc.messages.CommonTypes.CameraID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        cameraID_ = value;
        onChanged();
        return this;
      }
      public Builder clearCameraID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cameraID_ = de.naoth.rc.messages.CommonTypes.CameraID.bottom;
        onChanged();
        return this;
      }
      
      // optional double focalLength = 5 [deprecated = true];
      private double focalLength_ ;
      @java.lang.Deprecated public boolean hasFocalLength() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      @java.lang.Deprecated public double getFocalLength() {
        return focalLength_;
      }
      @java.lang.Deprecated public Builder setFocalLength(double value) {
        bitField0_ |= 0x00000008;
        focalLength_ = value;
        onChanged();
        return this;
      }
      @java.lang.Deprecated public Builder clearFocalLength() {
        bitField0_ = (bitField0_ & ~0x00000008);
        focalLength_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double openingAngleWidth = 6 [deprecated = true];
      private double openingAngleWidth_ ;
      @java.lang.Deprecated public boolean hasOpeningAngleWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      @java.lang.Deprecated public double getOpeningAngleWidth() {
        return openingAngleWidth_;
      }
      @java.lang.Deprecated public Builder setOpeningAngleWidth(double value) {
        bitField0_ |= 0x00000010;
        openingAngleWidth_ = value;
        onChanged();
        return this;
      }
      @java.lang.Deprecated public Builder clearOpeningAngleWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        openingAngleWidth_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double openingAngleHeight = 7 [deprecated = true];
      private double openingAngleHeight_ ;
      @java.lang.Deprecated public boolean hasOpeningAngleHeight() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      @java.lang.Deprecated public double getOpeningAngleHeight() {
        return openingAngleHeight_;
      }
      @java.lang.Deprecated public Builder setOpeningAngleHeight(double value) {
        bitField0_ |= 0x00000020;
        openingAngleHeight_ = value;
        onChanged();
        return this;
      }
      @java.lang.Deprecated public Builder clearOpeningAngleHeight() {
        bitField0_ = (bitField0_ & ~0x00000020);
        openingAngleHeight_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double opticalCenterX = 8 [deprecated = true];
      private double opticalCenterX_ ;
      @java.lang.Deprecated public boolean hasOpticalCenterX() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      @java.lang.Deprecated public double getOpticalCenterX() {
        return opticalCenterX_;
      }
      @java.lang.Deprecated public Builder setOpticalCenterX(double value) {
        bitField0_ |= 0x00000040;
        opticalCenterX_ = value;
        onChanged();
        return this;
      }
      @java.lang.Deprecated public Builder clearOpticalCenterX() {
        bitField0_ = (bitField0_ & ~0x00000040);
        opticalCenterX_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double opticalCenterY = 9 [deprecated = true];
      private double opticalCenterY_ ;
      @java.lang.Deprecated public boolean hasOpticalCenterY() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      @java.lang.Deprecated public double getOpticalCenterY() {
        return opticalCenterY_;
      }
      @java.lang.Deprecated public Builder setOpticalCenterY(double value) {
        bitField0_ |= 0x00000080;
        opticalCenterY_ = value;
        onChanged();
        return this;
      }
      @java.lang.Deprecated public Builder clearOpticalCenterY() {
        bitField0_ = (bitField0_ & ~0x00000080);
        opticalCenterY_ = 0D;
        onChanged();
        return this;
      }
      
      // optional int64 size = 10 [deprecated = true];
      private long size_ ;
      @java.lang.Deprecated public boolean hasSize() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      @java.lang.Deprecated public long getSize() {
        return size_;
      }
      @java.lang.Deprecated public Builder setSize(long value) {
        bitField0_ |= 0x00000100;
        size_ = value;
        onChanged();
        return this;
      }
      @java.lang.Deprecated public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000100);
        size_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 memorysize = 11 [deprecated = true];
      private long memorysize_ ;
      @java.lang.Deprecated public boolean hasMemorysize() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      @java.lang.Deprecated public long getMemorysize() {
        return memorysize_;
      }
      @java.lang.Deprecated public Builder setMemorysize(long value) {
        bitField0_ |= 0x00000200;
        memorysize_ = value;
        onChanged();
        return this;
      }
      @java.lang.Deprecated public Builder clearMemorysize() {
        bitField0_ = (bitField0_ & ~0x00000200);
        memorysize_ = 0L;
        onChanged();
        return this;
      }
      
      // optional double cameraRollOffset = 12 [deprecated = true];
      private double cameraRollOffset_ ;
      @java.lang.Deprecated public boolean hasCameraRollOffset() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      @java.lang.Deprecated public double getCameraRollOffset() {
        return cameraRollOffset_;
      }
      @java.lang.Deprecated public Builder setCameraRollOffset(double value) {
        bitField0_ |= 0x00000400;
        cameraRollOffset_ = value;
        onChanged();
        return this;
      }
      @java.lang.Deprecated public Builder clearCameraRollOffset() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cameraRollOffset_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double cameraTiltOffset = 13 [deprecated = true];
      private double cameraTiltOffset_ ;
      @java.lang.Deprecated public boolean hasCameraTiltOffset() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      @java.lang.Deprecated public double getCameraTiltOffset() {
        return cameraTiltOffset_;
      }
      @java.lang.Deprecated public Builder setCameraTiltOffset(double value) {
        bitField0_ |= 0x00000800;
        cameraTiltOffset_ = value;
        onChanged();
        return this;
      }
      @java.lang.Deprecated public Builder clearCameraTiltOffset() {
        bitField0_ = (bitField0_ & ~0x00000800);
        cameraTiltOffset_ = 0D;
        onChanged();
        return this;
      }
      
      // repeated .naothmessages.DoubleVector2 correctionOffset = 18 [deprecated = true];
      private java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> correctionOffset_ =
        java.util.Collections.emptyList();
      private void ensureCorrectionOffsetIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          correctionOffset_ = new java.util.ArrayList<de.naoth.rc.messages.CommonTypes.DoubleVector2>(correctionOffset_);
          bitField0_ |= 0x00001000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          de.naoth.rc.messages.CommonTypes.DoubleVector2, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> correctionOffsetBuilder_;
      
      @java.lang.Deprecated public java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> getCorrectionOffsetList() {
        if (correctionOffsetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(correctionOffset_);
        } else {
          return correctionOffsetBuilder_.getMessageList();
        }
      }
      @java.lang.Deprecated public int getCorrectionOffsetCount() {
        if (correctionOffsetBuilder_ == null) {
          return correctionOffset_.size();
        } else {
          return correctionOffsetBuilder_.getCount();
        }
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2 getCorrectionOffset(int index) {
        if (correctionOffsetBuilder_ == null) {
          return correctionOffset_.get(index);
        } else {
          return correctionOffsetBuilder_.getMessage(index);
        }
      }
      @java.lang.Deprecated public Builder setCorrectionOffset(
          int index, de.naoth.rc.messages.CommonTypes.DoubleVector2 value) {
        if (correctionOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.set(index, value);
          onChanged();
        } else {
          correctionOffsetBuilder_.setMessage(index, value);
        }
        return this;
      }
      @java.lang.Deprecated public Builder setCorrectionOffset(
          int index, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.set(index, builderForValue.build());
          onChanged();
        } else {
          correctionOffsetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      @java.lang.Deprecated public Builder addCorrectionOffset(de.naoth.rc.messages.CommonTypes.DoubleVector2 value) {
        if (correctionOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.add(value);
          onChanged();
        } else {
          correctionOffsetBuilder_.addMessage(value);
        }
        return this;
      }
      @java.lang.Deprecated public Builder addCorrectionOffset(
          int index, de.naoth.rc.messages.CommonTypes.DoubleVector2 value) {
        if (correctionOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.add(index, value);
          onChanged();
        } else {
          correctionOffsetBuilder_.addMessage(index, value);
        }
        return this;
      }
      @java.lang.Deprecated public Builder addCorrectionOffset(
          de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.add(builderForValue.build());
          onChanged();
        } else {
          correctionOffsetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      @java.lang.Deprecated public Builder addCorrectionOffset(
          int index, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.add(index, builderForValue.build());
          onChanged();
        } else {
          correctionOffsetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      @java.lang.Deprecated public Builder addAllCorrectionOffset(
          java.lang.Iterable<? extends de.naoth.rc.messages.CommonTypes.DoubleVector2> values) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          super.addAll(values, correctionOffset_);
          onChanged();
        } else {
          correctionOffsetBuilder_.addAllMessages(values);
        }
        return this;
      }
      @java.lang.Deprecated public Builder clearCorrectionOffset() {
        if (correctionOffsetBuilder_ == null) {
          correctionOffset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          correctionOffsetBuilder_.clear();
        }
        return this;
      }
      @java.lang.Deprecated public Builder removeCorrectionOffset(int index) {
        if (correctionOffsetBuilder_ == null) {
          ensureCorrectionOffsetIsMutable();
          correctionOffset_.remove(index);
          onChanged();
        } else {
          correctionOffsetBuilder_.remove(index);
        }
        return this;
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder getCorrectionOffsetBuilder(
          int index) {
        return getCorrectionOffsetFieldBuilder().getBuilder(index);
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder getCorrectionOffsetOrBuilder(
          int index) {
        if (correctionOffsetBuilder_ == null) {
          return correctionOffset_.get(index);  } else {
          return correctionOffsetBuilder_.getMessageOrBuilder(index);
        }
      }
      @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> 
           getCorrectionOffsetOrBuilderList() {
        if (correctionOffsetBuilder_ != null) {
          return correctionOffsetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(correctionOffset_);
        }
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder addCorrectionOffsetBuilder() {
        return getCorrectionOffsetFieldBuilder().addBuilder(
            de.naoth.rc.messages.CommonTypes.DoubleVector2.getDefaultInstance());
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder addCorrectionOffsetBuilder(
          int index) {
        return getCorrectionOffsetFieldBuilder().addBuilder(
            index, de.naoth.rc.messages.CommonTypes.DoubleVector2.getDefaultInstance());
      }
      @java.lang.Deprecated public java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder> 
           getCorrectionOffsetBuilderList() {
        return getCorrectionOffsetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.naoth.rc.messages.CommonTypes.DoubleVector2, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> 
          getCorrectionOffsetFieldBuilder() {
        if (correctionOffsetBuilder_ == null) {
          correctionOffsetBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.naoth.rc.messages.CommonTypes.DoubleVector2, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder>(
                  correctionOffset_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          correctionOffset_ = null;
        }
        return correctionOffsetBuilder_;
      }
      
      // repeated .naothmessages.DoubleVector2 headJointOffset = 19 [deprecated = true];
      private java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> headJointOffset_ =
        java.util.Collections.emptyList();
      private void ensureHeadJointOffsetIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          headJointOffset_ = new java.util.ArrayList<de.naoth.rc.messages.CommonTypes.DoubleVector2>(headJointOffset_);
          bitField0_ |= 0x00002000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          de.naoth.rc.messages.CommonTypes.DoubleVector2, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> headJointOffsetBuilder_;
      
      @java.lang.Deprecated public java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2> getHeadJointOffsetList() {
        if (headJointOffsetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(headJointOffset_);
        } else {
          return headJointOffsetBuilder_.getMessageList();
        }
      }
      @java.lang.Deprecated public int getHeadJointOffsetCount() {
        if (headJointOffsetBuilder_ == null) {
          return headJointOffset_.size();
        } else {
          return headJointOffsetBuilder_.getCount();
        }
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2 getHeadJointOffset(int index) {
        if (headJointOffsetBuilder_ == null) {
          return headJointOffset_.get(index);
        } else {
          return headJointOffsetBuilder_.getMessage(index);
        }
      }
      @java.lang.Deprecated public Builder setHeadJointOffset(
          int index, de.naoth.rc.messages.CommonTypes.DoubleVector2 value) {
        if (headJointOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.set(index, value);
          onChanged();
        } else {
          headJointOffsetBuilder_.setMessage(index, value);
        }
        return this;
      }
      @java.lang.Deprecated public Builder setHeadJointOffset(
          int index, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.set(index, builderForValue.build());
          onChanged();
        } else {
          headJointOffsetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      @java.lang.Deprecated public Builder addHeadJointOffset(de.naoth.rc.messages.CommonTypes.DoubleVector2 value) {
        if (headJointOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.add(value);
          onChanged();
        } else {
          headJointOffsetBuilder_.addMessage(value);
        }
        return this;
      }
      @java.lang.Deprecated public Builder addHeadJointOffset(
          int index, de.naoth.rc.messages.CommonTypes.DoubleVector2 value) {
        if (headJointOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.add(index, value);
          onChanged();
        } else {
          headJointOffsetBuilder_.addMessage(index, value);
        }
        return this;
      }
      @java.lang.Deprecated public Builder addHeadJointOffset(
          de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.add(builderForValue.build());
          onChanged();
        } else {
          headJointOffsetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      @java.lang.Deprecated public Builder addHeadJointOffset(
          int index, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder builderForValue) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.add(index, builderForValue.build());
          onChanged();
        } else {
          headJointOffsetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      @java.lang.Deprecated public Builder addAllHeadJointOffset(
          java.lang.Iterable<? extends de.naoth.rc.messages.CommonTypes.DoubleVector2> values) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          super.addAll(values, headJointOffset_);
          onChanged();
        } else {
          headJointOffsetBuilder_.addAllMessages(values);
        }
        return this;
      }
      @java.lang.Deprecated public Builder clearHeadJointOffset() {
        if (headJointOffsetBuilder_ == null) {
          headJointOffset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          headJointOffsetBuilder_.clear();
        }
        return this;
      }
      @java.lang.Deprecated public Builder removeHeadJointOffset(int index) {
        if (headJointOffsetBuilder_ == null) {
          ensureHeadJointOffsetIsMutable();
          headJointOffset_.remove(index);
          onChanged();
        } else {
          headJointOffsetBuilder_.remove(index);
        }
        return this;
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder getHeadJointOffsetBuilder(
          int index) {
        return getHeadJointOffsetFieldBuilder().getBuilder(index);
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder getHeadJointOffsetOrBuilder(
          int index) {
        if (headJointOffsetBuilder_ == null) {
          return headJointOffset_.get(index);  } else {
          return headJointOffsetBuilder_.getMessageOrBuilder(index);
        }
      }
      @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> 
           getHeadJointOffsetOrBuilderList() {
        if (headJointOffsetBuilder_ != null) {
          return headJointOffsetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(headJointOffset_);
        }
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder addHeadJointOffsetBuilder() {
        return getHeadJointOffsetFieldBuilder().addBuilder(
            de.naoth.rc.messages.CommonTypes.DoubleVector2.getDefaultInstance());
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder addHeadJointOffsetBuilder(
          int index) {
        return getHeadJointOffsetFieldBuilder().addBuilder(
            index, de.naoth.rc.messages.CommonTypes.DoubleVector2.getDefaultInstance());
      }
      @java.lang.Deprecated public java.util.List<de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder> 
           getHeadJointOffsetBuilderList() {
        return getHeadJointOffsetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.naoth.rc.messages.CommonTypes.DoubleVector2, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder> 
          getHeadJointOffsetFieldBuilder() {
        if (headJointOffsetBuilder_ == null) {
          headJointOffsetBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.naoth.rc.messages.CommonTypes.DoubleVector2, de.naoth.rc.messages.CommonTypes.DoubleVector2.Builder, de.naoth.rc.messages.CommonTypes.DoubleVector2OrBuilder>(
                  headJointOffset_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          headJointOffset_ = null;
        }
        return headJointOffsetBuilder_;
      }
      
      // repeated .naothmessages.Pose3D transformation = 14 [deprecated = true];
      private java.util.List<de.naoth.rc.messages.CommonTypes.Pose3D> transformation_ =
        java.util.Collections.emptyList();
      private void ensureTransformationIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          transformation_ = new java.util.ArrayList<de.naoth.rc.messages.CommonTypes.Pose3D>(transformation_);
          bitField0_ |= 0x00004000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          de.naoth.rc.messages.CommonTypes.Pose3D, de.naoth.rc.messages.CommonTypes.Pose3D.Builder, de.naoth.rc.messages.CommonTypes.Pose3DOrBuilder> transformationBuilder_;
      
      @java.lang.Deprecated public java.util.List<de.naoth.rc.messages.CommonTypes.Pose3D> getTransformationList() {
        if (transformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transformation_);
        } else {
          return transformationBuilder_.getMessageList();
        }
      }
      @java.lang.Deprecated public int getTransformationCount() {
        if (transformationBuilder_ == null) {
          return transformation_.size();
        } else {
          return transformationBuilder_.getCount();
        }
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.Pose3D getTransformation(int index) {
        if (transformationBuilder_ == null) {
          return transformation_.get(index);
        } else {
          return transformationBuilder_.getMessage(index);
        }
      }
      @java.lang.Deprecated public Builder setTransformation(
          int index, de.naoth.rc.messages.CommonTypes.Pose3D value) {
        if (transformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformationIsMutable();
          transformation_.set(index, value);
          onChanged();
        } else {
          transformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      @java.lang.Deprecated public Builder setTransformation(
          int index, de.naoth.rc.messages.CommonTypes.Pose3D.Builder builderForValue) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          transformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          transformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      @java.lang.Deprecated public Builder addTransformation(de.naoth.rc.messages.CommonTypes.Pose3D value) {
        if (transformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformationIsMutable();
          transformation_.add(value);
          onChanged();
        } else {
          transformationBuilder_.addMessage(value);
        }
        return this;
      }
      @java.lang.Deprecated public Builder addTransformation(
          int index, de.naoth.rc.messages.CommonTypes.Pose3D value) {
        if (transformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransformationIsMutable();
          transformation_.add(index, value);
          onChanged();
        } else {
          transformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      @java.lang.Deprecated public Builder addTransformation(
          de.naoth.rc.messages.CommonTypes.Pose3D.Builder builderForValue) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          transformation_.add(builderForValue.build());
          onChanged();
        } else {
          transformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      @java.lang.Deprecated public Builder addTransformation(
          int index, de.naoth.rc.messages.CommonTypes.Pose3D.Builder builderForValue) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          transformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          transformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      @java.lang.Deprecated public Builder addAllTransformation(
          java.lang.Iterable<? extends de.naoth.rc.messages.CommonTypes.Pose3D> values) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          super.addAll(values, transformation_);
          onChanged();
        } else {
          transformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      @java.lang.Deprecated public Builder clearTransformation() {
        if (transformationBuilder_ == null) {
          transformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          transformationBuilder_.clear();
        }
        return this;
      }
      @java.lang.Deprecated public Builder removeTransformation(int index) {
        if (transformationBuilder_ == null) {
          ensureTransformationIsMutable();
          transformation_.remove(index);
          onChanged();
        } else {
          transformationBuilder_.remove(index);
        }
        return this;
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.Pose3D.Builder getTransformationBuilder(
          int index) {
        return getTransformationFieldBuilder().getBuilder(index);
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.Pose3DOrBuilder getTransformationOrBuilder(
          int index) {
        if (transformationBuilder_ == null) {
          return transformation_.get(index);  } else {
          return transformationBuilder_.getMessageOrBuilder(index);
        }
      }
      @java.lang.Deprecated public java.util.List<? extends de.naoth.rc.messages.CommonTypes.Pose3DOrBuilder> 
           getTransformationOrBuilderList() {
        if (transformationBuilder_ != null) {
          return transformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transformation_);
        }
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.Pose3D.Builder addTransformationBuilder() {
        return getTransformationFieldBuilder().addBuilder(
            de.naoth.rc.messages.CommonTypes.Pose3D.getDefaultInstance());
      }
      @java.lang.Deprecated public de.naoth.rc.messages.CommonTypes.Pose3D.Builder addTransformationBuilder(
          int index) {
        return getTransformationFieldBuilder().addBuilder(
            index, de.naoth.rc.messages.CommonTypes.Pose3D.getDefaultInstance());
      }
      @java.lang.Deprecated public java.util.List<de.naoth.rc.messages.CommonTypes.Pose3D.Builder> 
           getTransformationBuilderList() {
        return getTransformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.naoth.rc.messages.CommonTypes.Pose3D, de.naoth.rc.messages.CommonTypes.Pose3D.Builder, de.naoth.rc.messages.CommonTypes.Pose3DOrBuilder> 
          getTransformationFieldBuilder() {
        if (transformationBuilder_ == null) {
          transformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.naoth.rc.messages.CommonTypes.Pose3D, de.naoth.rc.messages.CommonTypes.Pose3D.Builder, de.naoth.rc.messages.CommonTypes.Pose3DOrBuilder>(
                  transformation_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          transformation_ = null;
        }
        return transformationBuilder_;
      }
      
      // optional double openingAngleDiagonal = 15;
      private double openingAngleDiagonal_ ;
      public boolean hasOpeningAngleDiagonal() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public double getOpeningAngleDiagonal() {
        return openingAngleDiagonal_;
      }
      public Builder setOpeningAngleDiagonal(double value) {
        bitField0_ |= 0x00008000;
        openingAngleDiagonal_ = value;
        onChanged();
        return this;
      }
      public Builder clearOpeningAngleDiagonal() {
        bitField0_ = (bitField0_ & ~0x00008000);
        openingAngleDiagonal_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double pixelSize = 16;
      private double pixelSize_ ;
      public boolean hasPixelSize() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public double getPixelSize() {
        return pixelSize_;
      }
      public Builder setPixelSize(double value) {
        bitField0_ |= 0x00010000;
        pixelSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearPixelSize() {
        bitField0_ = (bitField0_ & ~0x00010000);
        pixelSize_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double focus = 17;
      private double focus_ ;
      public boolean hasFocus() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public double getFocus() {
        return focus_;
      }
      public Builder setFocus(double value) {
        bitField0_ |= 0x00020000;
        focus_ = value;
        onChanged();
        return this;
      }
      public Builder clearFocus() {
        bitField0_ = (bitField0_ & ~0x00020000);
        focus_ = 0D;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.CameraInfo)
    }
    
    static {
      defaultInstance = new CameraInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.CameraInfo)
  }
  
  public interface JointDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated double position = 1;
    java.util.List<java.lang.Double> getPositionList();
    int getPositionCount();
    double getPosition(int index);
    
    // repeated double stiffness = 2;
    java.util.List<java.lang.Double> getStiffnessList();
    int getStiffnessCount();
    double getStiffness(int index);
    
    // repeated double dp = 3;
    java.util.List<java.lang.Double> getDpList();
    int getDpCount();
    double getDp(int index);
    
    // repeated double ddp = 4;
    java.util.List<java.lang.Double> getDdpList();
    int getDdpCount();
    double getDdp(int index);
  }
  public static final class JointData extends
      com.google.protobuf.GeneratedMessage
      implements JointDataOrBuilder {
    // Use JointData.newBuilder() to construct.
    private JointData(Builder builder) {
      super(builder);
    }
    private JointData(boolean noInit) {}
    
    private static final JointData defaultInstance;
    public static JointData getDefaultInstance() {
      return defaultInstance;
    }
    
    public JointData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_JointData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_JointData_fieldAccessorTable;
    }
    
    // repeated double position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> position_;
    public java.util.List<java.lang.Double>
        getPositionList() {
      return position_;
    }
    public int getPositionCount() {
      return position_.size();
    }
    public double getPosition(int index) {
      return position_.get(index);
    }
    
    // repeated double stiffness = 2;
    public static final int STIFFNESS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> stiffness_;
    public java.util.List<java.lang.Double>
        getStiffnessList() {
      return stiffness_;
    }
    public int getStiffnessCount() {
      return stiffness_.size();
    }
    public double getStiffness(int index) {
      return stiffness_.get(index);
    }
    
    // repeated double dp = 3;
    public static final int DP_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> dp_;
    public java.util.List<java.lang.Double>
        getDpList() {
      return dp_;
    }
    public int getDpCount() {
      return dp_.size();
    }
    public double getDp(int index) {
      return dp_.get(index);
    }
    
    // repeated double ddp = 4;
    public static final int DDP_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> ddp_;
    public java.util.List<java.lang.Double>
        getDdpList() {
      return ddp_;
    }
    public int getDdpCount() {
      return ddp_.size();
    }
    public double getDdp(int index) {
      return ddp_.get(index);
    }
    
    private void initFields() {
      position_ = java.util.Collections.emptyList();;
      stiffness_ = java.util.Collections.emptyList();;
      dp_ = java.util.Collections.emptyList();;
      ddp_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < position_.size(); i++) {
        output.writeDouble(1, position_.get(i));
      }
      for (int i = 0; i < stiffness_.size(); i++) {
        output.writeDouble(2, stiffness_.get(i));
      }
      for (int i = 0; i < dp_.size(); i++) {
        output.writeDouble(3, dp_.get(i));
      }
      for (int i = 0; i < ddp_.size(); i++) {
        output.writeDouble(4, ddp_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getPositionList().size();
        size += dataSize;
        size += 1 * getPositionList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getStiffnessList().size();
        size += dataSize;
        size += 1 * getStiffnessList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDpList().size();
        size += dataSize;
        size += 1 * getDpList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDdpList().size();
        size += dataSize;
        size += 1 * getDdpList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.JointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.naoth.rc.messages.FrameworkRepresentations.JointData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.naoth.rc.messages.FrameworkRepresentations.JointDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_JointData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_JointData_fieldAccessorTable;
      }
      
      // Construct using de.naoth.rc.messages.FrameworkRepresentations.JointData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        position_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        stiffness_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        dp_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        ddp_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.JointData.getDescriptor();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.JointData getDefaultInstanceForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.JointData.getDefaultInstance();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.JointData build() {
        de.naoth.rc.messages.FrameworkRepresentations.JointData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.naoth.rc.messages.FrameworkRepresentations.JointData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.naoth.rc.messages.FrameworkRepresentations.JointData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.JointData buildPartial() {
        de.naoth.rc.messages.FrameworkRepresentations.JointData result = new de.naoth.rc.messages.FrameworkRepresentations.JointData(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          position_ = java.util.Collections.unmodifiableList(position_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.position_ = position_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          stiffness_ = java.util.Collections.unmodifiableList(stiffness_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.stiffness_ = stiffness_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          dp_ = java.util.Collections.unmodifiableList(dp_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.dp_ = dp_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ddp_ = java.util.Collections.unmodifiableList(ddp_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ddp_ = ddp_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.messages.FrameworkRepresentations.JointData) {
          return mergeFrom((de.naoth.rc.messages.FrameworkRepresentations.JointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.naoth.rc.messages.FrameworkRepresentations.JointData other) {
        if (other == de.naoth.rc.messages.FrameworkRepresentations.JointData.getDefaultInstance()) return this;
        if (!other.position_.isEmpty()) {
          if (position_.isEmpty()) {
            position_ = other.position_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePositionIsMutable();
            position_.addAll(other.position_);
          }
          onChanged();
        }
        if (!other.stiffness_.isEmpty()) {
          if (stiffness_.isEmpty()) {
            stiffness_ = other.stiffness_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStiffnessIsMutable();
            stiffness_.addAll(other.stiffness_);
          }
          onChanged();
        }
        if (!other.dp_.isEmpty()) {
          if (dp_.isEmpty()) {
            dp_ = other.dp_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDpIsMutable();
            dp_.addAll(other.dp_);
          }
          onChanged();
        }
        if (!other.ddp_.isEmpty()) {
          if (ddp_.isEmpty()) {
            ddp_ = other.ddp_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDdpIsMutable();
            ddp_.addAll(other.ddp_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              ensurePositionIsMutable();
              position_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPosition(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              ensureStiffnessIsMutable();
              stiffness_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addStiffness(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              ensureDpIsMutable();
              dp_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDp(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              ensureDdpIsMutable();
              ddp_.add(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDdp(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated double position = 1;
      private java.util.List<java.lang.Double> position_ = java.util.Collections.emptyList();;
      private void ensurePositionIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          position_ = new java.util.ArrayList<java.lang.Double>(position_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Double>
          getPositionList() {
        return java.util.Collections.unmodifiableList(position_);
      }
      public int getPositionCount() {
        return position_.size();
      }
      public double getPosition(int index) {
        return position_.get(index);
      }
      public Builder setPosition(
          int index, double value) {
        ensurePositionIsMutable();
        position_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addPosition(double value) {
        ensurePositionIsMutable();
        position_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllPosition(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensurePositionIsMutable();
        super.addAll(values, position_);
        onChanged();
        return this;
      }
      public Builder clearPosition() {
        position_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // repeated double stiffness = 2;
      private java.util.List<java.lang.Double> stiffness_ = java.util.Collections.emptyList();;
      private void ensureStiffnessIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          stiffness_ = new java.util.ArrayList<java.lang.Double>(stiffness_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Double>
          getStiffnessList() {
        return java.util.Collections.unmodifiableList(stiffness_);
      }
      public int getStiffnessCount() {
        return stiffness_.size();
      }
      public double getStiffness(int index) {
        return stiffness_.get(index);
      }
      public Builder setStiffness(
          int index, double value) {
        ensureStiffnessIsMutable();
        stiffness_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addStiffness(double value) {
        ensureStiffnessIsMutable();
        stiffness_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllStiffness(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureStiffnessIsMutable();
        super.addAll(values, stiffness_);
        onChanged();
        return this;
      }
      public Builder clearStiffness() {
        stiffness_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // repeated double dp = 3;
      private java.util.List<java.lang.Double> dp_ = java.util.Collections.emptyList();;
      private void ensureDpIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          dp_ = new java.util.ArrayList<java.lang.Double>(dp_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Double>
          getDpList() {
        return java.util.Collections.unmodifiableList(dp_);
      }
      public int getDpCount() {
        return dp_.size();
      }
      public double getDp(int index) {
        return dp_.get(index);
      }
      public Builder setDp(
          int index, double value) {
        ensureDpIsMutable();
        dp_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDp(double value) {
        ensureDpIsMutable();
        dp_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDp(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDpIsMutable();
        super.addAll(values, dp_);
        onChanged();
        return this;
      }
      public Builder clearDp() {
        dp_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated double ddp = 4;
      private java.util.List<java.lang.Double> ddp_ = java.util.Collections.emptyList();;
      private void ensureDdpIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ddp_ = new java.util.ArrayList<java.lang.Double>(ddp_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Double>
          getDdpList() {
        return java.util.Collections.unmodifiableList(ddp_);
      }
      public int getDdpCount() {
        return ddp_.size();
      }
      public double getDdp(int index) {
        return ddp_.get(index);
      }
      public Builder setDdp(
          int index, double value) {
        ensureDdpIsMutable();
        ddp_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDdp(double value) {
        ensureDdpIsMutable();
        ddp_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDdp(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDdpIsMutable();
        super.addAll(values, ddp_);
        onChanged();
        return this;
      }
      public Builder clearDdp() {
        ddp_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.JointData)
    }
    
    static {
      defaultInstance = new JointData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.JointData)
  }
  
  public interface SensorJointDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .naothmessages.JointData jointData = 1;
    boolean hasJointData();
    de.naoth.rc.messages.FrameworkRepresentations.JointData getJointData();
    de.naoth.rc.messages.FrameworkRepresentations.JointDataOrBuilder getJointDataOrBuilder();
    
    // repeated double temperature = 2;
    java.util.List<java.lang.Double> getTemperatureList();
    int getTemperatureCount();
    double getTemperature(int index);
    
    // repeated double electricCurrent = 3;
    java.util.List<java.lang.Double> getElectricCurrentList();
    int getElectricCurrentCount();
    double getElectricCurrent(int index);
  }
  public static final class SensorJointData extends
      com.google.protobuf.GeneratedMessage
      implements SensorJointDataOrBuilder {
    // Use SensorJointData.newBuilder() to construct.
    private SensorJointData(Builder builder) {
      super(builder);
    }
    private SensorJointData(boolean noInit) {}
    
    private static final SensorJointData defaultInstance;
    public static SensorJointData getDefaultInstance() {
      return defaultInstance;
    }
    
    public SensorJointData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_SensorJointData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_SensorJointData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .naothmessages.JointData jointData = 1;
    public static final int JOINTDATA_FIELD_NUMBER = 1;
    private de.naoth.rc.messages.FrameworkRepresentations.JointData jointData_;
    public boolean hasJointData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public de.naoth.rc.messages.FrameworkRepresentations.JointData getJointData() {
      return jointData_;
    }
    public de.naoth.rc.messages.FrameworkRepresentations.JointDataOrBuilder getJointDataOrBuilder() {
      return jointData_;
    }
    
    // repeated double temperature = 2;
    public static final int TEMPERATURE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> temperature_;
    public java.util.List<java.lang.Double>
        getTemperatureList() {
      return temperature_;
    }
    public int getTemperatureCount() {
      return temperature_.size();
    }
    public double getTemperature(int index) {
      return temperature_.get(index);
    }
    
    // repeated double electricCurrent = 3;
    public static final int ELECTRICCURRENT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> electricCurrent_;
    public java.util.List<java.lang.Double>
        getElectricCurrentList() {
      return electricCurrent_;
    }
    public int getElectricCurrentCount() {
      return electricCurrent_.size();
    }
    public double getElectricCurrent(int index) {
      return electricCurrent_.get(index);
    }
    
    private void initFields() {
      jointData_ = de.naoth.rc.messages.FrameworkRepresentations.JointData.getDefaultInstance();
      temperature_ = java.util.Collections.emptyList();;
      electricCurrent_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasJointData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, jointData_);
      }
      for (int i = 0; i < temperature_.size(); i++) {
        output.writeDouble(2, temperature_.get(i));
      }
      for (int i = 0; i < electricCurrent_.size(); i++) {
        output.writeDouble(3, electricCurrent_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, jointData_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getTemperatureList().size();
        size += dataSize;
        size += 1 * getTemperatureList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getElectricCurrentList().size();
        size += dataSize;
        size += 1 * getElectricCurrentList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.SensorJointData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.naoth.rc.messages.FrameworkRepresentations.SensorJointData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.naoth.rc.messages.FrameworkRepresentations.SensorJointDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_SensorJointData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_SensorJointData_fieldAccessorTable;
      }
      
      // Construct using de.naoth.rc.messages.FrameworkRepresentations.SensorJointData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getJointDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (jointDataBuilder_ == null) {
          jointData_ = de.naoth.rc.messages.FrameworkRepresentations.JointData.getDefaultInstance();
        } else {
          jointDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        temperature_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        electricCurrent_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.SensorJointData.getDescriptor();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.SensorJointData getDefaultInstanceForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.SensorJointData.getDefaultInstance();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.SensorJointData build() {
        de.naoth.rc.messages.FrameworkRepresentations.SensorJointData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.naoth.rc.messages.FrameworkRepresentations.SensorJointData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.naoth.rc.messages.FrameworkRepresentations.SensorJointData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.SensorJointData buildPartial() {
        de.naoth.rc.messages.FrameworkRepresentations.SensorJointData result = new de.naoth.rc.messages.FrameworkRepresentations.SensorJointData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (jointDataBuilder_ == null) {
          result.jointData_ = jointData_;
        } else {
          result.jointData_ = jointDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          temperature_ = java.util.Collections.unmodifiableList(temperature_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.temperature_ = temperature_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          electricCurrent_ = java.util.Collections.unmodifiableList(electricCurrent_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.electricCurrent_ = electricCurrent_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.messages.FrameworkRepresentations.SensorJointData) {
          return mergeFrom((de.naoth.rc.messages.FrameworkRepresentations.SensorJointData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.naoth.rc.messages.FrameworkRepresentations.SensorJointData other) {
        if (other == de.naoth.rc.messages.FrameworkRepresentations.SensorJointData.getDefaultInstance()) return this;
        if (other.hasJointData()) {
          mergeJointData(other.getJointData());
        }
        if (!other.temperature_.isEmpty()) {
          if (temperature_.isEmpty()) {
            temperature_ = other.temperature_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTemperatureIsMutable();
            temperature_.addAll(other.temperature_);
          }
          onChanged();
        }
        if (!other.electricCurrent_.isEmpty()) {
          if (electricCurrent_.isEmpty()) {
            electricCurrent_ = other.electricCurrent_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureElectricCurrentIsMutable();
            electricCurrent_.addAll(other.electricCurrent_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasJointData()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              de.naoth.rc.messages.FrameworkRepresentations.JointData.Builder subBuilder = de.naoth.rc.messages.FrameworkRepresentations.JointData.newBuilder();
              if (hasJointData()) {
                subBuilder.mergeFrom(getJointData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setJointData(subBuilder.buildPartial());
              break;
            }
            case 17: {
              ensureTemperatureIsMutable();
              temperature_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTemperature(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              ensureElectricCurrentIsMutable();
              electricCurrent_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addElectricCurrent(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .naothmessages.JointData jointData = 1;
      private de.naoth.rc.messages.FrameworkRepresentations.JointData jointData_ = de.naoth.rc.messages.FrameworkRepresentations.JointData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.naoth.rc.messages.FrameworkRepresentations.JointData, de.naoth.rc.messages.FrameworkRepresentations.JointData.Builder, de.naoth.rc.messages.FrameworkRepresentations.JointDataOrBuilder> jointDataBuilder_;
      public boolean hasJointData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public de.naoth.rc.messages.FrameworkRepresentations.JointData getJointData() {
        if (jointDataBuilder_ == null) {
          return jointData_;
        } else {
          return jointDataBuilder_.getMessage();
        }
      }
      public Builder setJointData(de.naoth.rc.messages.FrameworkRepresentations.JointData value) {
        if (jointDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          jointData_ = value;
          onChanged();
        } else {
          jointDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setJointData(
          de.naoth.rc.messages.FrameworkRepresentations.JointData.Builder builderForValue) {
        if (jointDataBuilder_ == null) {
          jointData_ = builderForValue.build();
          onChanged();
        } else {
          jointDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeJointData(de.naoth.rc.messages.FrameworkRepresentations.JointData value) {
        if (jointDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              jointData_ != de.naoth.rc.messages.FrameworkRepresentations.JointData.getDefaultInstance()) {
            jointData_ =
              de.naoth.rc.messages.FrameworkRepresentations.JointData.newBuilder(jointData_).mergeFrom(value).buildPartial();
          } else {
            jointData_ = value;
          }
          onChanged();
        } else {
          jointDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearJointData() {
        if (jointDataBuilder_ == null) {
          jointData_ = de.naoth.rc.messages.FrameworkRepresentations.JointData.getDefaultInstance();
          onChanged();
        } else {
          jointDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public de.naoth.rc.messages.FrameworkRepresentations.JointData.Builder getJointDataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getJointDataFieldBuilder().getBuilder();
      }
      public de.naoth.rc.messages.FrameworkRepresentations.JointDataOrBuilder getJointDataOrBuilder() {
        if (jointDataBuilder_ != null) {
          return jointDataBuilder_.getMessageOrBuilder();
        } else {
          return jointData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          de.naoth.rc.messages.FrameworkRepresentations.JointData, de.naoth.rc.messages.FrameworkRepresentations.JointData.Builder, de.naoth.rc.messages.FrameworkRepresentations.JointDataOrBuilder> 
          getJointDataFieldBuilder() {
        if (jointDataBuilder_ == null) {
          jointDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.naoth.rc.messages.FrameworkRepresentations.JointData, de.naoth.rc.messages.FrameworkRepresentations.JointData.Builder, de.naoth.rc.messages.FrameworkRepresentations.JointDataOrBuilder>(
                  jointData_,
                  getParentForChildren(),
                  isClean());
          jointData_ = null;
        }
        return jointDataBuilder_;
      }
      
      // repeated double temperature = 2;
      private java.util.List<java.lang.Double> temperature_ = java.util.Collections.emptyList();;
      private void ensureTemperatureIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          temperature_ = new java.util.ArrayList<java.lang.Double>(temperature_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Double>
          getTemperatureList() {
        return java.util.Collections.unmodifiableList(temperature_);
      }
      public int getTemperatureCount() {
        return temperature_.size();
      }
      public double getTemperature(int index) {
        return temperature_.get(index);
      }
      public Builder setTemperature(
          int index, double value) {
        ensureTemperatureIsMutable();
        temperature_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addTemperature(double value) {
        ensureTemperatureIsMutable();
        temperature_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllTemperature(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureTemperatureIsMutable();
        super.addAll(values, temperature_);
        onChanged();
        return this;
      }
      public Builder clearTemperature() {
        temperature_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // repeated double electricCurrent = 3;
      private java.util.List<java.lang.Double> electricCurrent_ = java.util.Collections.emptyList();;
      private void ensureElectricCurrentIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          electricCurrent_ = new java.util.ArrayList<java.lang.Double>(electricCurrent_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Double>
          getElectricCurrentList() {
        return java.util.Collections.unmodifiableList(electricCurrent_);
      }
      public int getElectricCurrentCount() {
        return electricCurrent_.size();
      }
      public double getElectricCurrent(int index) {
        return electricCurrent_.get(index);
      }
      public Builder setElectricCurrent(
          int index, double value) {
        ensureElectricCurrentIsMutable();
        electricCurrent_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addElectricCurrent(double value) {
        ensureElectricCurrentIsMutable();
        electricCurrent_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllElectricCurrent(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureElectricCurrentIsMutable();
        super.addAll(values, electricCurrent_);
        onChanged();
        return this;
      }
      public Builder clearElectricCurrent() {
        electricCurrent_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.SensorJointData)
    }
    
    static {
      defaultInstance = new SensorJointData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.SensorJointData)
  }
  
  public interface UltraSoundReceiveDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 ultraSoundTimeStep = 1;
    boolean hasUltraSoundTimeStep();
    int getUltraSoundTimeStep();
    
    // required double rawdata = 2;
    boolean hasRawdata();
    double getRawdata();
    
    // repeated double dataLeft = 3;
    java.util.List<java.lang.Double> getDataLeftList();
    int getDataLeftCount();
    double getDataLeft(int index);
    
    // repeated double dataRight = 4;
    java.util.List<java.lang.Double> getDataRightList();
    int getDataRightCount();
    double getDataRight(int index);
  }
  public static final class UltraSoundReceiveData extends
      com.google.protobuf.GeneratedMessage
      implements UltraSoundReceiveDataOrBuilder {
    // Use UltraSoundReceiveData.newBuilder() to construct.
    private UltraSoundReceiveData(Builder builder) {
      super(builder);
    }
    private UltraSoundReceiveData(boolean noInit) {}
    
    private static final UltraSoundReceiveData defaultInstance;
    public static UltraSoundReceiveData getDefaultInstance() {
      return defaultInstance;
    }
    
    public UltraSoundReceiveData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_UltraSoundReceiveData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_UltraSoundReceiveData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 ultraSoundTimeStep = 1;
    public static final int ULTRASOUNDTIMESTEP_FIELD_NUMBER = 1;
    private int ultraSoundTimeStep_;
    public boolean hasUltraSoundTimeStep() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getUltraSoundTimeStep() {
      return ultraSoundTimeStep_;
    }
    
    // required double rawdata = 2;
    public static final int RAWDATA_FIELD_NUMBER = 2;
    private double rawdata_;
    public boolean hasRawdata() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public double getRawdata() {
      return rawdata_;
    }
    
    // repeated double dataLeft = 3;
    public static final int DATALEFT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> dataLeft_;
    public java.util.List<java.lang.Double>
        getDataLeftList() {
      return dataLeft_;
    }
    public int getDataLeftCount() {
      return dataLeft_.size();
    }
    public double getDataLeft(int index) {
      return dataLeft_.get(index);
    }
    
    // repeated double dataRight = 4;
    public static final int DATARIGHT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> dataRight_;
    public java.util.List<java.lang.Double>
        getDataRightList() {
      return dataRight_;
    }
    public int getDataRightCount() {
      return dataRight_.size();
    }
    public double getDataRight(int index) {
      return dataRight_.get(index);
    }
    
    private void initFields() {
      ultraSoundTimeStep_ = 0;
      rawdata_ = 0D;
      dataLeft_ = java.util.Collections.emptyList();;
      dataRight_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRawdata()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ultraSoundTimeStep_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, rawdata_);
      }
      for (int i = 0; i < dataLeft_.size(); i++) {
        output.writeDouble(3, dataLeft_.get(i));
      }
      for (int i = 0; i < dataRight_.size(); i++) {
        output.writeDouble(4, dataRight_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ultraSoundTimeStep_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, rawdata_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDataLeftList().size();
        size += dataSize;
        size += 1 * getDataLeftList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDataRightList().size();
        size += dataSize;
        size += 1 * getDataRightList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_UltraSoundReceiveData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_UltraSoundReceiveData_fieldAccessorTable;
      }
      
      // Construct using de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        ultraSoundTimeStep_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        rawdata_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        dataLeft_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        dataRight_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData.getDescriptor();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData getDefaultInstanceForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData.getDefaultInstance();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData build() {
        de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData buildPartial() {
        de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData result = new de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ultraSoundTimeStep_ = ultraSoundTimeStep_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rawdata_ = rawdata_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          dataLeft_ = java.util.Collections.unmodifiableList(dataLeft_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.dataLeft_ = dataLeft_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          dataRight_ = java.util.Collections.unmodifiableList(dataRight_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.dataRight_ = dataRight_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData) {
          return mergeFrom((de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData other) {
        if (other == de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData.getDefaultInstance()) return this;
        if (other.hasUltraSoundTimeStep()) {
          setUltraSoundTimeStep(other.getUltraSoundTimeStep());
        }
        if (other.hasRawdata()) {
          setRawdata(other.getRawdata());
        }
        if (!other.dataLeft_.isEmpty()) {
          if (dataLeft_.isEmpty()) {
            dataLeft_ = other.dataLeft_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDataLeftIsMutable();
            dataLeft_.addAll(other.dataLeft_);
          }
          onChanged();
        }
        if (!other.dataRight_.isEmpty()) {
          if (dataRight_.isEmpty()) {
            dataRight_ = other.dataRight_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDataRightIsMutable();
            dataRight_.addAll(other.dataRight_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRawdata()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ultraSoundTimeStep_ = input.readUInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              rawdata_ = input.readDouble();
              break;
            }
            case 25: {
              ensureDataLeftIsMutable();
              dataLeft_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDataLeft(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              ensureDataRightIsMutable();
              dataRight_.add(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDataRight(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 ultraSoundTimeStep = 1;
      private int ultraSoundTimeStep_ ;
      public boolean hasUltraSoundTimeStep() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getUltraSoundTimeStep() {
        return ultraSoundTimeStep_;
      }
      public Builder setUltraSoundTimeStep(int value) {
        bitField0_ |= 0x00000001;
        ultraSoundTimeStep_ = value;
        onChanged();
        return this;
      }
      public Builder clearUltraSoundTimeStep() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ultraSoundTimeStep_ = 0;
        onChanged();
        return this;
      }
      
      // required double rawdata = 2;
      private double rawdata_ ;
      public boolean hasRawdata() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public double getRawdata() {
        return rawdata_;
      }
      public Builder setRawdata(double value) {
        bitField0_ |= 0x00000002;
        rawdata_ = value;
        onChanged();
        return this;
      }
      public Builder clearRawdata() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rawdata_ = 0D;
        onChanged();
        return this;
      }
      
      // repeated double dataLeft = 3;
      private java.util.List<java.lang.Double> dataLeft_ = java.util.Collections.emptyList();;
      private void ensureDataLeftIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          dataLeft_ = new java.util.ArrayList<java.lang.Double>(dataLeft_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Double>
          getDataLeftList() {
        return java.util.Collections.unmodifiableList(dataLeft_);
      }
      public int getDataLeftCount() {
        return dataLeft_.size();
      }
      public double getDataLeft(int index) {
        return dataLeft_.get(index);
      }
      public Builder setDataLeft(
          int index, double value) {
        ensureDataLeftIsMutable();
        dataLeft_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDataLeft(double value) {
        ensureDataLeftIsMutable();
        dataLeft_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDataLeft(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDataLeftIsMutable();
        super.addAll(values, dataLeft_);
        onChanged();
        return this;
      }
      public Builder clearDataLeft() {
        dataLeft_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated double dataRight = 4;
      private java.util.List<java.lang.Double> dataRight_ = java.util.Collections.emptyList();;
      private void ensureDataRightIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          dataRight_ = new java.util.ArrayList<java.lang.Double>(dataRight_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Double>
          getDataRightList() {
        return java.util.Collections.unmodifiableList(dataRight_);
      }
      public int getDataRightCount() {
        return dataRight_.size();
      }
      public double getDataRight(int index) {
        return dataRight_.get(index);
      }
      public Builder setDataRight(
          int index, double value) {
        ensureDataRightIsMutable();
        dataRight_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDataRight(double value) {
        ensureDataRightIsMutable();
        dataRight_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDataRight(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDataRightIsMutable();
        super.addAll(values, dataRight_);
        onChanged();
        return this;
      }
      public Builder clearDataRight() {
        dataRight_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.UltraSoundReceiveData)
    }
    
    static {
      defaultInstance = new UltraSoundReceiveData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.UltraSoundReceiveData)
  }
  
  public interface FrameInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 frameNumber = 1;
    boolean hasFrameNumber();
    int getFrameNumber();
    
    // required uint32 time = 2;
    boolean hasTime();
    int getTime();
  }
  public static final class FrameInfo extends
      com.google.protobuf.GeneratedMessage
      implements FrameInfoOrBuilder {
    // Use FrameInfo.newBuilder() to construct.
    private FrameInfo(Builder builder) {
      super(builder);
    }
    private FrameInfo(boolean noInit) {}
    
    private static final FrameInfo defaultInstance;
    public static FrameInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public FrameInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_FrameInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_FrameInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 frameNumber = 1;
    public static final int FRAMENUMBER_FIELD_NUMBER = 1;
    private int frameNumber_;
    public boolean hasFrameNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getFrameNumber() {
      return frameNumber_;
    }
    
    // required uint32 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTime() {
      return time_;
    }
    
    private void initFields() {
      frameNumber_ = 0;
      time_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasFrameNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, frameNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, time_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frameNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FrameInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.naoth.rc.messages.FrameworkRepresentations.FrameInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.naoth.rc.messages.FrameworkRepresentations.FrameInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_FrameInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_FrameInfo_fieldAccessorTable;
      }
      
      // Construct using de.naoth.rc.messages.FrameworkRepresentations.FrameInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        frameNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.FrameInfo.getDescriptor();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.FrameInfo getDefaultInstanceForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.FrameInfo.getDefaultInstance();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.FrameInfo build() {
        de.naoth.rc.messages.FrameworkRepresentations.FrameInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.naoth.rc.messages.FrameworkRepresentations.FrameInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.naoth.rc.messages.FrameworkRepresentations.FrameInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.FrameInfo buildPartial() {
        de.naoth.rc.messages.FrameworkRepresentations.FrameInfo result = new de.naoth.rc.messages.FrameworkRepresentations.FrameInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frameNumber_ = frameNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.messages.FrameworkRepresentations.FrameInfo) {
          return mergeFrom((de.naoth.rc.messages.FrameworkRepresentations.FrameInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.naoth.rc.messages.FrameworkRepresentations.FrameInfo other) {
        if (other == de.naoth.rc.messages.FrameworkRepresentations.FrameInfo.getDefaultInstance()) return this;
        if (other.hasFrameNumber()) {
          setFrameNumber(other.getFrameNumber());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasFrameNumber()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              frameNumber_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 frameNumber = 1;
      private int frameNumber_ ;
      public boolean hasFrameNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getFrameNumber() {
        return frameNumber_;
      }
      public Builder setFrameNumber(int value) {
        bitField0_ |= 0x00000001;
        frameNumber_ = value;
        onChanged();
        return this;
      }
      public Builder clearFrameNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frameNumber_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 time = 2;
      private int time_ ;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTime() {
        return time_;
      }
      public Builder setTime(int value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.FrameInfo)
    }
    
    static {
      defaultInstance = new FrameInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.FrameInfo)
  }
  
  public interface FSRDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated double force = 1;
    java.util.List<java.lang.Double> getForceList();
    int getForceCount();
    double getForce(int index);
    
    // repeated double data = 2;
    java.util.List<java.lang.Double> getDataList();
    int getDataCount();
    double getData(int index);
    
    // repeated bool valid = 3;
    java.util.List<java.lang.Boolean> getValidList();
    int getValidCount();
    boolean getValid(int index);
  }
  public static final class FSRData extends
      com.google.protobuf.GeneratedMessage
      implements FSRDataOrBuilder {
    // Use FSRData.newBuilder() to construct.
    private FSRData(Builder builder) {
      super(builder);
    }
    private FSRData(boolean noInit) {}
    
    private static final FSRData defaultInstance;
    public static FSRData getDefaultInstance() {
      return defaultInstance;
    }
    
    public FSRData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_FSRData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_FSRData_fieldAccessorTable;
    }
    
    // repeated double force = 1;
    public static final int FORCE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> force_;
    public java.util.List<java.lang.Double>
        getForceList() {
      return force_;
    }
    public int getForceCount() {
      return force_.size();
    }
    public double getForce(int index) {
      return force_.get(index);
    }
    
    // repeated double data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> data_;
    public java.util.List<java.lang.Double>
        getDataList() {
      return data_;
    }
    public int getDataCount() {
      return data_.size();
    }
    public double getData(int index) {
      return data_.get(index);
    }
    
    // repeated bool valid = 3;
    public static final int VALID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Boolean> valid_;
    public java.util.List<java.lang.Boolean>
        getValidList() {
      return valid_;
    }
    public int getValidCount() {
      return valid_.size();
    }
    public boolean getValid(int index) {
      return valid_.get(index);
    }
    
    private void initFields() {
      force_ = java.util.Collections.emptyList();;
      data_ = java.util.Collections.emptyList();;
      valid_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < force_.size(); i++) {
        output.writeDouble(1, force_.get(i));
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeDouble(2, data_.get(i));
      }
      for (int i = 0; i < valid_.size(); i++) {
        output.writeBool(3, valid_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getForceList().size();
        size += dataSize;
        size += 1 * getForceList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDataList().size();
        size += dataSize;
        size += 1 * getDataList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getValidList().size();
        size += dataSize;
        size += 1 * getValidList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.naoth.rc.messages.FrameworkRepresentations.FSRData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.naoth.rc.messages.FrameworkRepresentations.FSRData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.naoth.rc.messages.FrameworkRepresentations.FSRDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_FSRData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.naoth.rc.messages.FrameworkRepresentations.internal_static_naothmessages_FSRData_fieldAccessorTable;
      }
      
      // Construct using de.naoth.rc.messages.FrameworkRepresentations.FSRData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        force_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        valid_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.FSRData.getDescriptor();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.FSRData getDefaultInstanceForType() {
        return de.naoth.rc.messages.FrameworkRepresentations.FSRData.getDefaultInstance();
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.FSRData build() {
        de.naoth.rc.messages.FrameworkRepresentations.FSRData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.naoth.rc.messages.FrameworkRepresentations.FSRData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.naoth.rc.messages.FrameworkRepresentations.FSRData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.naoth.rc.messages.FrameworkRepresentations.FSRData buildPartial() {
        de.naoth.rc.messages.FrameworkRepresentations.FSRData result = new de.naoth.rc.messages.FrameworkRepresentations.FSRData(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          force_ = java.util.Collections.unmodifiableList(force_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.force_ = force_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.data_ = data_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          valid_ = java.util.Collections.unmodifiableList(valid_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.valid_ = valid_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.naoth.rc.messages.FrameworkRepresentations.FSRData) {
          return mergeFrom((de.naoth.rc.messages.FrameworkRepresentations.FSRData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.naoth.rc.messages.FrameworkRepresentations.FSRData other) {
        if (other == de.naoth.rc.messages.FrameworkRepresentations.FSRData.getDefaultInstance()) return this;
        if (!other.force_.isEmpty()) {
          if (force_.isEmpty()) {
            force_ = other.force_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureForceIsMutable();
            force_.addAll(other.force_);
          }
          onChanged();
        }
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
        if (!other.valid_.isEmpty()) {
          if (valid_.isEmpty()) {
            valid_ = other.valid_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValidIsMutable();
            valid_.addAll(other.valid_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              ensureForceIsMutable();
              force_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addForce(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              ensureDataIsMutable();
              data_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addData(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              ensureValidIsMutable();
              valid_.add(input.readBool());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addValid(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated double force = 1;
      private java.util.List<java.lang.Double> force_ = java.util.Collections.emptyList();;
      private void ensureForceIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          force_ = new java.util.ArrayList<java.lang.Double>(force_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Double>
          getForceList() {
        return java.util.Collections.unmodifiableList(force_);
      }
      public int getForceCount() {
        return force_.size();
      }
      public double getForce(int index) {
        return force_.get(index);
      }
      public Builder setForce(
          int index, double value) {
        ensureForceIsMutable();
        force_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addForce(double value) {
        ensureForceIsMutable();
        force_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllForce(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureForceIsMutable();
        super.addAll(values, force_);
        onChanged();
        return this;
      }
      public Builder clearForce() {
        force_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // repeated double data = 2;
      private java.util.List<java.lang.Double> data_ = java.util.Collections.emptyList();;
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = new java.util.ArrayList<java.lang.Double>(data_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Double>
          getDataList() {
        return java.util.Collections.unmodifiableList(data_);
      }
      public int getDataCount() {
        return data_.size();
      }
      public double getData(int index) {
        return data_.get(index);
      }
      public Builder setData(
          int index, double value) {
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addData(double value) {
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDataIsMutable();
        super.addAll(values, data_);
        onChanged();
        return this;
      }
      public Builder clearData() {
        data_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // repeated bool valid = 3;
      private java.util.List<java.lang.Boolean> valid_ = java.util.Collections.emptyList();;
      private void ensureValidIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          valid_ = new java.util.ArrayList<java.lang.Boolean>(valid_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Boolean>
          getValidList() {
        return java.util.Collections.unmodifiableList(valid_);
      }
      public int getValidCount() {
        return valid_.size();
      }
      public boolean getValid(int index) {
        return valid_.get(index);
      }
      public Builder setValid(
          int index, boolean value) {
        ensureValidIsMutable();
        valid_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addValid(boolean value) {
        ensureValidIsMutable();
        valid_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllValid(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureValidIsMutable();
        super.addAll(values, valid_);
        onChanged();
        return this;
      }
      public Builder clearValid() {
        valid_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:naothmessages.FSRData)
    }
    
    static {
      defaultInstance = new FSRData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:naothmessages.FSRData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_Image_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_Image_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_CameraInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_CameraInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_JointData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_JointData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_SensorJointData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_SensorJointData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_UltraSoundReceiveData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_UltraSoundReceiveData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_FrameInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_FrameInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_naothmessages_FSRData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_naothmessages_FSRData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037Framework-Representations.proto\022\rnaoth" +
      "messages\032\021CommonTypes.proto\"\321\001\n\005Image\022\014\n" +
      "\004data\030\001 \002(\014\022\022\n\005width\030\002 \001(\005:\003320\022\023\n\006heigh" +
      "t\030\003 \001(\005:\003240\022-\n\ncameraInfo\030\004 \001(\0132\031.naoth" +
      "messages.CameraInfo\0220\n\006format\030\005 \001(\0162\033.na" +
      "othmessages.Image.Format:\003YUV\022\021\n\ttimesta" +
      "mp\030\006 \001(\r\"\035\n\006Format\022\007\n\003YUV\020\000\022\n\n\006YUV422\020\001\"" +
      "\322\004\n\nCameraInfo\022\027\n\017resolutionWidth\030\001 \002(\005\022" +
      "\030\n\020resolutionHeight\030\002 \002(\005\0221\n\010cameraID\030\004 " +
      "\001(\0162\027.naothmessages.CameraID:\006bottom\022\027\n\013",
      "focalLength\030\005 \001(\001B\002\030\001\022\035\n\021openingAngleWid" +
      "th\030\006 \001(\001B\002\030\001\022\036\n\022openingAngleHeight\030\007 \001(\001" +
      "B\002\030\001\022\032\n\016opticalCenterX\030\010 \001(\001B\002\030\001\022\032\n\016opti" +
      "calCenterY\030\t \001(\001B\002\030\001\022\020\n\004size\030\n \001(\003B\002\030\001\022\026" +
      "\n\nmemorysize\030\013 \001(\003B\002\030\001\022\034\n\020cameraRollOffs" +
      "et\030\014 \001(\001B\002\030\001\022\034\n\020cameraTiltOffset\030\r \001(\001B\002" +
      "\030\001\022:\n\020correctionOffset\030\022 \003(\0132\034.naothmess" +
      "ages.DoubleVector2B\002\030\001\0229\n\017headJointOffse" +
      "t\030\023 \003(\0132\034.naothmessages.DoubleVector2B\002\030" +
      "\001\0221\n\016transformation\030\016 \003(\0132\025.naothmessage",
      "s.Pose3DB\002\030\001\022\034\n\024openingAngleDiagonal\030\017 \001" +
      "(\001\022\021\n\tpixelSize\030\020 \001(\001\022\r\n\005focus\030\021 \001(\001\"I\n\t" +
      "JointData\022\020\n\010position\030\001 \003(\001\022\021\n\tstiffness" +
      "\030\002 \003(\001\022\n\n\002dp\030\003 \003(\001\022\013\n\003ddp\030\004 \003(\001\"l\n\017Senso" +
      "rJointData\022+\n\tjointData\030\001 \002(\0132\030.naothmes" +
      "sages.JointData\022\023\n\013temperature\030\002 \003(\001\022\027\n\017" +
      "electricCurrent\030\003 \003(\001\"i\n\025UltraSoundRecei" +
      "veData\022\032\n\022ultraSoundTimeStep\030\001 \001(\r\022\017\n\007ra" +
      "wdata\030\002 \002(\001\022\020\n\010dataLeft\030\003 \003(\001\022\021\n\tdataRig" +
      "ht\030\004 \003(\001\".\n\tFrameInfo\022\023\n\013frameNumber\030\001 \002",
      "(\r\022\014\n\004time\030\002 \002(\r\"5\n\007FSRData\022\r\n\005force\030\001 \003" +
      "(\001\022\014\n\004data\030\002 \003(\001\022\r\n\005valid\030\003 \003(\010B\026\n\024de.na" +
      "oth.rc.messages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_naothmessages_Image_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_naothmessages_Image_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_Image_descriptor,
              new java.lang.String[] { "Data", "Width", "Height", "CameraInfo", "Format", "Timestamp", },
              de.naoth.rc.messages.FrameworkRepresentations.Image.class,
              de.naoth.rc.messages.FrameworkRepresentations.Image.Builder.class);
          internal_static_naothmessages_CameraInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_naothmessages_CameraInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_CameraInfo_descriptor,
              new java.lang.String[] { "ResolutionWidth", "ResolutionHeight", "CameraID", "FocalLength", "OpeningAngleWidth", "OpeningAngleHeight", "OpticalCenterX", "OpticalCenterY", "Size", "Memorysize", "CameraRollOffset", "CameraTiltOffset", "CorrectionOffset", "HeadJointOffset", "Transformation", "OpeningAngleDiagonal", "PixelSize", "Focus", },
              de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.class,
              de.naoth.rc.messages.FrameworkRepresentations.CameraInfo.Builder.class);
          internal_static_naothmessages_JointData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_naothmessages_JointData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_JointData_descriptor,
              new java.lang.String[] { "Position", "Stiffness", "Dp", "Ddp", },
              de.naoth.rc.messages.FrameworkRepresentations.JointData.class,
              de.naoth.rc.messages.FrameworkRepresentations.JointData.Builder.class);
          internal_static_naothmessages_SensorJointData_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_naothmessages_SensorJointData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_SensorJointData_descriptor,
              new java.lang.String[] { "JointData", "Temperature", "ElectricCurrent", },
              de.naoth.rc.messages.FrameworkRepresentations.SensorJointData.class,
              de.naoth.rc.messages.FrameworkRepresentations.SensorJointData.Builder.class);
          internal_static_naothmessages_UltraSoundReceiveData_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_naothmessages_UltraSoundReceiveData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_UltraSoundReceiveData_descriptor,
              new java.lang.String[] { "UltraSoundTimeStep", "Rawdata", "DataLeft", "DataRight", },
              de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData.class,
              de.naoth.rc.messages.FrameworkRepresentations.UltraSoundReceiveData.Builder.class);
          internal_static_naothmessages_FrameInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_naothmessages_FrameInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_FrameInfo_descriptor,
              new java.lang.String[] { "FrameNumber", "Time", },
              de.naoth.rc.messages.FrameworkRepresentations.FrameInfo.class,
              de.naoth.rc.messages.FrameworkRepresentations.FrameInfo.Builder.class);
          internal_static_naothmessages_FSRData_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_naothmessages_FSRData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_naothmessages_FSRData_descriptor,
              new java.lang.String[] { "Force", "Data", "Valid", },
              de.naoth.rc.messages.FrameworkRepresentations.FSRData.class,
              de.naoth.rc.messages.FrameworkRepresentations.FSRData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          de.naoth.rc.messages.CommonTypes.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
