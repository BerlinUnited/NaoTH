// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace naothmessages {
class CMDArgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CMDArg>
     _instance;
} _CMDArg_default_instance_;
class CMDDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CMD>
     _instance;
} _CMD_default_instance_;
class StopwatchItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StopwatchItem>
     _instance;
} _StopwatchItem_default_instance_;
class StopwatchesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Stopwatches>
     _instance;
} _Stopwatches_default_instance_;
class PlotItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlotItem>
     _instance;
} _PlotItem_default_instance_;
class PlotStroke2DDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlotStroke2D>
     _instance;
} _PlotStroke2D_default_instance_;
class PlotsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Plots>
     _instance;
} _Plots_default_instance_;
class XABSLSymbolDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<XABSLSymbol>
     _instance;
} _XABSLSymbol_default_instance_;
class XABSLActiveOptionSparseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<XABSLActiveOptionSparse>
     _instance;
} _XABSLActiveOptionSparse_default_instance_;
class XABSLActionSparseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<XABSLActionSparse>
     _instance;
} _XABSLActionSparse_default_instance_;
class SymbolValueList_DoubleSymbolDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolValueList_DoubleSymbol>
     _instance;
} _SymbolValueList_DoubleSymbol_default_instance_;
class SymbolValueList_BooleanSymbolDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolValueList_BooleanSymbol>
     _instance;
} _SymbolValueList_BooleanSymbol_default_instance_;
class SymbolValueList_EnumSymbolDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolValueList_EnumSymbol>
     _instance;
} _SymbolValueList_EnumSymbol_default_instance_;
class SymbolValueListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SymbolValueList>
     _instance;
} _SymbolValueList_default_instance_;
class BehaviorStateSparseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BehaviorStateSparse>
     _instance;
} _BehaviorStateSparse_default_instance_;
class BehaviorStateComplete_EnumType_ElementDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BehaviorStateComplete_EnumType_Element>
     _instance;
} _BehaviorStateComplete_EnumType_Element_default_instance_;
class BehaviorStateComplete_EnumTypeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BehaviorStateComplete_EnumType>
     _instance;
} _BehaviorStateComplete_EnumType_default_instance_;
class BehaviorStateComplete_Option_StateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BehaviorStateComplete_Option_State>
     _instance;
} _BehaviorStateComplete_Option_State_default_instance_;
class BehaviorStateComplete_OptionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BehaviorStateComplete_Option>
     _instance;
} _BehaviorStateComplete_Option_default_instance_;
class BehaviorStateComplete_AgentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BehaviorStateComplete_Agent>
     _instance;
} _BehaviorStateComplete_Agent_default_instance_;
class BehaviorStateCompleteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BehaviorStateComplete>
     _instance;
} _BehaviorStateComplete_default_instance_;
class ModuleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Module>
     _instance;
} _Module_default_instance_;
class ModuleListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ModuleList>
     _instance;
} _ModuleList_default_instance_;
class DebugRequest_ItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DebugRequest_Item>
     _instance;
} _DebugRequest_Item_default_instance_;
class DebugRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DebugRequest>
     _instance;
} _DebugRequest_default_instance_;
class FeatureKeyPointDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FeatureKeyPoint>
     _instance;
} _FeatureKeyPoint_default_instance_;
class FeatureDetectionResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FeatureDetectionResult>
     _instance;
} _FeatureDetectionResult_default_instance_;
class SingleDescriptorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SingleDescriptor>
     _instance;
} _SingleDescriptor_default_instance_;
class FeatureClassDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FeatureClass>
     _instance;
} _FeatureClass_default_instance_;
class FeatureTableDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FeatureTable>
     _instance;
} _FeatureTable_default_instance_;

namespace protobuf_Messages_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[30];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDArg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDArg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDArg, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDArg, bytes_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD, args_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopwatchItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopwatchItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopwatchItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopwatchItem, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stopwatches, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stopwatches, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stopwatches, stopwatches_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotItem, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotItem, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotItem, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotItem, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotItem, rotation_),
  5,
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotStroke2D, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotStroke2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotStroke2D, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlotStroke2D, points_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Plots, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Plots, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Plots, plots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Plots, plotstrokes_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLSymbol, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLSymbol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLSymbol, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLSymbol, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLSymbol, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLSymbol, decimalvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLSymbol, boolvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLSymbol, enumvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLSymbol, enumtypeid_),
  5,
  6,
  0,
  2,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, timeofexecution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, activestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, statetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, decimalparameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, booleanparameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, enumeratedparameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActiveOptionSparse, activesubactions_),
  3,
  0,
  2,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActionSparse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActionSparse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActionSparse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActionSparse, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XABSLActionSparse, option_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_DoubleSymbol, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_DoubleSymbol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_DoubleSymbol, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_DoubleSymbol, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_DoubleSymbol, value_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_BooleanSymbol, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_BooleanSymbol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_BooleanSymbol, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_BooleanSymbol, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_BooleanSymbol, value_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_EnumSymbol, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_EnumSymbol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_EnumSymbol, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_EnumSymbol, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_EnumSymbol, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList_EnumSymbol, typeid__),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList, decimal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList, boolean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SymbolValueList, enumerated_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateSparse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateSparse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateSparse, agent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateSparse, activerootactions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateSparse, inputsymbollist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateSparse, outputsymbollist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateSparse, framenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateSparse, errormessage_),
  0,
  ~0u,
  2,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_EnumType_Element, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_EnumType_Element, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_EnumType_Element, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_EnumType_Element, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_EnumType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_EnumType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_EnumType, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_EnumType, elements_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Option_State, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Option_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Option_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Option_State, target_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Option, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Option, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Option, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Option, states_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Option, parameters_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Agent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Agent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Agent, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete_Agent, rootoption_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete, enumerations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete, options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete, agents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete, inputsymbollist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete, outputsymbollist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BehaviorStateComplete, framenumber_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, usedrepresentations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, providedrepresentations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, active_),
  0,
  ~0u,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleList, modules_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugRequest_Item, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugRequest_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugRequest_Item, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugRequest_Item, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugRequest_Item, value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugRequest, requests_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureKeyPoint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureKeyPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureKeyPoint, pt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureKeyPoint, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureKeyPoint, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureKeyPoint, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureKeyPoint, octave_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureKeyPoint, class_id_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureDetectionResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureDetectionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureDetectionResult, grayscaleimage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureDetectionResult, keypoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureDetectionResult, descriptors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureDetectionResult, namesforkeypoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureDetectionResult, numberoffeatureelements_),
  0,
  ~0u,
  ~0u,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDescriptor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDescriptor, d_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureClass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureClass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureClass, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureClass, samples_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureClass, objectheight_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureTable, classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureTable, numberoffeatureelements_),
  ~0u,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(CMDArg)},
  { 9, 16, sizeof(CMD)},
  { 18, 25, sizeof(StopwatchItem)},
  { 27, 33, sizeof(Stopwatches)},
  { 34, 45, sizeof(PlotItem)},
  { 51, 58, sizeof(PlotStroke2D)},
  { 60, 67, sizeof(Plots)},
  { 69, 81, sizeof(XABSLSymbol)},
  { 88, 101, sizeof(XABSLActiveOptionSparse)},
  { 109, 117, sizeof(XABSLActionSparse)},
  { 120, 128, sizeof(SymbolValueList_DoubleSymbol)},
  { 131, 139, sizeof(SymbolValueList_BooleanSymbol)},
  { 142, 151, sizeof(SymbolValueList_EnumSymbol)},
  { 155, 163, sizeof(SymbolValueList)},
  { 166, 177, sizeof(BehaviorStateSparse)},
  { 183, 190, sizeof(BehaviorStateComplete_EnumType_Element)},
  { 192, 199, sizeof(BehaviorStateComplete_EnumType)},
  { 201, 208, sizeof(BehaviorStateComplete_Option_State)},
  { 210, 218, sizeof(BehaviorStateComplete_Option)},
  { 221, 228, sizeof(BehaviorStateComplete_Agent)},
  { 230, 241, sizeof(BehaviorStateComplete)},
  { 247, 256, sizeof(Module)},
  { 260, 266, sizeof(ModuleList)},
  { 267, 275, sizeof(DebugRequest_Item)},
  { 278, 284, sizeof(DebugRequest)},
  { 285, 296, sizeof(FeatureKeyPoint)},
  { 302, 312, sizeof(FeatureDetectionResult)},
  { 317, 323, sizeof(SingleDescriptor)},
  { 324, 332, sizeof(FeatureClass)},
  { 335, 342, sizeof(FeatureTable)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMDArg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StopwatchItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Stopwatches_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlotItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlotStroke2D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Plots_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_XABSLSymbol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_XABSLActiveOptionSparse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_XABSLActionSparse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolValueList_DoubleSymbol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolValueList_BooleanSymbol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolValueList_EnumSymbol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SymbolValueList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BehaviorStateSparse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BehaviorStateComplete_EnumType_Element_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BehaviorStateComplete_EnumType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BehaviorStateComplete_Option_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BehaviorStateComplete_Option_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BehaviorStateComplete_Agent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BehaviorStateComplete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Module_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModuleList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DebugRequest_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DebugRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FeatureKeyPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FeatureDetectionResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SingleDescriptor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FeatureClass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FeatureTable_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Messages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::naothmessages::protobuf_CommonTypes_2eproto::InitDefaults();
  _CMDArg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CMDArg_default_instance_);_CMD_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CMD_default_instance_);_StopwatchItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StopwatchItem_default_instance_);_Stopwatches_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Stopwatches_default_instance_);_PlotItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlotItem_default_instance_);_PlotStroke2D_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlotStroke2D_default_instance_);_Plots_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Plots_default_instance_);_XABSLSymbol_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_XABSLSymbol_default_instance_);_XABSLActiveOptionSparse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_XABSLActiveOptionSparse_default_instance_);_XABSLActionSparse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_XABSLActionSparse_default_instance_);_SymbolValueList_DoubleSymbol_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolValueList_DoubleSymbol_default_instance_);_SymbolValueList_BooleanSymbol_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolValueList_BooleanSymbol_default_instance_);_SymbolValueList_EnumSymbol_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolValueList_EnumSymbol_default_instance_);_SymbolValueList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SymbolValueList_default_instance_);_BehaviorStateSparse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BehaviorStateSparse_default_instance_);_BehaviorStateComplete_EnumType_Element_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BehaviorStateComplete_EnumType_Element_default_instance_);_BehaviorStateComplete_EnumType_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BehaviorStateComplete_EnumType_default_instance_);_BehaviorStateComplete_Option_State_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BehaviorStateComplete_Option_State_default_instance_);_BehaviorStateComplete_Option_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BehaviorStateComplete_Option_default_instance_);_BehaviorStateComplete_Agent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BehaviorStateComplete_Agent_default_instance_);_BehaviorStateComplete_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BehaviorStateComplete_default_instance_);_Module_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Module_default_instance_);_ModuleList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ModuleList_default_instance_);_DebugRequest_Item_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DebugRequest_Item_default_instance_);_DebugRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DebugRequest_default_instance_);_FeatureKeyPoint_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FeatureKeyPoint_default_instance_);_FeatureDetectionResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FeatureDetectionResult_default_instance_);_SingleDescriptor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SingleDescriptor_default_instance_);_FeatureClass_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FeatureClass_default_instance_);_FeatureTable_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FeatureTable_default_instance_);_XABSLActionSparse_default_instance_._instance.get_mutable()->symbol_ = const_cast< ::naothmessages::XABSLSymbol*>(
      ::naothmessages::XABSLSymbol::internal_default_instance());
  _XABSLActionSparse_default_instance_._instance.get_mutable()->option_ = const_cast< ::naothmessages::XABSLActiveOptionSparse*>(
      ::naothmessages::XABSLActiveOptionSparse::internal_default_instance());
  _BehaviorStateSparse_default_instance_._instance.get_mutable()->inputsymbollist_ = const_cast< ::naothmessages::SymbolValueList*>(
      ::naothmessages::SymbolValueList::internal_default_instance());
  _BehaviorStateSparse_default_instance_._instance.get_mutable()->outputsymbollist_ = const_cast< ::naothmessages::SymbolValueList*>(
      ::naothmessages::SymbolValueList::internal_default_instance());
  _BehaviorStateComplete_default_instance_._instance.get_mutable()->inputsymbollist_ = const_cast< ::naothmessages::SymbolValueList*>(
      ::naothmessages::SymbolValueList::internal_default_instance());
  _BehaviorStateComplete_default_instance_._instance.get_mutable()->outputsymbollist_ = const_cast< ::naothmessages::SymbolValueList*>(
      ::naothmessages::SymbolValueList::internal_default_instance());
  _FeatureKeyPoint_default_instance_._instance.get_mutable()->pt_ = const_cast< ::naothmessages::FloatVector2*>(
      ::naothmessages::FloatVector2::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016Messages.proto\022\rnaothmessages\032\021CommonT"
      "ypes.proto\"%\n\006CMDArg\022\014\n\004name\030\001 \002(\t\022\r\n\005by"
      "tes\030\003 \001(\014\"8\n\003CMD\022\014\n\004name\030\001 \002(\t\022#\n\004args\030\002"
      " \003(\0132\025.naothmessages.CMDArg\"+\n\rStopwatch"
      "Item\022\014\n\004name\030\001 \002(\t\022\014\n\004time\030\002 \002(\005\"@\n\013Stop"
      "watches\0221\n\013stopwatches\030\001 \003(\0132\034.naothmess"
      "ages.StopwatchItem\"\262\001\n\010PlotItem\022.\n\004type\030"
      "\001 \002(\0162 .naothmessages.PlotItem.PlotType\022"
      "\014\n\004name\030\002 \002(\t\022\r\n\005value\030\003 \001(\001\022\t\n\001x\030\004 \001(\001\022"
      "\t\n\001y\030\005 \001(\001\022\020\n\010rotation\030\006 \001(\001\"1\n\010PlotType"
      "\022\013\n\007Default\020\001\022\n\n\006Plot2D\020\002\022\014\n\010Origin2D\020\003\""
      "J\n\014PlotStroke2D\022\014\n\004name\030\002 \002(\t\022,\n\006points\030"
      "\001 \003(\0132\034.naothmessages.DoubleVector2\"a\n\005P"
      "lots\022&\n\005plots\030\001 \003(\0132\027.naothmessages.Plot"
      "Item\0220\n\013plotstrokes\030\002 \003(\0132\033.naothmessage"
      "s.PlotStroke2D\"\370\001\n\013XABSLSymbol\022\016\n\002id\030\001 \002"
      "(\005:\002-1\022<\n\004type\030\002 \002(\0162%.naothmessages.XAB"
      "SLSymbol.SymbolType:\007Unknown\022\014\n\004name\030\003 \001"
      "(\t\022\024\n\014decimalValue\030\013 \001(\001\022\021\n\tboolValue\030\014 "
      "\001(\010\022\021\n\tenumValue\030\r \001(\005\022\022\n\nenumTypeId\030\016 \001"
      "(\005\"=\n\nSymbolType\022\013\n\007Decimal\020\000\022\013\n\007Boolean"
      "\020\001\022\010\n\004Enum\020\002\022\013\n\007Unknown\020\003\"\375\001\n\027XABSLActiv"
      "eOptionSparse\022\016\n\002id\030\001 \002(\005:\002-1\022\032\n\017timeOfE"
      "xecution\030\003 \001(\003:\0010\022\023\n\013activeState\030\004 \001(\005\022\021"
      "\n\tstateTime\030\005 \001(\003\022\031\n\021decimalParameters\030\006"
      " \003(\001\022\031\n\021booleanParameters\030\007 \003(\010\022\034\n\024enume"
      "ratedParameters\030\010 \003(\005\022:\n\020activeSubAction"
      "s\030\t \003(\0132 .naothmessages.XABSLActionSpars"
      "e\"\213\002\n\021XABSLActionSparse\022B\n\004type\030\002 \002(\0162+."
      "naothmessages.XABSLActionSparse.ActionTy"
      "pe:\007Unknown\022*\n\006symbol\030\003 \001(\0132\032.naothmessa"
      "ges.XABSLSymbol\0226\n\006option\030\004 \001(\0132&.naothm"
      "essages.XABSLActiveOptionSparse\"N\n\nActio"
      "nType\022\n\n\006Option\020\000\022\021\n\rBasicBehavior\020\001\022\024\n\020"
      "SymbolAssignment\020\002\022\013\n\007Unknown\020\003\"\223\003\n\017Symb"
      "olValueList\022<\n\007decimal\030\001 \003(\0132+.naothmess"
      "ages.SymbolValueList.DoubleSymbol\022=\n\007boo"
      "lean\030\002 \003(\0132,.naothmessages.SymbolValueLi"
      "st.BooleanSymbol\022=\n\nenumerated\030\003 \003(\0132).n"
      "aothmessages.SymbolValueList.EnumSymbol\032"
      ";\n\014DoubleSymbol\022\016\n\002id\030\001 \002(\005:\002-1\022\014\n\004name\030"
      "\002 \001(\t\022\r\n\005value\030\003 \001(\001\032<\n\rBooleanSymbol\022\016\n"
      "\002id\030\001 \002(\005:\002-1\022\014\n\004name\030\002 \001(\t\022\r\n\005value\030\003 \001"
      "(\010\032I\n\nEnumSymbol\022\016\n\002id\030\001 \002(\005:\002-1\022\014\n\004name"
      "\030\002 \001(\t\022\r\n\005value\030\r \001(\005\022\016\n\006typeId\030\016 \001(\005\"\377\001"
      "\n\023BehaviorStateSparse\022\r\n\005agent\030\001 \001(\t\022;\n\021"
      "activeRootActions\030\002 \003(\0132 .naothmessages."
      "XABSLActionSparse\0227\n\017inputSymbolList\030\n \001"
      "(\0132\036.naothmessages.SymbolValueList\0228\n\020ou"
      "tputSymbolList\030\013 \001(\0132\036.naothmessages.Sym"
      "bolValueList\022\023\n\013frameNumber\030\005 \001(\r\022\024\n\014err"
      "orMessage\030\006 \001(\t\"\310\005\n\025BehaviorStateComplet"
      "e\022C\n\014enumerations\030\n \003(\0132-.naothmessages."
      "BehaviorStateComplete.EnumType\022<\n\007option"
      "s\030\013 \003(\0132+.naothmessages.BehaviorStateCom"
      "plete.Option\022:\n\006agents\030\014 \003(\0132*.naothmess"
      "ages.BehaviorStateComplete.Agent\0227\n\017inpu"
      "tSymbolList\030\r \001(\0132\036.naothmessages.Symbol"
      "ValueList\0228\n\020outputSymbolList\030\016 \001(\0132\036.na"
      "othmessages.SymbolValueList\022\023\n\013frameNumb"
      "er\030\017 \001(\r\032\211\001\n\010EnumType\022\014\n\004name\030\001 \002(\t\022G\n\010e"
      "lements\030\002 \003(\01325.naothmessages.BehaviorSt"
      "ateComplete.EnumType.Element\032&\n\007Element\022"
      "\r\n\005value\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\032\260\001\n\006Option\022"
      "\014\n\004name\030\001 \002(\t\022A\n\006states\030\003 \003(\01321.naothmes"
      "sages.BehaviorStateComplete.Option.State"
      "\022.\n\nparameters\030\002 \003(\0132\032.naothmessages.XAB"
      "SLSymbol\032%\n\005State\022\014\n\004name\030\001 \002(\t\022\016\n\006targe"
      "t\030\002 \001(\010\032)\n\005Agent\022\014\n\004name\030\001 \002(\t\022\022\n\nrootOp"
      "tion\030\002 \002(\t\"k\n\006Module\022\014\n\004name\030\001 \002(\t\022\033\n\023us"
      "edRepresentations\030\002 \003(\t\022\037\n\027providedRepre"
      "sentations\030\003 \003(\t\022\025\n\006active\030\004 \001(\010:\005false\""
      "4\n\nModuleList\022&\n\007modules\030\001 \003(\0132\025.naothme"
      "ssages.Module\"\203\001\n\014DebugRequest\0222\n\010reques"
      "ts\030\001 \003(\0132 .naothmessages.DebugRequest.It"
      "em\032\?\n\004Item\022\014\n\004name\030\001 \002(\t\022\023\n\013description\030"
      "\002 \001(\t\022\024\n\005value\030\004 \002(\010:\005false\"\213\001\n\017FeatureK"
      "eyPoint\022\'\n\002pt\030\001 \002(\0132\033.naothmessages.Floa"
      "tVector2\022\014\n\004size\030\002 \002(\002\022\r\n\005angle\030\003 \002(\002\022\020\n"
      "\010response\030\004 \002(\002\022\016\n\006octave\030\005 \002(\005\022\020\n\010class"
      "_id\030\006 \002(\005\"\331\001\n\026FeatureDetectionResult\022\026\n\016"
      "grayScaleImage\030\001 \002(\014\0221\n\tkeyPoints\030\002 \003(\0132"
      "\036.naothmessages.FeatureKeyPoint\0224\n\013descr"
      "iptors\030\003 \003(\0132\037.naothmessages.SingleDescr"
      "iptor\022\031\n\021namesForKeyPoints\030\004 \003(\t\022#\n\027numb"
      "erOfFeatureElements\030\005 \001(\005:\00264\"\035\n\020SingleD"
      "escriptor\022\t\n\001d\030\001 \003(\002\"d\n\014FeatureClass\022\014\n\004"
      "name\030\001 \002(\t\0220\n\007samples\030\002 \003(\0132\037.naothmessa"
      "ges.SingleDescriptor\022\024\n\014objectHeight\030\003 \001"
      "(\001\"a\n\014FeatureTable\022,\n\007classes\030\001 \003(\0132\033.na"
      "othmessages.FeatureClass\022#\n\027numberOfFeat"
      "ureElements\030\002 \001(\005:\00264B\033\n\031de.naoth.rc.cor"
      "e.messages"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Messages.proto", &protobuf_RegisterTypes);
  ::naothmessages::protobuf_CommonTypes_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Messages_2eproto

const ::google::protobuf::EnumDescriptor* PlotItem_PlotType_descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_enum_descriptors[0];
}
bool PlotItem_PlotType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlotItem_PlotType PlotItem::Default;
const PlotItem_PlotType PlotItem::Plot2D;
const PlotItem_PlotType PlotItem::Origin2D;
const PlotItem_PlotType PlotItem::PlotType_MIN;
const PlotItem_PlotType PlotItem::PlotType_MAX;
const int PlotItem::PlotType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* XABSLSymbol_SymbolType_descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_enum_descriptors[1];
}
bool XABSLSymbol_SymbolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const XABSLSymbol_SymbolType XABSLSymbol::Decimal;
const XABSLSymbol_SymbolType XABSLSymbol::Boolean;
const XABSLSymbol_SymbolType XABSLSymbol::Enum;
const XABSLSymbol_SymbolType XABSLSymbol::Unknown;
const XABSLSymbol_SymbolType XABSLSymbol::SymbolType_MIN;
const XABSLSymbol_SymbolType XABSLSymbol::SymbolType_MAX;
const int XABSLSymbol::SymbolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* XABSLActionSparse_ActionType_descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_enum_descriptors[2];
}
bool XABSLActionSparse_ActionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const XABSLActionSparse_ActionType XABSLActionSparse::Option;
const XABSLActionSparse_ActionType XABSLActionSparse::BasicBehavior;
const XABSLActionSparse_ActionType XABSLActionSparse::SymbolAssignment;
const XABSLActionSparse_ActionType XABSLActionSparse::Unknown;
const XABSLActionSparse_ActionType XABSLActionSparse::ActionType_MIN;
const XABSLActionSparse_ActionType XABSLActionSparse::ActionType_MAX;
const int XABSLActionSparse::ActionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDArg::kNameFieldNumber;
const int CMDArg::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDArg::CMDArg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.CMDArg)
}
CMDArg::CMDArg(const CMDArg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes()) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  // @@protoc_insertion_point(copy_constructor:naothmessages.CMDArg)
}

void CMDArg::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDArg::~CMDArg() {
  // @@protoc_insertion_point(destructor:naothmessages.CMDArg)
  SharedDtor();
}

void CMDArg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMDArg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDArg::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMDArg& CMDArg::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMDArg* CMDArg::New(::google::protobuf::Arena* arena) const {
  CMDArg* n = new CMDArg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDArg::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.CMDArg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!bytes_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bytes_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMDArg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.CMDArg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.CMDArg.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.CMDArg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.CMDArg)
  return false;
#undef DO_
}

void CMDArg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.CMDArg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.CMDArg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes bytes = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.CMDArg)
}

::google::protobuf::uint8* CMDArg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.CMDArg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.CMDArg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes bytes = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.CMDArg)
  return target;
}

size_t CMDArg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.CMDArg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // optional bytes bytes = 3;
  if (has_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDArg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.CMDArg)
  GOOGLE_DCHECK_NE(&from, this);
  const CMDArg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDArg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.CMDArg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.CMDArg)
    MergeFrom(*source);
  }
}

void CMDArg::MergeFrom(const CMDArg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.CMDArg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bytes();
      bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
    }
  }
}

void CMDArg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.CMDArg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDArg::CopyFrom(const CMDArg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.CMDArg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDArg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CMDArg::Swap(CMDArg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDArg::InternalSwap(CMDArg* other) {
  using std::swap;
  name_.Swap(&other->name_);
  bytes_.Swap(&other->bytes_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDArg::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDArg

// required string name = 1;
bool CMDArg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMDArg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMDArg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMDArg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CMDArg::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.CMDArg.name)
  return name_.GetNoArena();
}
void CMDArg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.CMDArg.name)
}
#if LANG_CXX11
void CMDArg::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.CMDArg.name)
}
#endif
void CMDArg::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.CMDArg.name)
}
void CMDArg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.CMDArg.name)
}
::std::string* CMDArg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.CMDArg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMDArg::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.CMDArg.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMDArg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.CMDArg.name)
}

// optional bytes bytes = 3;
bool CMDArg::has_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMDArg::set_has_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
void CMDArg::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMDArg::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes();
}
const ::std::string& CMDArg::bytes() const {
  // @@protoc_insertion_point(field_get:naothmessages.CMDArg.bytes)
  return bytes_.GetNoArena();
}
void CMDArg::set_bytes(const ::std::string& value) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.CMDArg.bytes)
}
#if LANG_CXX11
void CMDArg::set_bytes(::std::string&& value) {
  set_has_bytes();
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.CMDArg.bytes)
}
#endif
void CMDArg::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.CMDArg.bytes)
}
void CMDArg::set_bytes(const void* value, size_t size) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.CMDArg.bytes)
}
::std::string* CMDArg::mutable_bytes() {
  set_has_bytes();
  // @@protoc_insertion_point(field_mutable:naothmessages.CMDArg.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMDArg::release_bytes() {
  // @@protoc_insertion_point(field_release:naothmessages.CMDArg.bytes)
  clear_has_bytes();
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMDArg::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    set_has_bytes();
  } else {
    clear_has_bytes();
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.CMDArg.bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD::kNameFieldNumber;
const int CMD::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD::CMD()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.CMD)
}
CMD::CMD(const CMD& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      args_(from.args_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:naothmessages.CMD)
}

void CMD::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMD::~CMD() {
  // @@protoc_insertion_point(destructor:naothmessages.CMD)
  SharedDtor();
}

void CMD::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD& CMD::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD* CMD::New(::google::protobuf::Arena* arena) const {
  CMD* n = new CMD;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.CMD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.CMD)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.CMD.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.CMDArg args = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.CMD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.CMD)
  return false;
#undef DO_
}

void CMD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.CMD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.CMD.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .naothmessages.CMDArg args = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->args(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.CMD)
}

::google::protobuf::uint8* CMD::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.CMD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.CMD.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .naothmessages.CMDArg args = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->args(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.CMD)
  return target;
}

size_t CMD::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.CMD)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .naothmessages.CMDArg args = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->args_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->args(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.CMD)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.CMD)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.CMD)
    MergeFrom(*source);
  }
}

void CMD::MergeFrom(const CMD& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.CMD)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CMD::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.CMD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD::CopyFrom(const CMD& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.CMD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->args())) return false;
  return true;
}

void CMD::Swap(CMD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD::InternalSwap(CMD* other) {
  using std::swap;
  args_.InternalSwap(&other->args_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD

// required string name = 1;
bool CMD::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMD::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMD::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMD::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CMD::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.CMD.name)
  return name_.GetNoArena();
}
void CMD::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.CMD.name)
}
#if LANG_CXX11
void CMD::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.CMD.name)
}
#endif
void CMD::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.CMD.name)
}
void CMD::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.CMD.name)
}
::std::string* CMD::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.CMD.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.CMD.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.CMD.name)
}

// repeated .naothmessages.CMDArg args = 2;
int CMD::args_size() const {
  return args_.size();
}
void CMD::clear_args() {
  args_.Clear();
}
const ::naothmessages::CMDArg& CMD::args(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.CMD.args)
  return args_.Get(index);
}
::naothmessages::CMDArg* CMD::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.CMD.args)
  return args_.Mutable(index);
}
::naothmessages::CMDArg* CMD::add_args() {
  // @@protoc_insertion_point(field_add:naothmessages.CMD.args)
  return args_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::CMDArg >*
CMD::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.CMD.args)
  return &args_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::CMDArg >&
CMD::args() const {
  // @@protoc_insertion_point(field_list:naothmessages.CMD.args)
  return args_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopwatchItem::kNameFieldNumber;
const int StopwatchItem::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopwatchItem::StopwatchItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.StopwatchItem)
}
StopwatchItem::StopwatchItem(const StopwatchItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.StopwatchItem)
}

void StopwatchItem::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
}

StopwatchItem::~StopwatchItem() {
  // @@protoc_insertion_point(destructor:naothmessages.StopwatchItem)
  SharedDtor();
}

void StopwatchItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopwatchItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopwatchItem::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopwatchItem& StopwatchItem::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

StopwatchItem* StopwatchItem::New(::google::protobuf::Arena* arena) const {
  StopwatchItem* n = new StopwatchItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopwatchItem::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.StopwatchItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  time_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StopwatchItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.StopwatchItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.StopwatchItem.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.StopwatchItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.StopwatchItem)
  return false;
#undef DO_
}

void StopwatchItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.StopwatchItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.StopwatchItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.StopwatchItem)
}

::google::protobuf::uint8* StopwatchItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.StopwatchItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.StopwatchItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.StopwatchItem)
  return target;
}

size_t StopwatchItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:naothmessages.StopwatchItem)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_time()) {
    // required int32 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  return total_size;
}
size_t StopwatchItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.StopwatchItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopwatchItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.StopwatchItem)
  GOOGLE_DCHECK_NE(&from, this);
  const StopwatchItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopwatchItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.StopwatchItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.StopwatchItem)
    MergeFrom(*source);
  }
}

void StopwatchItem::MergeFrom(const StopwatchItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.StopwatchItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StopwatchItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.StopwatchItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopwatchItem::CopyFrom(const StopwatchItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.StopwatchItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopwatchItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void StopwatchItem::Swap(StopwatchItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopwatchItem::InternalSwap(StopwatchItem* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopwatchItem::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StopwatchItem

// required string name = 1;
bool StopwatchItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StopwatchItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void StopwatchItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void StopwatchItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& StopwatchItem::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.StopwatchItem.name)
  return name_.GetNoArena();
}
void StopwatchItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.StopwatchItem.name)
}
#if LANG_CXX11
void StopwatchItem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.StopwatchItem.name)
}
#endif
void StopwatchItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.StopwatchItem.name)
}
void StopwatchItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.StopwatchItem.name)
}
::std::string* StopwatchItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.StopwatchItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StopwatchItem::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.StopwatchItem.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StopwatchItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.StopwatchItem.name)
}

// required int32 time = 2;
bool StopwatchItem::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StopwatchItem::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void StopwatchItem::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void StopwatchItem::clear_time() {
  time_ = 0;
  clear_has_time();
}
::google::protobuf::int32 StopwatchItem::time() const {
  // @@protoc_insertion_point(field_get:naothmessages.StopwatchItem.time)
  return time_;
}
void StopwatchItem::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.StopwatchItem.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stopwatches::kStopwatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stopwatches::Stopwatches()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.Stopwatches)
}
Stopwatches::Stopwatches(const Stopwatches& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stopwatches_(from.stopwatches_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:naothmessages.Stopwatches)
}

void Stopwatches::SharedCtor() {
  _cached_size_ = 0;
}

Stopwatches::~Stopwatches() {
  // @@protoc_insertion_point(destructor:naothmessages.Stopwatches)
  SharedDtor();
}

void Stopwatches::SharedDtor() {
}

void Stopwatches::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stopwatches::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stopwatches& Stopwatches::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

Stopwatches* Stopwatches::New(::google::protobuf::Arena* arena) const {
  Stopwatches* n = new Stopwatches;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stopwatches::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.Stopwatches)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stopwatches_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Stopwatches::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.Stopwatches)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .naothmessages.StopwatchItem stopwatches = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stopwatches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.Stopwatches)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.Stopwatches)
  return false;
#undef DO_
}

void Stopwatches::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.Stopwatches)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.StopwatchItem stopwatches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stopwatches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stopwatches(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.Stopwatches)
}

::google::protobuf::uint8* Stopwatches::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.Stopwatches)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.StopwatchItem stopwatches = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stopwatches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->stopwatches(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.Stopwatches)
  return target;
}

size_t Stopwatches::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.Stopwatches)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .naothmessages.StopwatchItem stopwatches = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stopwatches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stopwatches(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stopwatches::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.Stopwatches)
  GOOGLE_DCHECK_NE(&from, this);
  const Stopwatches* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stopwatches>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.Stopwatches)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.Stopwatches)
    MergeFrom(*source);
  }
}

void Stopwatches::MergeFrom(const Stopwatches& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.Stopwatches)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stopwatches_.MergeFrom(from.stopwatches_);
}

void Stopwatches::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.Stopwatches)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stopwatches::CopyFrom(const Stopwatches& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.Stopwatches)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stopwatches::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->stopwatches())) return false;
  return true;
}

void Stopwatches::Swap(Stopwatches* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stopwatches::InternalSwap(Stopwatches* other) {
  using std::swap;
  stopwatches_.InternalSwap(&other->stopwatches_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stopwatches::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Stopwatches

// repeated .naothmessages.StopwatchItem stopwatches = 1;
int Stopwatches::stopwatches_size() const {
  return stopwatches_.size();
}
void Stopwatches::clear_stopwatches() {
  stopwatches_.Clear();
}
const ::naothmessages::StopwatchItem& Stopwatches::stopwatches(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Stopwatches.stopwatches)
  return stopwatches_.Get(index);
}
::naothmessages::StopwatchItem* Stopwatches::mutable_stopwatches(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Stopwatches.stopwatches)
  return stopwatches_.Mutable(index);
}
::naothmessages::StopwatchItem* Stopwatches::add_stopwatches() {
  // @@protoc_insertion_point(field_add:naothmessages.Stopwatches.stopwatches)
  return stopwatches_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::StopwatchItem >*
Stopwatches::mutable_stopwatches() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Stopwatches.stopwatches)
  return &stopwatches_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::StopwatchItem >&
Stopwatches::stopwatches() const {
  // @@protoc_insertion_point(field_list:naothmessages.Stopwatches.stopwatches)
  return stopwatches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlotItem::kTypeFieldNumber;
const int PlotItem::kNameFieldNumber;
const int PlotItem::kValueFieldNumber;
const int PlotItem::kXFieldNumber;
const int PlotItem::kYFieldNumber;
const int PlotItem::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlotItem::PlotItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.PlotItem)
}
PlotItem::PlotItem(const PlotItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&value_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:naothmessages.PlotItem)
}

void PlotItem::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&value_)) + sizeof(rotation_));
  type_ = 1;
}

PlotItem::~PlotItem() {
  // @@protoc_insertion_point(destructor:naothmessages.PlotItem)
  SharedDtor();
}

void PlotItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlotItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlotItem::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlotItem& PlotItem::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlotItem* PlotItem::New(::google::protobuf::Arena* arena) const {
  PlotItem* n = new PlotItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlotItem::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.PlotItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 62u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rotation_) -
        reinterpret_cast<char*>(&value_)) + sizeof(rotation_));
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlotItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.PlotItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .naothmessages.PlotItem.PlotType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::naothmessages::PlotItem_PlotType_IsValid(value)) {
            set_type(static_cast< ::naothmessages::PlotItem_PlotType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.PlotItem.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double rotation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_rotation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.PlotItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.PlotItem)
  return false;
#undef DO_
}

void PlotItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.PlotItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .naothmessages.PlotItem.PlotType type = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.PlotItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional double value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->value(), output);
  }

  // optional double x = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->x(), output);
  }

  // optional double y = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->y(), output);
  }

  // optional double rotation = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->rotation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.PlotItem)
}

::google::protobuf::uint8* PlotItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.PlotItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .naothmessages.PlotItem.PlotType type = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.PlotItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional double value = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->value(), target);
  }

  // optional double x = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->x(), target);
  }

  // optional double y = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->y(), target);
  }

  // optional double rotation = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->rotation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.PlotItem)
  return target;
}

size_t PlotItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:naothmessages.PlotItem)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required .naothmessages.PlotItem.PlotType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t PlotItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.PlotItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000021) ^ 0x00000021) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .naothmessages.PlotItem.PlotType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 30u) {
    // optional double value = 3;
    if (has_value()) {
      total_size += 1 + 8;
    }

    // optional double x = 4;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // optional double y = 5;
    if (has_y()) {
      total_size += 1 + 8;
    }

    // optional double rotation = 6;
    if (has_rotation()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlotItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.PlotItem)
  GOOGLE_DCHECK_NE(&from, this);
  const PlotItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlotItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.PlotItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.PlotItem)
    MergeFrom(*source);
  }
}

void PlotItem::MergeFrom(const PlotItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.PlotItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000010u) {
      rotation_ = from.rotation_;
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlotItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.PlotItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlotItem::CopyFrom(const PlotItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.PlotItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlotItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;
  return true;
}

void PlotItem::Swap(PlotItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlotItem::InternalSwap(PlotItem* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(rotation_, other->rotation_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlotItem::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlotItem

// required .naothmessages.PlotItem.PlotType type = 1;
bool PlotItem::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PlotItem::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
void PlotItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void PlotItem::clear_type() {
  type_ = 1;
  clear_has_type();
}
::naothmessages::PlotItem_PlotType PlotItem::type() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.type)
  return static_cast< ::naothmessages::PlotItem_PlotType >(type_);
}
void PlotItem::set_type(::naothmessages::PlotItem_PlotType value) {
  assert(::naothmessages::PlotItem_PlotType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.type)
}

// required string name = 2;
bool PlotItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlotItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void PlotItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlotItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& PlotItem::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.name)
  return name_.GetNoArena();
}
void PlotItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.name)
}
#if LANG_CXX11
void PlotItem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.PlotItem.name)
}
#endif
void PlotItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.PlotItem.name)
}
void PlotItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.PlotItem.name)
}
::std::string* PlotItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.PlotItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlotItem::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.PlotItem.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlotItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.PlotItem.name)
}

// optional double value = 3;
bool PlotItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PlotItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void PlotItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void PlotItem::clear_value() {
  value_ = 0;
  clear_has_value();
}
double PlotItem::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.value)
  return value_;
}
void PlotItem::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.value)
}

// optional double x = 4;
bool PlotItem::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PlotItem::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
void PlotItem::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void PlotItem::clear_x() {
  x_ = 0;
  clear_has_x();
}
double PlotItem::x() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.x)
  return x_;
}
void PlotItem::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.x)
}

// optional double y = 5;
bool PlotItem::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PlotItem::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
void PlotItem::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void PlotItem::clear_y() {
  y_ = 0;
  clear_has_y();
}
double PlotItem::y() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.y)
  return y_;
}
void PlotItem::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.y)
}

// optional double rotation = 6;
bool PlotItem::has_rotation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PlotItem::set_has_rotation() {
  _has_bits_[0] |= 0x00000010u;
}
void PlotItem::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000010u;
}
void PlotItem::clear_rotation() {
  rotation_ = 0;
  clear_has_rotation();
}
double PlotItem::rotation() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.rotation)
  return rotation_;
}
void PlotItem::set_rotation(double value) {
  set_has_rotation();
  rotation_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.rotation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlotStroke2D::kNameFieldNumber;
const int PlotStroke2D::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlotStroke2D::PlotStroke2D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.PlotStroke2D)
}
PlotStroke2D::PlotStroke2D(const PlotStroke2D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:naothmessages.PlotStroke2D)
}

void PlotStroke2D::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlotStroke2D::~PlotStroke2D() {
  // @@protoc_insertion_point(destructor:naothmessages.PlotStroke2D)
  SharedDtor();
}

void PlotStroke2D::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlotStroke2D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlotStroke2D::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlotStroke2D& PlotStroke2D::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlotStroke2D* PlotStroke2D::New(::google::protobuf::Arena* arena) const {
  PlotStroke2D* n = new PlotStroke2D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlotStroke2D::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.PlotStroke2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlotStroke2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.PlotStroke2D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .naothmessages.DoubleVector2 points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.PlotStroke2D.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.PlotStroke2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.PlotStroke2D)
  return false;
#undef DO_
}

void PlotStroke2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.PlotStroke2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.DoubleVector2 points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.PlotStroke2D.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.PlotStroke2D)
}

::google::protobuf::uint8* PlotStroke2D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.PlotStroke2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.DoubleVector2 points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.PlotStroke2D.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.PlotStroke2D)
  return target;
}

size_t PlotStroke2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.PlotStroke2D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 2;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .naothmessages.DoubleVector2 points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlotStroke2D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.PlotStroke2D)
  GOOGLE_DCHECK_NE(&from, this);
  const PlotStroke2D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlotStroke2D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.PlotStroke2D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.PlotStroke2D)
    MergeFrom(*source);
  }
}

void PlotStroke2D::MergeFrom(const PlotStroke2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.PlotStroke2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PlotStroke2D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.PlotStroke2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlotStroke2D::CopyFrom(const PlotStroke2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.PlotStroke2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlotStroke2D::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->points())) return false;
  return true;
}

void PlotStroke2D::Swap(PlotStroke2D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlotStroke2D::InternalSwap(PlotStroke2D* other) {
  using std::swap;
  points_.InternalSwap(&other->points_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlotStroke2D::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlotStroke2D

// required string name = 2;
bool PlotStroke2D::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlotStroke2D::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void PlotStroke2D::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlotStroke2D::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& PlotStroke2D::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotStroke2D.name)
  return name_.GetNoArena();
}
void PlotStroke2D::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.PlotStroke2D.name)
}
#if LANG_CXX11
void PlotStroke2D::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.PlotStroke2D.name)
}
#endif
void PlotStroke2D::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.PlotStroke2D.name)
}
void PlotStroke2D::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.PlotStroke2D.name)
}
::std::string* PlotStroke2D::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.PlotStroke2D.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlotStroke2D::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.PlotStroke2D.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlotStroke2D::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.PlotStroke2D.name)
}

// repeated .naothmessages.DoubleVector2 points = 1;
int PlotStroke2D::points_size() const {
  return points_.size();
}
void PlotStroke2D::clear_points() {
  points_.Clear();
}
const ::naothmessages::DoubleVector2& PlotStroke2D::points(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotStroke2D.points)
  return points_.Get(index);
}
::naothmessages::DoubleVector2* PlotStroke2D::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.PlotStroke2D.points)
  return points_.Mutable(index);
}
::naothmessages::DoubleVector2* PlotStroke2D::add_points() {
  // @@protoc_insertion_point(field_add:naothmessages.PlotStroke2D.points)
  return points_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector2 >*
PlotStroke2D::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.PlotStroke2D.points)
  return &points_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector2 >&
PlotStroke2D::points() const {
  // @@protoc_insertion_point(field_list:naothmessages.PlotStroke2D.points)
  return points_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Plots::kPlotsFieldNumber;
const int Plots::kPlotstrokesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Plots::Plots()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.Plots)
}
Plots::Plots(const Plots& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      plots_(from.plots_),
      plotstrokes_(from.plotstrokes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:naothmessages.Plots)
}

void Plots::SharedCtor() {
  _cached_size_ = 0;
}

Plots::~Plots() {
  // @@protoc_insertion_point(destructor:naothmessages.Plots)
  SharedDtor();
}

void Plots::SharedDtor() {
}

void Plots::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Plots::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Plots& Plots::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

Plots* Plots::New(::google::protobuf::Arena* arena) const {
  Plots* n = new Plots;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Plots::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.Plots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plots_.Clear();
  plotstrokes_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Plots::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.Plots)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .naothmessages.PlotItem plots = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_plots()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.PlotStroke2D plotstrokes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_plotstrokes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.Plots)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.Plots)
  return false;
#undef DO_
}

void Plots::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.Plots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.PlotItem plots = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plots_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->plots(static_cast<int>(i)), output);
  }

  // repeated .naothmessages.PlotStroke2D plotstrokes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plotstrokes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->plotstrokes(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.Plots)
}

::google::protobuf::uint8* Plots::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.Plots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.PlotItem plots = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plots_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->plots(static_cast<int>(i)), deterministic, target);
  }

  // repeated .naothmessages.PlotStroke2D plotstrokes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plotstrokes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->plotstrokes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.Plots)
  return target;
}

size_t Plots::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.Plots)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .naothmessages.PlotItem plots = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->plots_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->plots(static_cast<int>(i)));
    }
  }

  // repeated .naothmessages.PlotStroke2D plotstrokes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->plotstrokes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->plotstrokes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Plots::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.Plots)
  GOOGLE_DCHECK_NE(&from, this);
  const Plots* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Plots>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.Plots)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.Plots)
    MergeFrom(*source);
  }
}

void Plots::MergeFrom(const Plots& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.Plots)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  plots_.MergeFrom(from.plots_);
  plotstrokes_.MergeFrom(from.plotstrokes_);
}

void Plots::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.Plots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Plots::CopyFrom(const Plots& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.Plots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Plots::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->plots())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->plotstrokes())) return false;
  return true;
}

void Plots::Swap(Plots* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Plots::InternalSwap(Plots* other) {
  using std::swap;
  plots_.InternalSwap(&other->plots_);
  plotstrokes_.InternalSwap(&other->plotstrokes_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Plots::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Plots

// repeated .naothmessages.PlotItem plots = 1;
int Plots::plots_size() const {
  return plots_.size();
}
void Plots::clear_plots() {
  plots_.Clear();
}
const ::naothmessages::PlotItem& Plots::plots(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Plots.plots)
  return plots_.Get(index);
}
::naothmessages::PlotItem* Plots::mutable_plots(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Plots.plots)
  return plots_.Mutable(index);
}
::naothmessages::PlotItem* Plots::add_plots() {
  // @@protoc_insertion_point(field_add:naothmessages.Plots.plots)
  return plots_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::PlotItem >*
Plots::mutable_plots() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Plots.plots)
  return &plots_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotItem >&
Plots::plots() const {
  // @@protoc_insertion_point(field_list:naothmessages.Plots.plots)
  return plots_;
}

// repeated .naothmessages.PlotStroke2D plotstrokes = 2;
int Plots::plotstrokes_size() const {
  return plotstrokes_.size();
}
void Plots::clear_plotstrokes() {
  plotstrokes_.Clear();
}
const ::naothmessages::PlotStroke2D& Plots::plotstrokes(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Plots.plotstrokes)
  return plotstrokes_.Get(index);
}
::naothmessages::PlotStroke2D* Plots::mutable_plotstrokes(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Plots.plotstrokes)
  return plotstrokes_.Mutable(index);
}
::naothmessages::PlotStroke2D* Plots::add_plotstrokes() {
  // @@protoc_insertion_point(field_add:naothmessages.Plots.plotstrokes)
  return plotstrokes_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::PlotStroke2D >*
Plots::mutable_plotstrokes() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Plots.plotstrokes)
  return &plotstrokes_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotStroke2D >&
Plots::plotstrokes() const {
  // @@protoc_insertion_point(field_list:naothmessages.Plots.plotstrokes)
  return plotstrokes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XABSLSymbol::kIdFieldNumber;
const int XABSLSymbol::kTypeFieldNumber;
const int XABSLSymbol::kNameFieldNumber;
const int XABSLSymbol::kDecimalValueFieldNumber;
const int XABSLSymbol::kBoolValueFieldNumber;
const int XABSLSymbol::kEnumValueFieldNumber;
const int XABSLSymbol::kEnumTypeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XABSLSymbol::XABSLSymbol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.XABSLSymbol)
}
XABSLSymbol::XABSLSymbol(const XABSLSymbol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&enumtypeid_, &from.enumtypeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&enumtypeid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:naothmessages.XABSLSymbol)
}

void XABSLSymbol::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enumtypeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enumvalue_) -
      reinterpret_cast<char*>(&enumtypeid_)) + sizeof(enumvalue_));
  id_ = -1;
  type_ = 3;
}

XABSLSymbol::~XABSLSymbol() {
  // @@protoc_insertion_point(destructor:naothmessages.XABSLSymbol)
  SharedDtor();
}

void XABSLSymbol::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XABSLSymbol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XABSLSymbol::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XABSLSymbol& XABSLSymbol::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

XABSLSymbol* XABSLSymbol::New(::google::protobuf::Arena* arena) const {
  XABSLSymbol* n = new XABSLSymbol;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XABSLSymbol::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.XABSLSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 126u) {
    ::memset(&enumtypeid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&enumvalue_) -
        reinterpret_cast<char*>(&enumtypeid_)) + sizeof(enumvalue_));
    id_ = -1;
    type_ = 3;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XABSLSymbol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.XABSLSymbol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .naothmessages.XABSLSymbol.SymbolType type = 2 [default = Unknown];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::naothmessages::XABSLSymbol_SymbolType_IsValid(value)) {
            set_type(static_cast< ::naothmessages::XABSLSymbol_SymbolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.XABSLSymbol.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double decimalValue = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_decimalvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &decimalvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool boolValue = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_boolvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boolvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 enumValue = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_enumvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enumvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 enumTypeId = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_enumtypeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enumtypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.XABSLSymbol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.XABSLSymbol)
  return false;
#undef DO_
}

void XABSLSymbol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.XABSLSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required .naothmessages.XABSLSymbol.SymbolType type = 2 [default = Unknown];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.XABSLSymbol.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional double decimalValue = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->decimalvalue(), output);
  }

  // optional bool boolValue = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->boolvalue(), output);
  }

  // optional int32 enumValue = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->enumvalue(), output);
  }

  // optional int32 enumTypeId = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->enumtypeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.XABSLSymbol)
}

::google::protobuf::uint8* XABSLSymbol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.XABSLSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required .naothmessages.XABSLSymbol.SymbolType type = 2 [default = Unknown];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.XABSLSymbol.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional double decimalValue = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->decimalvalue(), target);
  }

  // optional bool boolValue = 12;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->boolvalue(), target);
  }

  // optional int32 enumValue = 13;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->enumvalue(), target);
  }

  // optional int32 enumTypeId = 14;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->enumtypeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.XABSLSymbol)
  return target;
}

size_t XABSLSymbol::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:naothmessages.XABSLSymbol)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1 [default = -1];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_type()) {
    // required .naothmessages.XABSLSymbol.SymbolType type = 2 [default = Unknown];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t XABSLSymbol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.XABSLSymbol)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000060) ^ 0x00000060) == 0) {  // All required fields are present.
    // required int32 id = 1 [default = -1];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required .naothmessages.XABSLSymbol.SymbolType type = 2 [default = Unknown];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 enumTypeId = 14;
    if (has_enumtypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enumtypeid());
    }

    // optional double decimalValue = 11;
    if (has_decimalvalue()) {
      total_size += 1 + 8;
    }

    // optional bool boolValue = 12;
    if (has_boolvalue()) {
      total_size += 1 + 1;
    }

    // optional int32 enumValue = 13;
    if (has_enumvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enumvalue());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XABSLSymbol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.XABSLSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  const XABSLSymbol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XABSLSymbol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.XABSLSymbol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.XABSLSymbol)
    MergeFrom(*source);
  }
}

void XABSLSymbol::MergeFrom(const XABSLSymbol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.XABSLSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      enumtypeid_ = from.enumtypeid_;
    }
    if (cached_has_bits & 0x00000004u) {
      decimalvalue_ = from.decimalvalue_;
    }
    if (cached_has_bits & 0x00000008u) {
      boolvalue_ = from.boolvalue_;
    }
    if (cached_has_bits & 0x00000010u) {
      enumvalue_ = from.enumvalue_;
    }
    if (cached_has_bits & 0x00000020u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000040u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void XABSLSymbol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.XABSLSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XABSLSymbol::CopyFrom(const XABSLSymbol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.XABSLSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XABSLSymbol::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000060) != 0x00000060) return false;
  return true;
}

void XABSLSymbol::Swap(XABSLSymbol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XABSLSymbol::InternalSwap(XABSLSymbol* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(enumtypeid_, other->enumtypeid_);
  swap(decimalvalue_, other->decimalvalue_);
  swap(boolvalue_, other->boolvalue_);
  swap(enumvalue_, other->enumvalue_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XABSLSymbol::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XABSLSymbol

// required int32 id = 1 [default = -1];
bool XABSLSymbol::has_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void XABSLSymbol::set_has_id() {
  _has_bits_[0] |= 0x00000020u;
}
void XABSLSymbol::clear_has_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void XABSLSymbol::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 XABSLSymbol::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.id)
  return id_;
}
void XABSLSymbol::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.id)
}

// required .naothmessages.XABSLSymbol.SymbolType type = 2 [default = Unknown];
bool XABSLSymbol::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void XABSLSymbol::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
void XABSLSymbol::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void XABSLSymbol::clear_type() {
  type_ = 3;
  clear_has_type();
}
::naothmessages::XABSLSymbol_SymbolType XABSLSymbol::type() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.type)
  return static_cast< ::naothmessages::XABSLSymbol_SymbolType >(type_);
}
void XABSLSymbol::set_type(::naothmessages::XABSLSymbol_SymbolType value) {
  assert(::naothmessages::XABSLSymbol_SymbolType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.type)
}

// optional string name = 3;
bool XABSLSymbol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XABSLSymbol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void XABSLSymbol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void XABSLSymbol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& XABSLSymbol::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.name)
  return name_.GetNoArena();
}
void XABSLSymbol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.name)
}
#if LANG_CXX11
void XABSLSymbol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.XABSLSymbol.name)
}
#endif
void XABSLSymbol::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.XABSLSymbol.name)
}
void XABSLSymbol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.XABSLSymbol.name)
}
::std::string* XABSLSymbol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.XABSLSymbol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* XABSLSymbol::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.XABSLSymbol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void XABSLSymbol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.XABSLSymbol.name)
}

// optional double decimalValue = 11;
bool XABSLSymbol::has_decimalvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void XABSLSymbol::set_has_decimalvalue() {
  _has_bits_[0] |= 0x00000004u;
}
void XABSLSymbol::clear_has_decimalvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
void XABSLSymbol::clear_decimalvalue() {
  decimalvalue_ = 0;
  clear_has_decimalvalue();
}
double XABSLSymbol::decimalvalue() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.decimalValue)
  return decimalvalue_;
}
void XABSLSymbol::set_decimalvalue(double value) {
  set_has_decimalvalue();
  decimalvalue_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.decimalValue)
}

// optional bool boolValue = 12;
bool XABSLSymbol::has_boolvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void XABSLSymbol::set_has_boolvalue() {
  _has_bits_[0] |= 0x00000008u;
}
void XABSLSymbol::clear_has_boolvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
void XABSLSymbol::clear_boolvalue() {
  boolvalue_ = false;
  clear_has_boolvalue();
}
bool XABSLSymbol::boolvalue() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.boolValue)
  return boolvalue_;
}
void XABSLSymbol::set_boolvalue(bool value) {
  set_has_boolvalue();
  boolvalue_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.boolValue)
}

// optional int32 enumValue = 13;
bool XABSLSymbol::has_enumvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void XABSLSymbol::set_has_enumvalue() {
  _has_bits_[0] |= 0x00000010u;
}
void XABSLSymbol::clear_has_enumvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
void XABSLSymbol::clear_enumvalue() {
  enumvalue_ = 0;
  clear_has_enumvalue();
}
::google::protobuf::int32 XABSLSymbol::enumvalue() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.enumValue)
  return enumvalue_;
}
void XABSLSymbol::set_enumvalue(::google::protobuf::int32 value) {
  set_has_enumvalue();
  enumvalue_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.enumValue)
}

// optional int32 enumTypeId = 14;
bool XABSLSymbol::has_enumtypeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XABSLSymbol::set_has_enumtypeid() {
  _has_bits_[0] |= 0x00000002u;
}
void XABSLSymbol::clear_has_enumtypeid() {
  _has_bits_[0] &= ~0x00000002u;
}
void XABSLSymbol::clear_enumtypeid() {
  enumtypeid_ = 0;
  clear_has_enumtypeid();
}
::google::protobuf::int32 XABSLSymbol::enumtypeid() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.enumTypeId)
  return enumtypeid_;
}
void XABSLSymbol::set_enumtypeid(::google::protobuf::int32 value) {
  set_has_enumtypeid();
  enumtypeid_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.enumTypeId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XABSLActiveOptionSparse::kIdFieldNumber;
const int XABSLActiveOptionSparse::kTimeOfExecutionFieldNumber;
const int XABSLActiveOptionSparse::kActiveStateFieldNumber;
const int XABSLActiveOptionSparse::kStateTimeFieldNumber;
const int XABSLActiveOptionSparse::kDecimalParametersFieldNumber;
const int XABSLActiveOptionSparse::kBooleanParametersFieldNumber;
const int XABSLActiveOptionSparse::kEnumeratedParametersFieldNumber;
const int XABSLActiveOptionSparse::kActiveSubActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XABSLActiveOptionSparse::XABSLActiveOptionSparse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.XABSLActiveOptionSparse)
}
XABSLActiveOptionSparse::XABSLActiveOptionSparse(const XABSLActiveOptionSparse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      decimalparameters_(from.decimalparameters_),
      booleanparameters_(from.booleanparameters_),
      enumeratedparameters_(from.enumeratedparameters_),
      activesubactions_(from.activesubactions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timeofexecution_, &from.timeofexecution_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&timeofexecution_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:naothmessages.XABSLActiveOptionSparse)
}

void XABSLActiveOptionSparse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&timeofexecution_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activestate_) -
      reinterpret_cast<char*>(&timeofexecution_)) + sizeof(activestate_));
  id_ = -1;
}

XABSLActiveOptionSparse::~XABSLActiveOptionSparse() {
  // @@protoc_insertion_point(destructor:naothmessages.XABSLActiveOptionSparse)
  SharedDtor();
}

void XABSLActiveOptionSparse::SharedDtor() {
}

void XABSLActiveOptionSparse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XABSLActiveOptionSparse::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XABSLActiveOptionSparse& XABSLActiveOptionSparse::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

XABSLActiveOptionSparse* XABSLActiveOptionSparse::New(::google::protobuf::Arena* arena) const {
  XABSLActiveOptionSparse* n = new XABSLActiveOptionSparse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XABSLActiveOptionSparse::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.XABSLActiveOptionSparse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  decimalparameters_.Clear();
  booleanparameters_.Clear();
  enumeratedparameters_.Clear();
  activesubactions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&timeofexecution_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&activestate_) -
        reinterpret_cast<char*>(&timeofexecution_)) + sizeof(activestate_));
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XABSLActiveOptionSparse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.XABSLActiveOptionSparse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 timeOfExecution = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_timeofexecution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timeofexecution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 activeState = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_activestate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activestate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 stateTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_statetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &statetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double decimalParameters = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49u, input, this->mutable_decimalparameters())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_decimalparameters())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool booleanParameters = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 56u, input, this->mutable_booleanparameters())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_booleanparameters())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 enumeratedParameters = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64u, input, this->mutable_enumeratedparameters())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_enumeratedparameters())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.XABSLActionSparse activeSubActions = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activesubactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.XABSLActiveOptionSparse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.XABSLActiveOptionSparse)
  return false;
#undef DO_
}

void XABSLActiveOptionSparse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.XABSLActiveOptionSparse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int64 timeOfExecution = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timeofexecution(), output);
  }

  // optional int32 activeState = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->activestate(), output);
  }

  // optional int64 stateTime = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->statetime(), output);
  }

  // repeated double decimalParameters = 6;
  for (int i = 0, n = this->decimalparameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->decimalparameters(i), output);
  }

  // repeated bool booleanParameters = 7;
  for (int i = 0, n = this->booleanparameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      7, this->booleanparameters(i), output);
  }

  // repeated int32 enumeratedParameters = 8;
  for (int i = 0, n = this->enumeratedparameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->enumeratedparameters(i), output);
  }

  // repeated .naothmessages.XABSLActionSparse activeSubActions = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activesubactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->activesubactions(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.XABSLActiveOptionSparse)
}

::google::protobuf::uint8* XABSLActiveOptionSparse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.XABSLActiveOptionSparse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int64 timeOfExecution = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timeofexecution(), target);
  }

  // optional int32 activeState = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->activestate(), target);
  }

  // optional int64 stateTime = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->statetime(), target);
  }

  // repeated double decimalParameters = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(6, this->decimalparameters_, target);

  // repeated bool booleanParameters = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteBoolToArray(7, this->booleanparameters_, target);

  // repeated int32 enumeratedParameters = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(8, this->enumeratedparameters_, target);

  // repeated .naothmessages.XABSLActionSparse activeSubActions = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activesubactions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->activesubactions(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.XABSLActiveOptionSparse)
  return target;
}

size_t XABSLActiveOptionSparse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.XABSLActiveOptionSparse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  // repeated double decimalParameters = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->decimalparameters_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->decimalparameters_size());
    total_size += data_size;
  }

  // repeated bool booleanParameters = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->booleanparameters_size());
    size_t data_size = 1UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->booleanparameters_size());
    total_size += data_size;
  }

  // repeated int32 enumeratedParameters = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->enumeratedparameters_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->enumeratedparameters_size());
    total_size += data_size;
  }

  // repeated .naothmessages.XABSLActionSparse activeSubActions = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->activesubactions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activesubactions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 timeOfExecution = 3 [default = 0];
    if (has_timeofexecution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timeofexecution());
    }

    // optional int64 stateTime = 5;
    if (has_statetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->statetime());
    }

    // optional int32 activeState = 4;
    if (has_activestate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activestate());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XABSLActiveOptionSparse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.XABSLActiveOptionSparse)
  GOOGLE_DCHECK_NE(&from, this);
  const XABSLActiveOptionSparse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XABSLActiveOptionSparse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.XABSLActiveOptionSparse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.XABSLActiveOptionSparse)
    MergeFrom(*source);
  }
}

void XABSLActiveOptionSparse::MergeFrom(const XABSLActiveOptionSparse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.XABSLActiveOptionSparse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  decimalparameters_.MergeFrom(from.decimalparameters_);
  booleanparameters_.MergeFrom(from.booleanparameters_);
  enumeratedparameters_.MergeFrom(from.enumeratedparameters_);
  activesubactions_.MergeFrom(from.activesubactions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      timeofexecution_ = from.timeofexecution_;
    }
    if (cached_has_bits & 0x00000002u) {
      statetime_ = from.statetime_;
    }
    if (cached_has_bits & 0x00000004u) {
      activestate_ = from.activestate_;
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void XABSLActiveOptionSparse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.XABSLActiveOptionSparse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XABSLActiveOptionSparse::CopyFrom(const XABSLActiveOptionSparse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.XABSLActiveOptionSparse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XABSLActiveOptionSparse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->activesubactions())) return false;
  return true;
}

void XABSLActiveOptionSparse::Swap(XABSLActiveOptionSparse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XABSLActiveOptionSparse::InternalSwap(XABSLActiveOptionSparse* other) {
  using std::swap;
  decimalparameters_.InternalSwap(&other->decimalparameters_);
  booleanparameters_.InternalSwap(&other->booleanparameters_);
  enumeratedparameters_.InternalSwap(&other->enumeratedparameters_);
  activesubactions_.InternalSwap(&other->activesubactions_);
  swap(timeofexecution_, other->timeofexecution_);
  swap(statetime_, other->statetime_);
  swap(activestate_, other->activestate_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XABSLActiveOptionSparse::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XABSLActiveOptionSparse

// required int32 id = 1 [default = -1];
bool XABSLActiveOptionSparse::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void XABSLActiveOptionSparse::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
void XABSLActiveOptionSparse::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void XABSLActiveOptionSparse::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 XABSLActiveOptionSparse::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.id)
  return id_;
}
void XABSLActiveOptionSparse::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.id)
}

// optional int64 timeOfExecution = 3 [default = 0];
bool XABSLActiveOptionSparse::has_timeofexecution() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XABSLActiveOptionSparse::set_has_timeofexecution() {
  _has_bits_[0] |= 0x00000001u;
}
void XABSLActiveOptionSparse::clear_has_timeofexecution() {
  _has_bits_[0] &= ~0x00000001u;
}
void XABSLActiveOptionSparse::clear_timeofexecution() {
  timeofexecution_ = GOOGLE_LONGLONG(0);
  clear_has_timeofexecution();
}
::google::protobuf::int64 XABSLActiveOptionSparse::timeofexecution() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.timeOfExecution)
  return timeofexecution_;
}
void XABSLActiveOptionSparse::set_timeofexecution(::google::protobuf::int64 value) {
  set_has_timeofexecution();
  timeofexecution_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.timeOfExecution)
}

// optional int32 activeState = 4;
bool XABSLActiveOptionSparse::has_activestate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void XABSLActiveOptionSparse::set_has_activestate() {
  _has_bits_[0] |= 0x00000004u;
}
void XABSLActiveOptionSparse::clear_has_activestate() {
  _has_bits_[0] &= ~0x00000004u;
}
void XABSLActiveOptionSparse::clear_activestate() {
  activestate_ = 0;
  clear_has_activestate();
}
::google::protobuf::int32 XABSLActiveOptionSparse::activestate() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.activeState)
  return activestate_;
}
void XABSLActiveOptionSparse::set_activestate(::google::protobuf::int32 value) {
  set_has_activestate();
  activestate_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.activeState)
}

// optional int64 stateTime = 5;
bool XABSLActiveOptionSparse::has_statetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XABSLActiveOptionSparse::set_has_statetime() {
  _has_bits_[0] |= 0x00000002u;
}
void XABSLActiveOptionSparse::clear_has_statetime() {
  _has_bits_[0] &= ~0x00000002u;
}
void XABSLActiveOptionSparse::clear_statetime() {
  statetime_ = GOOGLE_LONGLONG(0);
  clear_has_statetime();
}
::google::protobuf::int64 XABSLActiveOptionSparse::statetime() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.stateTime)
  return statetime_;
}
void XABSLActiveOptionSparse::set_statetime(::google::protobuf::int64 value) {
  set_has_statetime();
  statetime_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.stateTime)
}

// repeated double decimalParameters = 6;
int XABSLActiveOptionSparse::decimalparameters_size() const {
  return decimalparameters_.size();
}
void XABSLActiveOptionSparse::clear_decimalparameters() {
  decimalparameters_.Clear();
}
double XABSLActiveOptionSparse::decimalparameters(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.decimalParameters)
  return decimalparameters_.Get(index);
}
void XABSLActiveOptionSparse::set_decimalparameters(int index, double value) {
  decimalparameters_.Set(index, value);
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.decimalParameters)
}
void XABSLActiveOptionSparse::add_decimalparameters(double value) {
  decimalparameters_.Add(value);
  // @@protoc_insertion_point(field_add:naothmessages.XABSLActiveOptionSparse.decimalParameters)
}
const ::google::protobuf::RepeatedField< double >&
XABSLActiveOptionSparse::decimalparameters() const {
  // @@protoc_insertion_point(field_list:naothmessages.XABSLActiveOptionSparse.decimalParameters)
  return decimalparameters_;
}
::google::protobuf::RepeatedField< double >*
XABSLActiveOptionSparse::mutable_decimalparameters() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.XABSLActiveOptionSparse.decimalParameters)
  return &decimalparameters_;
}

// repeated bool booleanParameters = 7;
int XABSLActiveOptionSparse::booleanparameters_size() const {
  return booleanparameters_.size();
}
void XABSLActiveOptionSparse::clear_booleanparameters() {
  booleanparameters_.Clear();
}
bool XABSLActiveOptionSparse::booleanparameters(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.booleanParameters)
  return booleanparameters_.Get(index);
}
void XABSLActiveOptionSparse::set_booleanparameters(int index, bool value) {
  booleanparameters_.Set(index, value);
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.booleanParameters)
}
void XABSLActiveOptionSparse::add_booleanparameters(bool value) {
  booleanparameters_.Add(value);
  // @@protoc_insertion_point(field_add:naothmessages.XABSLActiveOptionSparse.booleanParameters)
}
const ::google::protobuf::RepeatedField< bool >&
XABSLActiveOptionSparse::booleanparameters() const {
  // @@protoc_insertion_point(field_list:naothmessages.XABSLActiveOptionSparse.booleanParameters)
  return booleanparameters_;
}
::google::protobuf::RepeatedField< bool >*
XABSLActiveOptionSparse::mutable_booleanparameters() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.XABSLActiveOptionSparse.booleanParameters)
  return &booleanparameters_;
}

// repeated int32 enumeratedParameters = 8;
int XABSLActiveOptionSparse::enumeratedparameters_size() const {
  return enumeratedparameters_.size();
}
void XABSLActiveOptionSparse::clear_enumeratedparameters() {
  enumeratedparameters_.Clear();
}
::google::protobuf::int32 XABSLActiveOptionSparse::enumeratedparameters(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
  return enumeratedparameters_.Get(index);
}
void XABSLActiveOptionSparse::set_enumeratedparameters(int index, ::google::protobuf::int32 value) {
  enumeratedparameters_.Set(index, value);
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
}
void XABSLActiveOptionSparse::add_enumeratedparameters(::google::protobuf::int32 value) {
  enumeratedparameters_.Add(value);
  // @@protoc_insertion_point(field_add:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
XABSLActiveOptionSparse::enumeratedparameters() const {
  // @@protoc_insertion_point(field_list:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
  return enumeratedparameters_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
XABSLActiveOptionSparse::mutable_enumeratedparameters() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
  return &enumeratedparameters_;
}

// repeated .naothmessages.XABSLActionSparse activeSubActions = 9;
int XABSLActiveOptionSparse::activesubactions_size() const {
  return activesubactions_.size();
}
void XABSLActiveOptionSparse::clear_activesubactions() {
  activesubactions_.Clear();
}
const ::naothmessages::XABSLActionSparse& XABSLActiveOptionSparse::activesubactions(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return activesubactions_.Get(index);
}
::naothmessages::XABSLActionSparse* XABSLActiveOptionSparse::mutable_activesubactions(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return activesubactions_.Mutable(index);
}
::naothmessages::XABSLActionSparse* XABSLActiveOptionSparse::add_activesubactions() {
  // @@protoc_insertion_point(field_add:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return activesubactions_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >*
XABSLActiveOptionSparse::mutable_activesubactions() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return &activesubactions_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >&
XABSLActiveOptionSparse::activesubactions() const {
  // @@protoc_insertion_point(field_list:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return activesubactions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XABSLActionSparse::kTypeFieldNumber;
const int XABSLActionSparse::kSymbolFieldNumber;
const int XABSLActionSparse::kOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XABSLActionSparse::XABSLActionSparse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.XABSLActionSparse)
}
XABSLActionSparse::XABSLActionSparse(const XABSLActionSparse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_symbol()) {
    symbol_ = new ::naothmessages::XABSLSymbol(*from.symbol_);
  } else {
    symbol_ = NULL;
  }
  if (from.has_option()) {
    option_ = new ::naothmessages::XABSLActiveOptionSparse(*from.option_);
  } else {
    option_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.XABSLActionSparse)
}

void XABSLActionSparse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&symbol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_) -
      reinterpret_cast<char*>(&symbol_)) + sizeof(option_));
  type_ = 3;
}

XABSLActionSparse::~XABSLActionSparse() {
  // @@protoc_insertion_point(destructor:naothmessages.XABSLActionSparse)
  SharedDtor();
}

void XABSLActionSparse::SharedDtor() {
  if (this != internal_default_instance()) delete symbol_;
  if (this != internal_default_instance()) delete option_;
}

void XABSLActionSparse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XABSLActionSparse::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XABSLActionSparse& XABSLActionSparse::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

XABSLActionSparse* XABSLActionSparse::New(::google::protobuf::Arena* arena) const {
  XABSLActionSparse* n = new XABSLActionSparse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XABSLActionSparse::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.XABSLActionSparse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(symbol_ != NULL);
      symbol_->::naothmessages::XABSLSymbol::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(option_ != NULL);
      option_->::naothmessages::XABSLActiveOptionSparse::Clear();
    }
    type_ = 3;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XABSLActionSparse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.XABSLActionSparse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .naothmessages.XABSLActionSparse.ActionType type = 2 [default = Unknown];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::naothmessages::XABSLActionSparse_ActionType_IsValid(value)) {
            set_type(static_cast< ::naothmessages::XABSLActionSparse_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .naothmessages.XABSLSymbol symbol = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_symbol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .naothmessages.XABSLActiveOptionSparse option = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_option()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.XABSLActionSparse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.XABSLActionSparse)
  return false;
#undef DO_
}

void XABSLActionSparse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.XABSLActionSparse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .naothmessages.XABSLActionSparse.ActionType type = 2 [default = Unknown];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .naothmessages.XABSLSymbol symbol = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->symbol_, output);
  }

  // optional .naothmessages.XABSLActiveOptionSparse option = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->option_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.XABSLActionSparse)
}

::google::protobuf::uint8* XABSLActionSparse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.XABSLActionSparse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .naothmessages.XABSLActionSparse.ActionType type = 2 [default = Unknown];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .naothmessages.XABSLSymbol symbol = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->symbol_, deterministic, target);
  }

  // optional .naothmessages.XABSLActiveOptionSparse option = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->option_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.XABSLActionSparse)
  return target;
}

size_t XABSLActionSparse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.XABSLActionSparse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .naothmessages.XABSLActionSparse.ActionType type = 2 [default = Unknown];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .naothmessages.XABSLSymbol symbol = 3;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->symbol_);
    }

    // optional .naothmessages.XABSLActiveOptionSparse option = 4;
    if (has_option()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->option_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XABSLActionSparse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.XABSLActionSparse)
  GOOGLE_DCHECK_NE(&from, this);
  const XABSLActionSparse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XABSLActionSparse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.XABSLActionSparse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.XABSLActionSparse)
    MergeFrom(*source);
  }
}

void XABSLActionSparse::MergeFrom(const XABSLActionSparse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.XABSLActionSparse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_symbol()->::naothmessages::XABSLSymbol::MergeFrom(from.symbol());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_option()->::naothmessages::XABSLActiveOptionSparse::MergeFrom(from.option());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void XABSLActionSparse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.XABSLActionSparse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XABSLActionSparse::CopyFrom(const XABSLActionSparse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.XABSLActionSparse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XABSLActionSparse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_symbol()) {
    if (!this->symbol_->IsInitialized()) return false;
  }
  if (has_option()) {
    if (!this->option_->IsInitialized()) return false;
  }
  return true;
}

void XABSLActionSparse::Swap(XABSLActionSparse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XABSLActionSparse::InternalSwap(XABSLActionSparse* other) {
  using std::swap;
  swap(symbol_, other->symbol_);
  swap(option_, other->option_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XABSLActionSparse::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XABSLActionSparse

// required .naothmessages.XABSLActionSparse.ActionType type = 2 [default = Unknown];
bool XABSLActionSparse::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void XABSLActionSparse::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void XABSLActionSparse::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void XABSLActionSparse::clear_type() {
  type_ = 3;
  clear_has_type();
}
::naothmessages::XABSLActionSparse_ActionType XABSLActionSparse::type() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActionSparse.type)
  return static_cast< ::naothmessages::XABSLActionSparse_ActionType >(type_);
}
void XABSLActionSparse::set_type(::naothmessages::XABSLActionSparse_ActionType value) {
  assert(::naothmessages::XABSLActionSparse_ActionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActionSparse.type)
}

// optional .naothmessages.XABSLSymbol symbol = 3;
bool XABSLActionSparse::has_symbol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XABSLActionSparse::set_has_symbol() {
  _has_bits_[0] |= 0x00000001u;
}
void XABSLActionSparse::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000001u;
}
void XABSLActionSparse::clear_symbol() {
  if (symbol_ != NULL) symbol_->::naothmessages::XABSLSymbol::Clear();
  clear_has_symbol();
}
const ::naothmessages::XABSLSymbol& XABSLActionSparse::symbol() const {
  const ::naothmessages::XABSLSymbol* p = symbol_;
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActionSparse.symbol)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::XABSLSymbol*>(
      &::naothmessages::_XABSLSymbol_default_instance_);
}
::naothmessages::XABSLSymbol* XABSLActionSparse::mutable_symbol() {
  set_has_symbol();
  if (symbol_ == NULL) {
    symbol_ = new ::naothmessages::XABSLSymbol;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.XABSLActionSparse.symbol)
  return symbol_;
}
::naothmessages::XABSLSymbol* XABSLActionSparse::release_symbol() {
  // @@protoc_insertion_point(field_release:naothmessages.XABSLActionSparse.symbol)
  clear_has_symbol();
  ::naothmessages::XABSLSymbol* temp = symbol_;
  symbol_ = NULL;
  return temp;
}
void XABSLActionSparse::set_allocated_symbol(::naothmessages::XABSLSymbol* symbol) {
  delete symbol_;
  symbol_ = symbol;
  if (symbol) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.XABSLActionSparse.symbol)
}

// optional .naothmessages.XABSLActiveOptionSparse option = 4;
bool XABSLActionSparse::has_option() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XABSLActionSparse::set_has_option() {
  _has_bits_[0] |= 0x00000002u;
}
void XABSLActionSparse::clear_has_option() {
  _has_bits_[0] &= ~0x00000002u;
}
void XABSLActionSparse::clear_option() {
  if (option_ != NULL) option_->::naothmessages::XABSLActiveOptionSparse::Clear();
  clear_has_option();
}
const ::naothmessages::XABSLActiveOptionSparse& XABSLActionSparse::option() const {
  const ::naothmessages::XABSLActiveOptionSparse* p = option_;
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActionSparse.option)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::XABSLActiveOptionSparse*>(
      &::naothmessages::_XABSLActiveOptionSparse_default_instance_);
}
::naothmessages::XABSLActiveOptionSparse* XABSLActionSparse::mutable_option() {
  set_has_option();
  if (option_ == NULL) {
    option_ = new ::naothmessages::XABSLActiveOptionSparse;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.XABSLActionSparse.option)
  return option_;
}
::naothmessages::XABSLActiveOptionSparse* XABSLActionSparse::release_option() {
  // @@protoc_insertion_point(field_release:naothmessages.XABSLActionSparse.option)
  clear_has_option();
  ::naothmessages::XABSLActiveOptionSparse* temp = option_;
  option_ = NULL;
  return temp;
}
void XABSLActionSparse::set_allocated_option(::naothmessages::XABSLActiveOptionSparse* option) {
  delete option_;
  option_ = option;
  if (option) {
    set_has_option();
  } else {
    clear_has_option();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.XABSLActionSparse.option)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolValueList_DoubleSymbol::kIdFieldNumber;
const int SymbolValueList_DoubleSymbol::kNameFieldNumber;
const int SymbolValueList_DoubleSymbol::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolValueList_DoubleSymbol::SymbolValueList_DoubleSymbol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.SymbolValueList.DoubleSymbol)
}
SymbolValueList_DoubleSymbol::SymbolValueList_DoubleSymbol(const SymbolValueList_DoubleSymbol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&value_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:naothmessages.SymbolValueList.DoubleSymbol)
}

void SymbolValueList_DoubleSymbol::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  id_ = -1;
}

SymbolValueList_DoubleSymbol::~SymbolValueList_DoubleSymbol() {
  // @@protoc_insertion_point(destructor:naothmessages.SymbolValueList.DoubleSymbol)
  SharedDtor();
}

void SymbolValueList_DoubleSymbol::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SymbolValueList_DoubleSymbol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolValueList_DoubleSymbol::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolValueList_DoubleSymbol& SymbolValueList_DoubleSymbol::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolValueList_DoubleSymbol* SymbolValueList_DoubleSymbol::New(::google::protobuf::Arena* arena) const {
  SymbolValueList_DoubleSymbol* n = new SymbolValueList_DoubleSymbol;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolValueList_DoubleSymbol::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.SymbolValueList.DoubleSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    value_ = 0;
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolValueList_DoubleSymbol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.SymbolValueList.DoubleSymbol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.SymbolValueList.DoubleSymbol.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.SymbolValueList.DoubleSymbol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.SymbolValueList.DoubleSymbol)
  return false;
#undef DO_
}

void SymbolValueList_DoubleSymbol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.SymbolValueList.DoubleSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.SymbolValueList.DoubleSymbol.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional double value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.SymbolValueList.DoubleSymbol)
}

::google::protobuf::uint8* SymbolValueList_DoubleSymbol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.SymbolValueList.DoubleSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.SymbolValueList.DoubleSymbol.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional double value = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.SymbolValueList.DoubleSymbol)
  return target;
}

size_t SymbolValueList_DoubleSymbol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.SymbolValueList.DoubleSymbol)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional double value = 3;
    if (has_value()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolValueList_DoubleSymbol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.SymbolValueList.DoubleSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolValueList_DoubleSymbol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolValueList_DoubleSymbol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.SymbolValueList.DoubleSymbol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.SymbolValueList.DoubleSymbol)
    MergeFrom(*source);
  }
}

void SymbolValueList_DoubleSymbol::MergeFrom(const SymbolValueList_DoubleSymbol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.SymbolValueList.DoubleSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolValueList_DoubleSymbol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.SymbolValueList.DoubleSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolValueList_DoubleSymbol::CopyFrom(const SymbolValueList_DoubleSymbol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.SymbolValueList.DoubleSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolValueList_DoubleSymbol::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void SymbolValueList_DoubleSymbol::Swap(SymbolValueList_DoubleSymbol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolValueList_DoubleSymbol::InternalSwap(SymbolValueList_DoubleSymbol* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolValueList_DoubleSymbol::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolValueList_DoubleSymbol

// required int32 id = 1 [default = -1];
bool SymbolValueList_DoubleSymbol::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolValueList_DoubleSymbol::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolValueList_DoubleSymbol::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolValueList_DoubleSymbol::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 SymbolValueList_DoubleSymbol::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.DoubleSymbol.id)
  return id_;
}
void SymbolValueList_DoubleSymbol::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.DoubleSymbol.id)
}

// optional string name = 2;
bool SymbolValueList_DoubleSymbol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolValueList_DoubleSymbol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolValueList_DoubleSymbol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolValueList_DoubleSymbol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& SymbolValueList_DoubleSymbol::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.DoubleSymbol.name)
  return name_.GetNoArena();
}
void SymbolValueList_DoubleSymbol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.DoubleSymbol.name)
}
#if LANG_CXX11
void SymbolValueList_DoubleSymbol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.SymbolValueList.DoubleSymbol.name)
}
#endif
void SymbolValueList_DoubleSymbol::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.SymbolValueList.DoubleSymbol.name)
}
void SymbolValueList_DoubleSymbol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.SymbolValueList.DoubleSymbol.name)
}
::std::string* SymbolValueList_DoubleSymbol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.DoubleSymbol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SymbolValueList_DoubleSymbol::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.SymbolValueList.DoubleSymbol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SymbolValueList_DoubleSymbol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.SymbolValueList.DoubleSymbol.name)
}

// optional double value = 3;
bool SymbolValueList_DoubleSymbol::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolValueList_DoubleSymbol::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolValueList_DoubleSymbol::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolValueList_DoubleSymbol::clear_value() {
  value_ = 0;
  clear_has_value();
}
double SymbolValueList_DoubleSymbol::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.DoubleSymbol.value)
  return value_;
}
void SymbolValueList_DoubleSymbol::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.DoubleSymbol.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolValueList_BooleanSymbol::kIdFieldNumber;
const int SymbolValueList_BooleanSymbol::kNameFieldNumber;
const int SymbolValueList_BooleanSymbol::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolValueList_BooleanSymbol::SymbolValueList_BooleanSymbol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.SymbolValueList.BooleanSymbol)
}
SymbolValueList_BooleanSymbol::SymbolValueList_BooleanSymbol(const SymbolValueList_BooleanSymbol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&value_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:naothmessages.SymbolValueList.BooleanSymbol)
}

void SymbolValueList_BooleanSymbol::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = false;
  id_ = -1;
}

SymbolValueList_BooleanSymbol::~SymbolValueList_BooleanSymbol() {
  // @@protoc_insertion_point(destructor:naothmessages.SymbolValueList.BooleanSymbol)
  SharedDtor();
}

void SymbolValueList_BooleanSymbol::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SymbolValueList_BooleanSymbol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolValueList_BooleanSymbol::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolValueList_BooleanSymbol& SymbolValueList_BooleanSymbol::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolValueList_BooleanSymbol* SymbolValueList_BooleanSymbol::New(::google::protobuf::Arena* arena) const {
  SymbolValueList_BooleanSymbol* n = new SymbolValueList_BooleanSymbol;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolValueList_BooleanSymbol::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.SymbolValueList.BooleanSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    value_ = false;
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolValueList_BooleanSymbol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.SymbolValueList.BooleanSymbol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.SymbolValueList.BooleanSymbol.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.SymbolValueList.BooleanSymbol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.SymbolValueList.BooleanSymbol)
  return false;
#undef DO_
}

void SymbolValueList_BooleanSymbol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.SymbolValueList.BooleanSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.SymbolValueList.BooleanSymbol.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional bool value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.SymbolValueList.BooleanSymbol)
}

::google::protobuf::uint8* SymbolValueList_BooleanSymbol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.SymbolValueList.BooleanSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.SymbolValueList.BooleanSymbol.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional bool value = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.SymbolValueList.BooleanSymbol)
  return target;
}

size_t SymbolValueList_BooleanSymbol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.SymbolValueList.BooleanSymbol)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool value = 3;
    if (has_value()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolValueList_BooleanSymbol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.SymbolValueList.BooleanSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolValueList_BooleanSymbol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolValueList_BooleanSymbol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.SymbolValueList.BooleanSymbol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.SymbolValueList.BooleanSymbol)
    MergeFrom(*source);
  }
}

void SymbolValueList_BooleanSymbol::MergeFrom(const SymbolValueList_BooleanSymbol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.SymbolValueList.BooleanSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolValueList_BooleanSymbol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.SymbolValueList.BooleanSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolValueList_BooleanSymbol::CopyFrom(const SymbolValueList_BooleanSymbol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.SymbolValueList.BooleanSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolValueList_BooleanSymbol::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void SymbolValueList_BooleanSymbol::Swap(SymbolValueList_BooleanSymbol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolValueList_BooleanSymbol::InternalSwap(SymbolValueList_BooleanSymbol* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolValueList_BooleanSymbol::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolValueList_BooleanSymbol

// required int32 id = 1 [default = -1];
bool SymbolValueList_BooleanSymbol::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolValueList_BooleanSymbol::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolValueList_BooleanSymbol::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolValueList_BooleanSymbol::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 SymbolValueList_BooleanSymbol::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.BooleanSymbol.id)
  return id_;
}
void SymbolValueList_BooleanSymbol::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.BooleanSymbol.id)
}

// optional string name = 2;
bool SymbolValueList_BooleanSymbol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolValueList_BooleanSymbol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolValueList_BooleanSymbol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolValueList_BooleanSymbol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& SymbolValueList_BooleanSymbol::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.BooleanSymbol.name)
  return name_.GetNoArena();
}
void SymbolValueList_BooleanSymbol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.BooleanSymbol.name)
}
#if LANG_CXX11
void SymbolValueList_BooleanSymbol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.SymbolValueList.BooleanSymbol.name)
}
#endif
void SymbolValueList_BooleanSymbol::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.SymbolValueList.BooleanSymbol.name)
}
void SymbolValueList_BooleanSymbol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.SymbolValueList.BooleanSymbol.name)
}
::std::string* SymbolValueList_BooleanSymbol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.BooleanSymbol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SymbolValueList_BooleanSymbol::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.SymbolValueList.BooleanSymbol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SymbolValueList_BooleanSymbol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.SymbolValueList.BooleanSymbol.name)
}

// optional bool value = 3;
bool SymbolValueList_BooleanSymbol::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolValueList_BooleanSymbol::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolValueList_BooleanSymbol::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolValueList_BooleanSymbol::clear_value() {
  value_ = false;
  clear_has_value();
}
bool SymbolValueList_BooleanSymbol::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.BooleanSymbol.value)
  return value_;
}
void SymbolValueList_BooleanSymbol::set_value(bool value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.BooleanSymbol.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolValueList_EnumSymbol::kIdFieldNumber;
const int SymbolValueList_EnumSymbol::kNameFieldNumber;
const int SymbolValueList_EnumSymbol::kValueFieldNumber;
const int SymbolValueList_EnumSymbol::kTypeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolValueList_EnumSymbol::SymbolValueList_EnumSymbol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.SymbolValueList.EnumSymbol)
}
SymbolValueList_EnumSymbol::SymbolValueList_EnumSymbol(const SymbolValueList_EnumSymbol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&value_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:naothmessages.SymbolValueList.EnumSymbol)
}

void SymbolValueList_EnumSymbol::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typeid__) -
      reinterpret_cast<char*>(&value_)) + sizeof(typeid__));
  id_ = -1;
}

SymbolValueList_EnumSymbol::~SymbolValueList_EnumSymbol() {
  // @@protoc_insertion_point(destructor:naothmessages.SymbolValueList.EnumSymbol)
  SharedDtor();
}

void SymbolValueList_EnumSymbol::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SymbolValueList_EnumSymbol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolValueList_EnumSymbol::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolValueList_EnumSymbol& SymbolValueList_EnumSymbol::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolValueList_EnumSymbol* SymbolValueList_EnumSymbol::New(::google::protobuf::Arena* arena) const {
  SymbolValueList_EnumSymbol* n = new SymbolValueList_EnumSymbol;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolValueList_EnumSymbol::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.SymbolValueList.EnumSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 14u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&typeid__) -
        reinterpret_cast<char*>(&value_)) + sizeof(typeid__));
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolValueList_EnumSymbol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.SymbolValueList.EnumSymbol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.SymbolValueList.EnumSymbol.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 value = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 typeId = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_typeid_();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typeid__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.SymbolValueList.EnumSymbol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.SymbolValueList.EnumSymbol)
  return false;
#undef DO_
}

void SymbolValueList_EnumSymbol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.SymbolValueList.EnumSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.SymbolValueList.EnumSymbol.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 value = 13;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->value(), output);
  }

  // optional int32 typeId = 14;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->typeid_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.SymbolValueList.EnumSymbol)
}

::google::protobuf::uint8* SymbolValueList_EnumSymbol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.SymbolValueList.EnumSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.SymbolValueList.EnumSymbol.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 value = 13;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->value(), target);
  }

  // optional int32 typeId = 14;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->typeid_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.SymbolValueList.EnumSymbol)
  return target;
}

size_t SymbolValueList_EnumSymbol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.SymbolValueList.EnumSymbol)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 value = 13;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

    // optional int32 typeId = 14;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->typeid_());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolValueList_EnumSymbol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.SymbolValueList.EnumSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolValueList_EnumSymbol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolValueList_EnumSymbol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.SymbolValueList.EnumSymbol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.SymbolValueList.EnumSymbol)
    MergeFrom(*source);
  }
}

void SymbolValueList_EnumSymbol::MergeFrom(const SymbolValueList_EnumSymbol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.SymbolValueList.EnumSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000004u) {
      typeid__ = from.typeid__;
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SymbolValueList_EnumSymbol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.SymbolValueList.EnumSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolValueList_EnumSymbol::CopyFrom(const SymbolValueList_EnumSymbol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.SymbolValueList.EnumSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolValueList_EnumSymbol::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  return true;
}

void SymbolValueList_EnumSymbol::Swap(SymbolValueList_EnumSymbol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolValueList_EnumSymbol::InternalSwap(SymbolValueList_EnumSymbol* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(typeid__, other->typeid__);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolValueList_EnumSymbol::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolValueList_EnumSymbol

// required int32 id = 1 [default = -1];
bool SymbolValueList_EnumSymbol::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SymbolValueList_EnumSymbol::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
void SymbolValueList_EnumSymbol::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void SymbolValueList_EnumSymbol::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 SymbolValueList_EnumSymbol::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.EnumSymbol.id)
  return id_;
}
void SymbolValueList_EnumSymbol::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.EnumSymbol.id)
}

// optional string name = 2;
bool SymbolValueList_EnumSymbol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SymbolValueList_EnumSymbol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SymbolValueList_EnumSymbol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SymbolValueList_EnumSymbol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& SymbolValueList_EnumSymbol::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.EnumSymbol.name)
  return name_.GetNoArena();
}
void SymbolValueList_EnumSymbol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.EnumSymbol.name)
}
#if LANG_CXX11
void SymbolValueList_EnumSymbol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.SymbolValueList.EnumSymbol.name)
}
#endif
void SymbolValueList_EnumSymbol::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.SymbolValueList.EnumSymbol.name)
}
void SymbolValueList_EnumSymbol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.SymbolValueList.EnumSymbol.name)
}
::std::string* SymbolValueList_EnumSymbol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.EnumSymbol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SymbolValueList_EnumSymbol::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.SymbolValueList.EnumSymbol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SymbolValueList_EnumSymbol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.SymbolValueList.EnumSymbol.name)
}

// optional int32 value = 13;
bool SymbolValueList_EnumSymbol::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SymbolValueList_EnumSymbol::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void SymbolValueList_EnumSymbol::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void SymbolValueList_EnumSymbol::clear_value() {
  value_ = 0;
  clear_has_value();
}
::google::protobuf::int32 SymbolValueList_EnumSymbol::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.EnumSymbol.value)
  return value_;
}
void SymbolValueList_EnumSymbol::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.EnumSymbol.value)
}

// optional int32 typeId = 14;
bool SymbolValueList_EnumSymbol::has_typeid_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SymbolValueList_EnumSymbol::set_has_typeid_() {
  _has_bits_[0] |= 0x00000004u;
}
void SymbolValueList_EnumSymbol::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000004u;
}
void SymbolValueList_EnumSymbol::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
::google::protobuf::int32 SymbolValueList_EnumSymbol::typeid_() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.EnumSymbol.typeId)
  return typeid__;
}
void SymbolValueList_EnumSymbol::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.EnumSymbol.typeId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SymbolValueList::kDecimalFieldNumber;
const int SymbolValueList::kBooleanFieldNumber;
const int SymbolValueList::kEnumeratedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SymbolValueList::SymbolValueList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.SymbolValueList)
}
SymbolValueList::SymbolValueList(const SymbolValueList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      decimal_(from.decimal_),
      boolean_(from.boolean_),
      enumerated_(from.enumerated_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:naothmessages.SymbolValueList)
}

void SymbolValueList::SharedCtor() {
  _cached_size_ = 0;
}

SymbolValueList::~SymbolValueList() {
  // @@protoc_insertion_point(destructor:naothmessages.SymbolValueList)
  SharedDtor();
}

void SymbolValueList::SharedDtor() {
}

void SymbolValueList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SymbolValueList::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SymbolValueList& SymbolValueList::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

SymbolValueList* SymbolValueList::New(::google::protobuf::Arena* arena) const {
  SymbolValueList* n = new SymbolValueList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SymbolValueList::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.SymbolValueList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  decimal_.Clear();
  boolean_.Clear();
  enumerated_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SymbolValueList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.SymbolValueList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .naothmessages.SymbolValueList.DoubleSymbol decimal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.SymbolValueList.BooleanSymbol boolean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.SymbolValueList.EnumSymbol enumerated = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_enumerated()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.SymbolValueList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.SymbolValueList)
  return false;
#undef DO_
}

void SymbolValueList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.SymbolValueList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.SymbolValueList.DoubleSymbol decimal = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decimal_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decimal(static_cast<int>(i)), output);
  }

  // repeated .naothmessages.SymbolValueList.BooleanSymbol boolean = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boolean_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->boolean(static_cast<int>(i)), output);
  }

  // repeated .naothmessages.SymbolValueList.EnumSymbol enumerated = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enumerated_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->enumerated(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.SymbolValueList)
}

::google::protobuf::uint8* SymbolValueList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.SymbolValueList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.SymbolValueList.DoubleSymbol decimal = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decimal_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->decimal(static_cast<int>(i)), deterministic, target);
  }

  // repeated .naothmessages.SymbolValueList.BooleanSymbol boolean = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boolean_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->boolean(static_cast<int>(i)), deterministic, target);
  }

  // repeated .naothmessages.SymbolValueList.EnumSymbol enumerated = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enumerated_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->enumerated(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.SymbolValueList)
  return target;
}

size_t SymbolValueList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.SymbolValueList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .naothmessages.SymbolValueList.DoubleSymbol decimal = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->decimal_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decimal(static_cast<int>(i)));
    }
  }

  // repeated .naothmessages.SymbolValueList.BooleanSymbol boolean = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->boolean_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->boolean(static_cast<int>(i)));
    }
  }

  // repeated .naothmessages.SymbolValueList.EnumSymbol enumerated = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->enumerated_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->enumerated(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SymbolValueList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.SymbolValueList)
  GOOGLE_DCHECK_NE(&from, this);
  const SymbolValueList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SymbolValueList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.SymbolValueList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.SymbolValueList)
    MergeFrom(*source);
  }
}

void SymbolValueList::MergeFrom(const SymbolValueList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.SymbolValueList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  decimal_.MergeFrom(from.decimal_);
  boolean_.MergeFrom(from.boolean_);
  enumerated_.MergeFrom(from.enumerated_);
}

void SymbolValueList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.SymbolValueList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SymbolValueList::CopyFrom(const SymbolValueList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.SymbolValueList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SymbolValueList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->decimal())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->boolean())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->enumerated())) return false;
  return true;
}

void SymbolValueList::Swap(SymbolValueList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SymbolValueList::InternalSwap(SymbolValueList* other) {
  using std::swap;
  decimal_.InternalSwap(&other->decimal_);
  boolean_.InternalSwap(&other->boolean_);
  enumerated_.InternalSwap(&other->enumerated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SymbolValueList::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SymbolValueList

// repeated .naothmessages.SymbolValueList.DoubleSymbol decimal = 1;
int SymbolValueList::decimal_size() const {
  return decimal_.size();
}
void SymbolValueList::clear_decimal() {
  decimal_.Clear();
}
const ::naothmessages::SymbolValueList_DoubleSymbol& SymbolValueList::decimal(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.decimal)
  return decimal_.Get(index);
}
::naothmessages::SymbolValueList_DoubleSymbol* SymbolValueList::mutable_decimal(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.decimal)
  return decimal_.Mutable(index);
}
::naothmessages::SymbolValueList_DoubleSymbol* SymbolValueList::add_decimal() {
  // @@protoc_insertion_point(field_add:naothmessages.SymbolValueList.decimal)
  return decimal_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_DoubleSymbol >*
SymbolValueList::mutable_decimal() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.SymbolValueList.decimal)
  return &decimal_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_DoubleSymbol >&
SymbolValueList::decimal() const {
  // @@protoc_insertion_point(field_list:naothmessages.SymbolValueList.decimal)
  return decimal_;
}

// repeated .naothmessages.SymbolValueList.BooleanSymbol boolean = 2;
int SymbolValueList::boolean_size() const {
  return boolean_.size();
}
void SymbolValueList::clear_boolean() {
  boolean_.Clear();
}
const ::naothmessages::SymbolValueList_BooleanSymbol& SymbolValueList::boolean(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.boolean)
  return boolean_.Get(index);
}
::naothmessages::SymbolValueList_BooleanSymbol* SymbolValueList::mutable_boolean(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.boolean)
  return boolean_.Mutable(index);
}
::naothmessages::SymbolValueList_BooleanSymbol* SymbolValueList::add_boolean() {
  // @@protoc_insertion_point(field_add:naothmessages.SymbolValueList.boolean)
  return boolean_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_BooleanSymbol >*
SymbolValueList::mutable_boolean() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.SymbolValueList.boolean)
  return &boolean_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_BooleanSymbol >&
SymbolValueList::boolean() const {
  // @@protoc_insertion_point(field_list:naothmessages.SymbolValueList.boolean)
  return boolean_;
}

// repeated .naothmessages.SymbolValueList.EnumSymbol enumerated = 3;
int SymbolValueList::enumerated_size() const {
  return enumerated_.size();
}
void SymbolValueList::clear_enumerated() {
  enumerated_.Clear();
}
const ::naothmessages::SymbolValueList_EnumSymbol& SymbolValueList::enumerated(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.enumerated)
  return enumerated_.Get(index);
}
::naothmessages::SymbolValueList_EnumSymbol* SymbolValueList::mutable_enumerated(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.enumerated)
  return enumerated_.Mutable(index);
}
::naothmessages::SymbolValueList_EnumSymbol* SymbolValueList::add_enumerated() {
  // @@protoc_insertion_point(field_add:naothmessages.SymbolValueList.enumerated)
  return enumerated_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_EnumSymbol >*
SymbolValueList::mutable_enumerated() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.SymbolValueList.enumerated)
  return &enumerated_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_EnumSymbol >&
SymbolValueList::enumerated() const {
  // @@protoc_insertion_point(field_list:naothmessages.SymbolValueList.enumerated)
  return enumerated_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BehaviorStateSparse::kAgentFieldNumber;
const int BehaviorStateSparse::kActiveRootActionsFieldNumber;
const int BehaviorStateSparse::kInputSymbolListFieldNumber;
const int BehaviorStateSparse::kOutputSymbolListFieldNumber;
const int BehaviorStateSparse::kFrameNumberFieldNumber;
const int BehaviorStateSparse::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BehaviorStateSparse::BehaviorStateSparse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.BehaviorStateSparse)
}
BehaviorStateSparse::BehaviorStateSparse(const BehaviorStateSparse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      activerootactions_(from.activerootactions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_agent()) {
    agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_);
  }
  errormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_errormessage()) {
    errormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormessage_);
  }
  if (from.has_inputsymbollist()) {
    inputsymbollist_ = new ::naothmessages::SymbolValueList(*from.inputsymbollist_);
  } else {
    inputsymbollist_ = NULL;
  }
  if (from.has_outputsymbollist()) {
    outputsymbollist_ = new ::naothmessages::SymbolValueList(*from.outputsymbollist_);
  } else {
    outputsymbollist_ = NULL;
  }
  framenumber_ = from.framenumber_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.BehaviorStateSparse)
}

void BehaviorStateSparse::SharedCtor() {
  _cached_size_ = 0;
  agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inputsymbollist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&framenumber_) -
      reinterpret_cast<char*>(&inputsymbollist_)) + sizeof(framenumber_));
}

BehaviorStateSparse::~BehaviorStateSparse() {
  // @@protoc_insertion_point(destructor:naothmessages.BehaviorStateSparse)
  SharedDtor();
}

void BehaviorStateSparse::SharedDtor() {
  agent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errormessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inputsymbollist_;
  if (this != internal_default_instance()) delete outputsymbollist_;
}

void BehaviorStateSparse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorStateSparse::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BehaviorStateSparse& BehaviorStateSparse::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

BehaviorStateSparse* BehaviorStateSparse::New(::google::protobuf::Arena* arena) const {
  BehaviorStateSparse* n = new BehaviorStateSparse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BehaviorStateSparse::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.BehaviorStateSparse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  activerootactions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!agent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*agent_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!errormessage_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*errormessage_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(inputsymbollist_ != NULL);
      inputsymbollist_->::naothmessages::SymbolValueList::Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(outputsymbollist_ != NULL);
      outputsymbollist_->::naothmessages::SymbolValueList::Clear();
    }
  }
  framenumber_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BehaviorStateSparse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.BehaviorStateSparse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string agent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->agent().data(), static_cast<int>(this->agent().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.BehaviorStateSparse.agent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.XABSLActionSparse activeRootActions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activerootactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 frameNumber = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_framenumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &framenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string errorMessage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errormessage().data(), static_cast<int>(this->errormessage().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.BehaviorStateSparse.errorMessage");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .naothmessages.SymbolValueList inputSymbolList = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inputsymbollist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .naothmessages.SymbolValueList outputSymbolList = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_outputsymbollist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.BehaviorStateSparse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.BehaviorStateSparse)
  return false;
#undef DO_
}

void BehaviorStateSparse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.BehaviorStateSparse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string agent = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent().data(), static_cast<int>(this->agent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateSparse.agent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->agent(), output);
  }

  // repeated .naothmessages.XABSLActionSparse activeRootActions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activerootactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->activerootactions(static_cast<int>(i)), output);
  }

  // optional uint32 frameNumber = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->framenumber(), output);
  }

  // optional string errorMessage = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormessage().data(), static_cast<int>(this->errormessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateSparse.errorMessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->errormessage(), output);
  }

  // optional .naothmessages.SymbolValueList inputSymbolList = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->inputsymbollist_, output);
  }

  // optional .naothmessages.SymbolValueList outputSymbolList = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->outputsymbollist_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.BehaviorStateSparse)
}

::google::protobuf::uint8* BehaviorStateSparse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.BehaviorStateSparse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string agent = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent().data(), static_cast<int>(this->agent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateSparse.agent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->agent(), target);
  }

  // repeated .naothmessages.XABSLActionSparse activeRootActions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activerootactions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->activerootactions(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 frameNumber = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->framenumber(), target);
  }

  // optional string errorMessage = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormessage().data(), static_cast<int>(this->errormessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateSparse.errorMessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->errormessage(), target);
  }

  // optional .naothmessages.SymbolValueList inputSymbolList = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->inputsymbollist_, deterministic, target);
  }

  // optional .naothmessages.SymbolValueList outputSymbolList = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->outputsymbollist_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.BehaviorStateSparse)
  return target;
}

size_t BehaviorStateSparse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.BehaviorStateSparse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .naothmessages.XABSLActionSparse activeRootActions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->activerootactions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activerootactions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string agent = 1;
    if (has_agent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->agent());
    }

    // optional string errorMessage = 6;
    if (has_errormessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errormessage());
    }

    // optional .naothmessages.SymbolValueList inputSymbolList = 10;
    if (has_inputsymbollist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->inputsymbollist_);
    }

    // optional .naothmessages.SymbolValueList outputSymbolList = 11;
    if (has_outputsymbollist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->outputsymbollist_);
    }

    // optional uint32 frameNumber = 5;
    if (has_framenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->framenumber());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorStateSparse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.BehaviorStateSparse)
  GOOGLE_DCHECK_NE(&from, this);
  const BehaviorStateSparse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BehaviorStateSparse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.BehaviorStateSparse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.BehaviorStateSparse)
    MergeFrom(*source);
  }
}

void BehaviorStateSparse::MergeFrom(const BehaviorStateSparse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.BehaviorStateSparse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  activerootactions_.MergeFrom(from.activerootactions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_agent();
      agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_errormessage();
      errormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormessage_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_inputsymbollist()->::naothmessages::SymbolValueList::MergeFrom(from.inputsymbollist());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_outputsymbollist()->::naothmessages::SymbolValueList::MergeFrom(from.outputsymbollist());
    }
    if (cached_has_bits & 0x00000010u) {
      framenumber_ = from.framenumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BehaviorStateSparse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.BehaviorStateSparse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorStateSparse::CopyFrom(const BehaviorStateSparse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.BehaviorStateSparse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorStateSparse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->activerootactions())) return false;
  if (has_inputsymbollist()) {
    if (!this->inputsymbollist_->IsInitialized()) return false;
  }
  if (has_outputsymbollist()) {
    if (!this->outputsymbollist_->IsInitialized()) return false;
  }
  return true;
}

void BehaviorStateSparse::Swap(BehaviorStateSparse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BehaviorStateSparse::InternalSwap(BehaviorStateSparse* other) {
  using std::swap;
  activerootactions_.InternalSwap(&other->activerootactions_);
  agent_.Swap(&other->agent_);
  errormessage_.Swap(&other->errormessage_);
  swap(inputsymbollist_, other->inputsymbollist_);
  swap(outputsymbollist_, other->outputsymbollist_);
  swap(framenumber_, other->framenumber_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BehaviorStateSparse::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviorStateSparse

// optional string agent = 1;
bool BehaviorStateSparse::has_agent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BehaviorStateSparse::set_has_agent() {
  _has_bits_[0] |= 0x00000001u;
}
void BehaviorStateSparse::clear_has_agent() {
  _has_bits_[0] &= ~0x00000001u;
}
void BehaviorStateSparse::clear_agent() {
  agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_agent();
}
const ::std::string& BehaviorStateSparse::agent() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.agent)
  return agent_.GetNoArena();
}
void BehaviorStateSparse::set_agent(const ::std::string& value) {
  set_has_agent();
  agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateSparse.agent)
}
#if LANG_CXX11
void BehaviorStateSparse::set_agent(::std::string&& value) {
  set_has_agent();
  agent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateSparse.agent)
}
#endif
void BehaviorStateSparse::set_agent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_agent();
  agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateSparse.agent)
}
void BehaviorStateSparse::set_agent(const char* value, size_t size) {
  set_has_agent();
  agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateSparse.agent)
}
::std::string* BehaviorStateSparse::mutable_agent() {
  set_has_agent();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.agent)
  return agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BehaviorStateSparse::release_agent() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateSparse.agent)
  clear_has_agent();
  return agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BehaviorStateSparse::set_allocated_agent(::std::string* agent) {
  if (agent != NULL) {
    set_has_agent();
  } else {
    clear_has_agent();
  }
  agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateSparse.agent)
}

// repeated .naothmessages.XABSLActionSparse activeRootActions = 2;
int BehaviorStateSparse::activerootactions_size() const {
  return activerootactions_.size();
}
void BehaviorStateSparse::clear_activerootactions() {
  activerootactions_.Clear();
}
const ::naothmessages::XABSLActionSparse& BehaviorStateSparse::activerootactions(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.activeRootActions)
  return activerootactions_.Get(index);
}
::naothmessages::XABSLActionSparse* BehaviorStateSparse::mutable_activerootactions(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.activeRootActions)
  return activerootactions_.Mutable(index);
}
::naothmessages::XABSLActionSparse* BehaviorStateSparse::add_activerootactions() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateSparse.activeRootActions)
  return activerootactions_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >*
BehaviorStateSparse::mutable_activerootactions() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateSparse.activeRootActions)
  return &activerootactions_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >&
BehaviorStateSparse::activerootactions() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateSparse.activeRootActions)
  return activerootactions_;
}

// optional .naothmessages.SymbolValueList inputSymbolList = 10;
bool BehaviorStateSparse::has_inputsymbollist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BehaviorStateSparse::set_has_inputsymbollist() {
  _has_bits_[0] |= 0x00000004u;
}
void BehaviorStateSparse::clear_has_inputsymbollist() {
  _has_bits_[0] &= ~0x00000004u;
}
void BehaviorStateSparse::clear_inputsymbollist() {
  if (inputsymbollist_ != NULL) inputsymbollist_->::naothmessages::SymbolValueList::Clear();
  clear_has_inputsymbollist();
}
const ::naothmessages::SymbolValueList& BehaviorStateSparse::inputsymbollist() const {
  const ::naothmessages::SymbolValueList* p = inputsymbollist_;
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.inputSymbolList)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::SymbolValueList*>(
      &::naothmessages::_SymbolValueList_default_instance_);
}
::naothmessages::SymbolValueList* BehaviorStateSparse::mutable_inputsymbollist() {
  set_has_inputsymbollist();
  if (inputsymbollist_ == NULL) {
    inputsymbollist_ = new ::naothmessages::SymbolValueList;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.inputSymbolList)
  return inputsymbollist_;
}
::naothmessages::SymbolValueList* BehaviorStateSparse::release_inputsymbollist() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateSparse.inputSymbolList)
  clear_has_inputsymbollist();
  ::naothmessages::SymbolValueList* temp = inputsymbollist_;
  inputsymbollist_ = NULL;
  return temp;
}
void BehaviorStateSparse::set_allocated_inputsymbollist(::naothmessages::SymbolValueList* inputsymbollist) {
  delete inputsymbollist_;
  inputsymbollist_ = inputsymbollist;
  if (inputsymbollist) {
    set_has_inputsymbollist();
  } else {
    clear_has_inputsymbollist();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateSparse.inputSymbolList)
}

// optional .naothmessages.SymbolValueList outputSymbolList = 11;
bool BehaviorStateSparse::has_outputsymbollist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BehaviorStateSparse::set_has_outputsymbollist() {
  _has_bits_[0] |= 0x00000008u;
}
void BehaviorStateSparse::clear_has_outputsymbollist() {
  _has_bits_[0] &= ~0x00000008u;
}
void BehaviorStateSparse::clear_outputsymbollist() {
  if (outputsymbollist_ != NULL) outputsymbollist_->::naothmessages::SymbolValueList::Clear();
  clear_has_outputsymbollist();
}
const ::naothmessages::SymbolValueList& BehaviorStateSparse::outputsymbollist() const {
  const ::naothmessages::SymbolValueList* p = outputsymbollist_;
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.outputSymbolList)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::SymbolValueList*>(
      &::naothmessages::_SymbolValueList_default_instance_);
}
::naothmessages::SymbolValueList* BehaviorStateSparse::mutable_outputsymbollist() {
  set_has_outputsymbollist();
  if (outputsymbollist_ == NULL) {
    outputsymbollist_ = new ::naothmessages::SymbolValueList;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.outputSymbolList)
  return outputsymbollist_;
}
::naothmessages::SymbolValueList* BehaviorStateSparse::release_outputsymbollist() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateSparse.outputSymbolList)
  clear_has_outputsymbollist();
  ::naothmessages::SymbolValueList* temp = outputsymbollist_;
  outputsymbollist_ = NULL;
  return temp;
}
void BehaviorStateSparse::set_allocated_outputsymbollist(::naothmessages::SymbolValueList* outputsymbollist) {
  delete outputsymbollist_;
  outputsymbollist_ = outputsymbollist;
  if (outputsymbollist) {
    set_has_outputsymbollist();
  } else {
    clear_has_outputsymbollist();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateSparse.outputSymbolList)
}

// optional uint32 frameNumber = 5;
bool BehaviorStateSparse::has_framenumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BehaviorStateSparse::set_has_framenumber() {
  _has_bits_[0] |= 0x00000010u;
}
void BehaviorStateSparse::clear_has_framenumber() {
  _has_bits_[0] &= ~0x00000010u;
}
void BehaviorStateSparse::clear_framenumber() {
  framenumber_ = 0u;
  clear_has_framenumber();
}
::google::protobuf::uint32 BehaviorStateSparse::framenumber() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.frameNumber)
  return framenumber_;
}
void BehaviorStateSparse::set_framenumber(::google::protobuf::uint32 value) {
  set_has_framenumber();
  framenumber_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateSparse.frameNumber)
}

// optional string errorMessage = 6;
bool BehaviorStateSparse::has_errormessage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BehaviorStateSparse::set_has_errormessage() {
  _has_bits_[0] |= 0x00000002u;
}
void BehaviorStateSparse::clear_has_errormessage() {
  _has_bits_[0] &= ~0x00000002u;
}
void BehaviorStateSparse::clear_errormessage() {
  errormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errormessage();
}
const ::std::string& BehaviorStateSparse::errormessage() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.errorMessage)
  return errormessage_.GetNoArena();
}
void BehaviorStateSparse::set_errormessage(const ::std::string& value) {
  set_has_errormessage();
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateSparse.errorMessage)
}
#if LANG_CXX11
void BehaviorStateSparse::set_errormessage(::std::string&& value) {
  set_has_errormessage();
  errormessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateSparse.errorMessage)
}
#endif
void BehaviorStateSparse::set_errormessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_errormessage();
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateSparse.errorMessage)
}
void BehaviorStateSparse::set_errormessage(const char* value, size_t size) {
  set_has_errormessage();
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateSparse.errorMessage)
}
::std::string* BehaviorStateSparse::mutable_errormessage() {
  set_has_errormessage();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.errorMessage)
  return errormessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BehaviorStateSparse::release_errormessage() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateSparse.errorMessage)
  clear_has_errormessage();
  return errormessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BehaviorStateSparse::set_allocated_errormessage(::std::string* errormessage) {
  if (errormessage != NULL) {
    set_has_errormessage();
  } else {
    clear_has_errormessage();
  }
  errormessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormessage);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateSparse.errorMessage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BehaviorStateComplete_EnumType_Element::kValueFieldNumber;
const int BehaviorStateComplete_EnumType_Element::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BehaviorStateComplete_EnumType_Element::BehaviorStateComplete_EnumType_Element()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.BehaviorStateComplete.EnumType.Element)
}
BehaviorStateComplete_EnumType_Element::BehaviorStateComplete_EnumType_Element(const BehaviorStateComplete_EnumType_Element& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.BehaviorStateComplete.EnumType.Element)
}

void BehaviorStateComplete_EnumType_Element::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

BehaviorStateComplete_EnumType_Element::~BehaviorStateComplete_EnumType_Element() {
  // @@protoc_insertion_point(destructor:naothmessages.BehaviorStateComplete.EnumType.Element)
  SharedDtor();
}

void BehaviorStateComplete_EnumType_Element::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BehaviorStateComplete_EnumType_Element::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorStateComplete_EnumType_Element::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BehaviorStateComplete_EnumType_Element& BehaviorStateComplete_EnumType_Element::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

BehaviorStateComplete_EnumType_Element* BehaviorStateComplete_EnumType_Element::New(::google::protobuf::Arena* arena) const {
  BehaviorStateComplete_EnumType_Element* n = new BehaviorStateComplete_EnumType_Element;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BehaviorStateComplete_EnumType_Element::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BehaviorStateComplete_EnumType_Element::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.BehaviorStateComplete.EnumType.Element.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.BehaviorStateComplete.EnumType.Element)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.BehaviorStateComplete.EnumType.Element)
  return false;
#undef DO_
}

void BehaviorStateComplete_EnumType_Element::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.EnumType.Element.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.BehaviorStateComplete.EnumType.Element)
}

::google::protobuf::uint8* BehaviorStateComplete_EnumType_Element::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 value = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.EnumType.Element.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.BehaviorStateComplete.EnumType.Element)
  return target;
}

size_t BehaviorStateComplete_EnumType_Element::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  return total_size;
}
size_t BehaviorStateComplete_EnumType_Element::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorStateComplete_EnumType_Element::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  GOOGLE_DCHECK_NE(&from, this);
  const BehaviorStateComplete_EnumType_Element* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BehaviorStateComplete_EnumType_Element>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.BehaviorStateComplete.EnumType.Element)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.BehaviorStateComplete.EnumType.Element)
    MergeFrom(*source);
  }
}

void BehaviorStateComplete_EnumType_Element::MergeFrom(const BehaviorStateComplete_EnumType_Element& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BehaviorStateComplete_EnumType_Element::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorStateComplete_EnumType_Element::CopyFrom(const BehaviorStateComplete_EnumType_Element& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.BehaviorStateComplete.EnumType.Element)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorStateComplete_EnumType_Element::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void BehaviorStateComplete_EnumType_Element::Swap(BehaviorStateComplete_EnumType_Element* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BehaviorStateComplete_EnumType_Element::InternalSwap(BehaviorStateComplete_EnumType_Element* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BehaviorStateComplete_EnumType_Element::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviorStateComplete_EnumType_Element

// required int32 value = 1;
bool BehaviorStateComplete_EnumType_Element::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BehaviorStateComplete_EnumType_Element::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void BehaviorStateComplete_EnumType_Element::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void BehaviorStateComplete_EnumType_Element::clear_value() {
  value_ = 0;
  clear_has_value();
}
::google::protobuf::int32 BehaviorStateComplete_EnumType_Element::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.EnumType.Element.value)
  return value_;
}
void BehaviorStateComplete_EnumType_Element::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.EnumType.Element.value)
}

// required string name = 2;
bool BehaviorStateComplete_EnumType_Element::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BehaviorStateComplete_EnumType_Element::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void BehaviorStateComplete_EnumType_Element::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void BehaviorStateComplete_EnumType_Element::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& BehaviorStateComplete_EnumType_Element::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.EnumType.Element.name)
  return name_.GetNoArena();
}
void BehaviorStateComplete_EnumType_Element::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}
#if LANG_CXX11
void BehaviorStateComplete_EnumType_Element::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}
#endif
void BehaviorStateComplete_EnumType_Element::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}
void BehaviorStateComplete_EnumType_Element::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}
::std::string* BehaviorStateComplete_EnumType_Element::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.EnumType.Element.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BehaviorStateComplete_EnumType_Element::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.EnumType.Element.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BehaviorStateComplete_EnumType_Element::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BehaviorStateComplete_EnumType::kNameFieldNumber;
const int BehaviorStateComplete_EnumType::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BehaviorStateComplete_EnumType::BehaviorStateComplete_EnumType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.BehaviorStateComplete.EnumType)
}
BehaviorStateComplete_EnumType::BehaviorStateComplete_EnumType(const BehaviorStateComplete_EnumType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:naothmessages.BehaviorStateComplete.EnumType)
}

void BehaviorStateComplete_EnumType::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BehaviorStateComplete_EnumType::~BehaviorStateComplete_EnumType() {
  // @@protoc_insertion_point(destructor:naothmessages.BehaviorStateComplete.EnumType)
  SharedDtor();
}

void BehaviorStateComplete_EnumType::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BehaviorStateComplete_EnumType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorStateComplete_EnumType::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BehaviorStateComplete_EnumType& BehaviorStateComplete_EnumType::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

BehaviorStateComplete_EnumType* BehaviorStateComplete_EnumType::New(::google::protobuf::Arena* arena) const {
  BehaviorStateComplete_EnumType* n = new BehaviorStateComplete_EnumType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BehaviorStateComplete_EnumType::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.BehaviorStateComplete.EnumType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BehaviorStateComplete_EnumType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.BehaviorStateComplete.EnumType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.BehaviorStateComplete.EnumType.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.BehaviorStateComplete.EnumType.Element elements = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_elements()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.BehaviorStateComplete.EnumType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.BehaviorStateComplete.EnumType)
  return false;
#undef DO_
}

void BehaviorStateComplete_EnumType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.BehaviorStateComplete.EnumType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.EnumType.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .naothmessages.BehaviorStateComplete.EnumType.Element elements = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->elements(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.BehaviorStateComplete.EnumType)
}

::google::protobuf::uint8* BehaviorStateComplete_EnumType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.BehaviorStateComplete.EnumType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.EnumType.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .naothmessages.BehaviorStateComplete.EnumType.Element elements = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elements_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->elements(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.BehaviorStateComplete.EnumType)
  return target;
}

size_t BehaviorStateComplete_EnumType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.BehaviorStateComplete.EnumType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .naothmessages.BehaviorStateComplete.EnumType.Element elements = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->elements_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->elements(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorStateComplete_EnumType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.BehaviorStateComplete.EnumType)
  GOOGLE_DCHECK_NE(&from, this);
  const BehaviorStateComplete_EnumType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BehaviorStateComplete_EnumType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.BehaviorStateComplete.EnumType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.BehaviorStateComplete.EnumType)
    MergeFrom(*source);
  }
}

void BehaviorStateComplete_EnumType::MergeFrom(const BehaviorStateComplete_EnumType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.BehaviorStateComplete.EnumType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void BehaviorStateComplete_EnumType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.BehaviorStateComplete.EnumType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorStateComplete_EnumType::CopyFrom(const BehaviorStateComplete_EnumType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.BehaviorStateComplete.EnumType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorStateComplete_EnumType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->elements())) return false;
  return true;
}

void BehaviorStateComplete_EnumType::Swap(BehaviorStateComplete_EnumType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BehaviorStateComplete_EnumType::InternalSwap(BehaviorStateComplete_EnumType* other) {
  using std::swap;
  elements_.InternalSwap(&other->elements_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BehaviorStateComplete_EnumType::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviorStateComplete_EnumType

// required string name = 1;
bool BehaviorStateComplete_EnumType::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BehaviorStateComplete_EnumType::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void BehaviorStateComplete_EnumType::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void BehaviorStateComplete_EnumType::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& BehaviorStateComplete_EnumType::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.EnumType.name)
  return name_.GetNoArena();
}
void BehaviorStateComplete_EnumType::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.EnumType.name)
}
#if LANG_CXX11
void BehaviorStateComplete_EnumType::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.EnumType.name)
}
#endif
void BehaviorStateComplete_EnumType::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.EnumType.name)
}
void BehaviorStateComplete_EnumType::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.EnumType.name)
}
::std::string* BehaviorStateComplete_EnumType::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.EnumType.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BehaviorStateComplete_EnumType::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.EnumType.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BehaviorStateComplete_EnumType::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.EnumType.name)
}

// repeated .naothmessages.BehaviorStateComplete.EnumType.Element elements = 2;
int BehaviorStateComplete_EnumType::elements_size() const {
  return elements_.size();
}
void BehaviorStateComplete_EnumType::clear_elements() {
  elements_.Clear();
}
const ::naothmessages::BehaviorStateComplete_EnumType_Element& BehaviorStateComplete_EnumType::elements(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.EnumType.elements)
  return elements_.Get(index);
}
::naothmessages::BehaviorStateComplete_EnumType_Element* BehaviorStateComplete_EnumType::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.EnumType.elements)
  return elements_.Mutable(index);
}
::naothmessages::BehaviorStateComplete_EnumType_Element* BehaviorStateComplete_EnumType::add_elements() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.EnumType.elements)
  return elements_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType_Element >*
BehaviorStateComplete_EnumType::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.EnumType.elements)
  return &elements_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType_Element >&
BehaviorStateComplete_EnumType::elements() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.EnumType.elements)
  return elements_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BehaviorStateComplete_Option_State::kNameFieldNumber;
const int BehaviorStateComplete_Option_State::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BehaviorStateComplete_Option_State::BehaviorStateComplete_Option_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.BehaviorStateComplete.Option.State)
}
BehaviorStateComplete_Option_State::BehaviorStateComplete_Option_State(const BehaviorStateComplete_Option_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  target_ = from.target_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.BehaviorStateComplete.Option.State)
}

void BehaviorStateComplete_Option_State::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_ = false;
}

BehaviorStateComplete_Option_State::~BehaviorStateComplete_Option_State() {
  // @@protoc_insertion_point(destructor:naothmessages.BehaviorStateComplete.Option.State)
  SharedDtor();
}

void BehaviorStateComplete_Option_State::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BehaviorStateComplete_Option_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorStateComplete_Option_State::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BehaviorStateComplete_Option_State& BehaviorStateComplete_Option_State::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

BehaviorStateComplete_Option_State* BehaviorStateComplete_Option_State::New(::google::protobuf::Arena* arena) const {
  BehaviorStateComplete_Option_State* n = new BehaviorStateComplete_Option_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BehaviorStateComplete_Option_State::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.BehaviorStateComplete.Option.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  target_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BehaviorStateComplete_Option_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.BehaviorStateComplete.Option.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.BehaviorStateComplete.Option.State.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.BehaviorStateComplete.Option.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.BehaviorStateComplete.Option.State)
  return false;
#undef DO_
}

void BehaviorStateComplete_Option_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.BehaviorStateComplete.Option.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.Option.State.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool target = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.BehaviorStateComplete.Option.State)
}

::google::protobuf::uint8* BehaviorStateComplete_Option_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.BehaviorStateComplete.Option.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.Option.State.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bool target = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.BehaviorStateComplete.Option.State)
  return target;
}

size_t BehaviorStateComplete_Option_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.BehaviorStateComplete.Option.State)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // optional bool target = 2;
  if (has_target()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorStateComplete_Option_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.BehaviorStateComplete.Option.State)
  GOOGLE_DCHECK_NE(&from, this);
  const BehaviorStateComplete_Option_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BehaviorStateComplete_Option_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.BehaviorStateComplete.Option.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.BehaviorStateComplete.Option.State)
    MergeFrom(*source);
  }
}

void BehaviorStateComplete_Option_State::MergeFrom(const BehaviorStateComplete_Option_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.BehaviorStateComplete.Option.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      target_ = from.target_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BehaviorStateComplete_Option_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.BehaviorStateComplete.Option.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorStateComplete_Option_State::CopyFrom(const BehaviorStateComplete_Option_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.BehaviorStateComplete.Option.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorStateComplete_Option_State::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void BehaviorStateComplete_Option_State::Swap(BehaviorStateComplete_Option_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BehaviorStateComplete_Option_State::InternalSwap(BehaviorStateComplete_Option_State* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(target_, other->target_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BehaviorStateComplete_Option_State::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviorStateComplete_Option_State

// required string name = 1;
bool BehaviorStateComplete_Option_State::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BehaviorStateComplete_Option_State::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void BehaviorStateComplete_Option_State::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void BehaviorStateComplete_Option_State::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& BehaviorStateComplete_Option_State::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.State.name)
  return name_.GetNoArena();
}
void BehaviorStateComplete_Option_State::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Option.State.name)
}
#if LANG_CXX11
void BehaviorStateComplete_Option_State::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.Option.State.name)
}
#endif
void BehaviorStateComplete_Option_State::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.Option.State.name)
}
void BehaviorStateComplete_Option_State::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.Option.State.name)
}
::std::string* BehaviorStateComplete_Option_State::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Option.State.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BehaviorStateComplete_Option_State::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.Option.State.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BehaviorStateComplete_Option_State::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.Option.State.name)
}

// optional bool target = 2;
bool BehaviorStateComplete_Option_State::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BehaviorStateComplete_Option_State::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
void BehaviorStateComplete_Option_State::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
void BehaviorStateComplete_Option_State::clear_target() {
  target_ = false;
  clear_has_target();
}
bool BehaviorStateComplete_Option_State::target() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.State.target)
  return target_;
}
void BehaviorStateComplete_Option_State::set_target(bool value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Option.State.target)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BehaviorStateComplete_Option::kNameFieldNumber;
const int BehaviorStateComplete_Option::kStatesFieldNumber;
const int BehaviorStateComplete_Option::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BehaviorStateComplete_Option::BehaviorStateComplete_Option()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.BehaviorStateComplete.Option)
}
BehaviorStateComplete_Option::BehaviorStateComplete_Option(const BehaviorStateComplete_Option& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      parameters_(from.parameters_),
      states_(from.states_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:naothmessages.BehaviorStateComplete.Option)
}

void BehaviorStateComplete_Option::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BehaviorStateComplete_Option::~BehaviorStateComplete_Option() {
  // @@protoc_insertion_point(destructor:naothmessages.BehaviorStateComplete.Option)
  SharedDtor();
}

void BehaviorStateComplete_Option::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BehaviorStateComplete_Option::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorStateComplete_Option::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BehaviorStateComplete_Option& BehaviorStateComplete_Option::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

BehaviorStateComplete_Option* BehaviorStateComplete_Option::New(::google::protobuf::Arena* arena) const {
  BehaviorStateComplete_Option* n = new BehaviorStateComplete_Option;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BehaviorStateComplete_Option::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.BehaviorStateComplete.Option)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  states_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BehaviorStateComplete_Option::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.BehaviorStateComplete.Option)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.BehaviorStateComplete.Option.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.XABSLSymbol parameters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.BehaviorStateComplete.Option.State states = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_states()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.BehaviorStateComplete.Option)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.BehaviorStateComplete.Option)
  return false;
#undef DO_
}

void BehaviorStateComplete_Option::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.BehaviorStateComplete.Option)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.Option.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .naothmessages.XABSLSymbol parameters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parameters(static_cast<int>(i)), output);
  }

  // repeated .naothmessages.BehaviorStateComplete.Option.State states = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->states_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->states(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.BehaviorStateComplete.Option)
}

::google::protobuf::uint8* BehaviorStateComplete_Option::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.BehaviorStateComplete.Option)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.Option.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .naothmessages.XABSLSymbol parameters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->parameters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .naothmessages.BehaviorStateComplete.Option.State states = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->states_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->states(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.BehaviorStateComplete.Option)
  return target;
}

size_t BehaviorStateComplete_Option::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.BehaviorStateComplete.Option)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .naothmessages.XABSLSymbol parameters = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parameters(static_cast<int>(i)));
    }
  }

  // repeated .naothmessages.BehaviorStateComplete.Option.State states = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->states_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->states(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorStateComplete_Option::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.BehaviorStateComplete.Option)
  GOOGLE_DCHECK_NE(&from, this);
  const BehaviorStateComplete_Option* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BehaviorStateComplete_Option>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.BehaviorStateComplete.Option)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.BehaviorStateComplete.Option)
    MergeFrom(*source);
  }
}

void BehaviorStateComplete_Option::MergeFrom(const BehaviorStateComplete_Option& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.BehaviorStateComplete.Option)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  states_.MergeFrom(from.states_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void BehaviorStateComplete_Option::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.BehaviorStateComplete.Option)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorStateComplete_Option::CopyFrom(const BehaviorStateComplete_Option& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.BehaviorStateComplete.Option)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorStateComplete_Option::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->parameters())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->states())) return false;
  return true;
}

void BehaviorStateComplete_Option::Swap(BehaviorStateComplete_Option* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BehaviorStateComplete_Option::InternalSwap(BehaviorStateComplete_Option* other) {
  using std::swap;
  parameters_.InternalSwap(&other->parameters_);
  states_.InternalSwap(&other->states_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BehaviorStateComplete_Option::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviorStateComplete_Option

// required string name = 1;
bool BehaviorStateComplete_Option::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BehaviorStateComplete_Option::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void BehaviorStateComplete_Option::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void BehaviorStateComplete_Option::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& BehaviorStateComplete_Option::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.name)
  return name_.GetNoArena();
}
void BehaviorStateComplete_Option::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Option.name)
}
#if LANG_CXX11
void BehaviorStateComplete_Option::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.Option.name)
}
#endif
void BehaviorStateComplete_Option::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.Option.name)
}
void BehaviorStateComplete_Option::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.Option.name)
}
::std::string* BehaviorStateComplete_Option::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Option.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BehaviorStateComplete_Option::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.Option.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BehaviorStateComplete_Option::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.Option.name)
}

// repeated .naothmessages.BehaviorStateComplete.Option.State states = 3;
int BehaviorStateComplete_Option::states_size() const {
  return states_.size();
}
void BehaviorStateComplete_Option::clear_states() {
  states_.Clear();
}
const ::naothmessages::BehaviorStateComplete_Option_State& BehaviorStateComplete_Option::states(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.states)
  return states_.Get(index);
}
::naothmessages::BehaviorStateComplete_Option_State* BehaviorStateComplete_Option::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Option.states)
  return states_.Mutable(index);
}
::naothmessages::BehaviorStateComplete_Option_State* BehaviorStateComplete_Option::add_states() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.Option.states)
  return states_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option_State >*
BehaviorStateComplete_Option::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.Option.states)
  return &states_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option_State >&
BehaviorStateComplete_Option::states() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.Option.states)
  return states_;
}

// repeated .naothmessages.XABSLSymbol parameters = 2;
int BehaviorStateComplete_Option::parameters_size() const {
  return parameters_.size();
}
void BehaviorStateComplete_Option::clear_parameters() {
  parameters_.Clear();
}
const ::naothmessages::XABSLSymbol& BehaviorStateComplete_Option::parameters(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.parameters)
  return parameters_.Get(index);
}
::naothmessages::XABSLSymbol* BehaviorStateComplete_Option::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Option.parameters)
  return parameters_.Mutable(index);
}
::naothmessages::XABSLSymbol* BehaviorStateComplete_Option::add_parameters() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.Option.parameters)
  return parameters_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLSymbol >*
BehaviorStateComplete_Option::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.Option.parameters)
  return &parameters_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLSymbol >&
BehaviorStateComplete_Option::parameters() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.Option.parameters)
  return parameters_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BehaviorStateComplete_Agent::kNameFieldNumber;
const int BehaviorStateComplete_Agent::kRootOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BehaviorStateComplete_Agent::BehaviorStateComplete_Agent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.BehaviorStateComplete.Agent)
}
BehaviorStateComplete_Agent::BehaviorStateComplete_Agent(const BehaviorStateComplete_Agent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  rootoption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rootoption()) {
    rootoption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rootoption_);
  }
  // @@protoc_insertion_point(copy_constructor:naothmessages.BehaviorStateComplete.Agent)
}

void BehaviorStateComplete_Agent::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rootoption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BehaviorStateComplete_Agent::~BehaviorStateComplete_Agent() {
  // @@protoc_insertion_point(destructor:naothmessages.BehaviorStateComplete.Agent)
  SharedDtor();
}

void BehaviorStateComplete_Agent::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rootoption_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BehaviorStateComplete_Agent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorStateComplete_Agent::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BehaviorStateComplete_Agent& BehaviorStateComplete_Agent::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

BehaviorStateComplete_Agent* BehaviorStateComplete_Agent::New(::google::protobuf::Arena* arena) const {
  BehaviorStateComplete_Agent* n = new BehaviorStateComplete_Agent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BehaviorStateComplete_Agent::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.BehaviorStateComplete.Agent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!rootoption_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*rootoption_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BehaviorStateComplete_Agent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.BehaviorStateComplete.Agent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.BehaviorStateComplete.Agent.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string rootOption = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rootoption()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rootoption().data(), static_cast<int>(this->rootoption().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.BehaviorStateComplete.Agent.rootOption");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.BehaviorStateComplete.Agent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.BehaviorStateComplete.Agent)
  return false;
#undef DO_
}

void BehaviorStateComplete_Agent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.BehaviorStateComplete.Agent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.Agent.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string rootOption = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rootoption().data(), static_cast<int>(this->rootoption().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.Agent.rootOption");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rootoption(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.BehaviorStateComplete.Agent)
}

::google::protobuf::uint8* BehaviorStateComplete_Agent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.BehaviorStateComplete.Agent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.Agent.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string rootOption = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rootoption().data(), static_cast<int>(this->rootoption().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.BehaviorStateComplete.Agent.rootOption");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rootoption(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.BehaviorStateComplete.Agent)
  return target;
}

size_t BehaviorStateComplete_Agent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:naothmessages.BehaviorStateComplete.Agent)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_rootoption()) {
    // required string rootOption = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rootoption());
  }

  return total_size;
}
size_t BehaviorStateComplete_Agent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.BehaviorStateComplete.Agent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string rootOption = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rootoption());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorStateComplete_Agent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.BehaviorStateComplete.Agent)
  GOOGLE_DCHECK_NE(&from, this);
  const BehaviorStateComplete_Agent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BehaviorStateComplete_Agent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.BehaviorStateComplete.Agent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.BehaviorStateComplete.Agent)
    MergeFrom(*source);
  }
}

void BehaviorStateComplete_Agent::MergeFrom(const BehaviorStateComplete_Agent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.BehaviorStateComplete.Agent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_rootoption();
      rootoption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rootoption_);
    }
  }
}

void BehaviorStateComplete_Agent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.BehaviorStateComplete.Agent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorStateComplete_Agent::CopyFrom(const BehaviorStateComplete_Agent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.BehaviorStateComplete.Agent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorStateComplete_Agent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void BehaviorStateComplete_Agent::Swap(BehaviorStateComplete_Agent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BehaviorStateComplete_Agent::InternalSwap(BehaviorStateComplete_Agent* other) {
  using std::swap;
  name_.Swap(&other->name_);
  rootoption_.Swap(&other->rootoption_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BehaviorStateComplete_Agent::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviorStateComplete_Agent

// required string name = 1;
bool BehaviorStateComplete_Agent::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BehaviorStateComplete_Agent::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void BehaviorStateComplete_Agent::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void BehaviorStateComplete_Agent::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& BehaviorStateComplete_Agent::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Agent.name)
  return name_.GetNoArena();
}
void BehaviorStateComplete_Agent::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Agent.name)
}
#if LANG_CXX11
void BehaviorStateComplete_Agent::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.Agent.name)
}
#endif
void BehaviorStateComplete_Agent::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.Agent.name)
}
void BehaviorStateComplete_Agent::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.Agent.name)
}
::std::string* BehaviorStateComplete_Agent::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Agent.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BehaviorStateComplete_Agent::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.Agent.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BehaviorStateComplete_Agent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.Agent.name)
}

// required string rootOption = 2;
bool BehaviorStateComplete_Agent::has_rootoption() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BehaviorStateComplete_Agent::set_has_rootoption() {
  _has_bits_[0] |= 0x00000002u;
}
void BehaviorStateComplete_Agent::clear_has_rootoption() {
  _has_bits_[0] &= ~0x00000002u;
}
void BehaviorStateComplete_Agent::clear_rootoption() {
  rootoption_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rootoption();
}
const ::std::string& BehaviorStateComplete_Agent::rootoption() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Agent.rootOption)
  return rootoption_.GetNoArena();
}
void BehaviorStateComplete_Agent::set_rootoption(const ::std::string& value) {
  set_has_rootoption();
  rootoption_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Agent.rootOption)
}
#if LANG_CXX11
void BehaviorStateComplete_Agent::set_rootoption(::std::string&& value) {
  set_has_rootoption();
  rootoption_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.Agent.rootOption)
}
#endif
void BehaviorStateComplete_Agent::set_rootoption(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rootoption();
  rootoption_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.Agent.rootOption)
}
void BehaviorStateComplete_Agent::set_rootoption(const char* value, size_t size) {
  set_has_rootoption();
  rootoption_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.Agent.rootOption)
}
::std::string* BehaviorStateComplete_Agent::mutable_rootoption() {
  set_has_rootoption();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Agent.rootOption)
  return rootoption_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BehaviorStateComplete_Agent::release_rootoption() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.Agent.rootOption)
  clear_has_rootoption();
  return rootoption_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BehaviorStateComplete_Agent::set_allocated_rootoption(::std::string* rootoption) {
  if (rootoption != NULL) {
    set_has_rootoption();
  } else {
    clear_has_rootoption();
  }
  rootoption_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rootoption);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.Agent.rootOption)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BehaviorStateComplete::kEnumerationsFieldNumber;
const int BehaviorStateComplete::kOptionsFieldNumber;
const int BehaviorStateComplete::kAgentsFieldNumber;
const int BehaviorStateComplete::kInputSymbolListFieldNumber;
const int BehaviorStateComplete::kOutputSymbolListFieldNumber;
const int BehaviorStateComplete::kFrameNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BehaviorStateComplete::BehaviorStateComplete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.BehaviorStateComplete)
}
BehaviorStateComplete::BehaviorStateComplete(const BehaviorStateComplete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      enumerations_(from.enumerations_),
      options_(from.options_),
      agents_(from.agents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_inputsymbollist()) {
    inputsymbollist_ = new ::naothmessages::SymbolValueList(*from.inputsymbollist_);
  } else {
    inputsymbollist_ = NULL;
  }
  if (from.has_outputsymbollist()) {
    outputsymbollist_ = new ::naothmessages::SymbolValueList(*from.outputsymbollist_);
  } else {
    outputsymbollist_ = NULL;
  }
  framenumber_ = from.framenumber_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.BehaviorStateComplete)
}

void BehaviorStateComplete::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&inputsymbollist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&framenumber_) -
      reinterpret_cast<char*>(&inputsymbollist_)) + sizeof(framenumber_));
}

BehaviorStateComplete::~BehaviorStateComplete() {
  // @@protoc_insertion_point(destructor:naothmessages.BehaviorStateComplete)
  SharedDtor();
}

void BehaviorStateComplete::SharedDtor() {
  if (this != internal_default_instance()) delete inputsymbollist_;
  if (this != internal_default_instance()) delete outputsymbollist_;
}

void BehaviorStateComplete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BehaviorStateComplete::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BehaviorStateComplete& BehaviorStateComplete::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

BehaviorStateComplete* BehaviorStateComplete::New(::google::protobuf::Arena* arena) const {
  BehaviorStateComplete* n = new BehaviorStateComplete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BehaviorStateComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.BehaviorStateComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enumerations_.Clear();
  options_.Clear();
  agents_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(inputsymbollist_ != NULL);
      inputsymbollist_->::naothmessages::SymbolValueList::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(outputsymbollist_ != NULL);
      outputsymbollist_->::naothmessages::SymbolValueList::Clear();
    }
  }
  framenumber_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BehaviorStateComplete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.BehaviorStateComplete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .naothmessages.BehaviorStateComplete.EnumType enumerations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_enumerations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.BehaviorStateComplete.Option options = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.BehaviorStateComplete.Agent agents = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_agents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .naothmessages.SymbolValueList inputSymbolList = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inputsymbollist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .naothmessages.SymbolValueList outputSymbolList = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_outputsymbollist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 frameNumber = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_framenumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &framenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.BehaviorStateComplete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.BehaviorStateComplete)
  return false;
#undef DO_
}

void BehaviorStateComplete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.BehaviorStateComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.BehaviorStateComplete.EnumType enumerations = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enumerations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->enumerations(static_cast<int>(i)), output);
  }

  // repeated .naothmessages.BehaviorStateComplete.Option options = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->options(static_cast<int>(i)), output);
  }

  // repeated .naothmessages.BehaviorStateComplete.Agent agents = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->agents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->agents(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .naothmessages.SymbolValueList inputSymbolList = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->inputsymbollist_, output);
  }

  // optional .naothmessages.SymbolValueList outputSymbolList = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->outputsymbollist_, output);
  }

  // optional uint32 frameNumber = 15;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->framenumber(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.BehaviorStateComplete)
}

::google::protobuf::uint8* BehaviorStateComplete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.BehaviorStateComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.BehaviorStateComplete.EnumType enumerations = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enumerations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->enumerations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .naothmessages.BehaviorStateComplete.Option options = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->options(static_cast<int>(i)), deterministic, target);
  }

  // repeated .naothmessages.BehaviorStateComplete.Agent agents = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->agents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->agents(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .naothmessages.SymbolValueList inputSymbolList = 13;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->inputsymbollist_, deterministic, target);
  }

  // optional .naothmessages.SymbolValueList outputSymbolList = 14;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->outputsymbollist_, deterministic, target);
  }

  // optional uint32 frameNumber = 15;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->framenumber(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.BehaviorStateComplete)
  return target;
}

size_t BehaviorStateComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.BehaviorStateComplete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .naothmessages.BehaviorStateComplete.EnumType enumerations = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->enumerations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->enumerations(static_cast<int>(i)));
    }
  }

  // repeated .naothmessages.BehaviorStateComplete.Option options = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->options(static_cast<int>(i)));
    }
  }

  // repeated .naothmessages.BehaviorStateComplete.Agent agents = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->agents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->agents(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .naothmessages.SymbolValueList inputSymbolList = 13;
    if (has_inputsymbollist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->inputsymbollist_);
    }

    // optional .naothmessages.SymbolValueList outputSymbolList = 14;
    if (has_outputsymbollist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->outputsymbollist_);
    }

    // optional uint32 frameNumber = 15;
    if (has_framenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->framenumber());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BehaviorStateComplete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.BehaviorStateComplete)
  GOOGLE_DCHECK_NE(&from, this);
  const BehaviorStateComplete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BehaviorStateComplete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.BehaviorStateComplete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.BehaviorStateComplete)
    MergeFrom(*source);
  }
}

void BehaviorStateComplete::MergeFrom(const BehaviorStateComplete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.BehaviorStateComplete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  enumerations_.MergeFrom(from.enumerations_);
  options_.MergeFrom(from.options_);
  agents_.MergeFrom(from.agents_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_inputsymbollist()->::naothmessages::SymbolValueList::MergeFrom(from.inputsymbollist());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_outputsymbollist()->::naothmessages::SymbolValueList::MergeFrom(from.outputsymbollist());
    }
    if (cached_has_bits & 0x00000004u) {
      framenumber_ = from.framenumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BehaviorStateComplete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.BehaviorStateComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BehaviorStateComplete::CopyFrom(const BehaviorStateComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.BehaviorStateComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BehaviorStateComplete::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->enumerations())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->options())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->agents())) return false;
  if (has_inputsymbollist()) {
    if (!this->inputsymbollist_->IsInitialized()) return false;
  }
  if (has_outputsymbollist()) {
    if (!this->outputsymbollist_->IsInitialized()) return false;
  }
  return true;
}

void BehaviorStateComplete::Swap(BehaviorStateComplete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BehaviorStateComplete::InternalSwap(BehaviorStateComplete* other) {
  using std::swap;
  enumerations_.InternalSwap(&other->enumerations_);
  options_.InternalSwap(&other->options_);
  agents_.InternalSwap(&other->agents_);
  swap(inputsymbollist_, other->inputsymbollist_);
  swap(outputsymbollist_, other->outputsymbollist_);
  swap(framenumber_, other->framenumber_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BehaviorStateComplete::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviorStateComplete

// repeated .naothmessages.BehaviorStateComplete.EnumType enumerations = 10;
int BehaviorStateComplete::enumerations_size() const {
  return enumerations_.size();
}
void BehaviorStateComplete::clear_enumerations() {
  enumerations_.Clear();
}
const ::naothmessages::BehaviorStateComplete_EnumType& BehaviorStateComplete::enumerations(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.enumerations)
  return enumerations_.Get(index);
}
::naothmessages::BehaviorStateComplete_EnumType* BehaviorStateComplete::mutable_enumerations(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.enumerations)
  return enumerations_.Mutable(index);
}
::naothmessages::BehaviorStateComplete_EnumType* BehaviorStateComplete::add_enumerations() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.enumerations)
  return enumerations_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType >*
BehaviorStateComplete::mutable_enumerations() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.enumerations)
  return &enumerations_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType >&
BehaviorStateComplete::enumerations() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.enumerations)
  return enumerations_;
}

// repeated .naothmessages.BehaviorStateComplete.Option options = 11;
int BehaviorStateComplete::options_size() const {
  return options_.size();
}
void BehaviorStateComplete::clear_options() {
  options_.Clear();
}
const ::naothmessages::BehaviorStateComplete_Option& BehaviorStateComplete::options(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.options)
  return options_.Get(index);
}
::naothmessages::BehaviorStateComplete_Option* BehaviorStateComplete::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.options)
  return options_.Mutable(index);
}
::naothmessages::BehaviorStateComplete_Option* BehaviorStateComplete::add_options() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.options)
  return options_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option >*
BehaviorStateComplete::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.options)
  return &options_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option >&
BehaviorStateComplete::options() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.options)
  return options_;
}

// repeated .naothmessages.BehaviorStateComplete.Agent agents = 12;
int BehaviorStateComplete::agents_size() const {
  return agents_.size();
}
void BehaviorStateComplete::clear_agents() {
  agents_.Clear();
}
const ::naothmessages::BehaviorStateComplete_Agent& BehaviorStateComplete::agents(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.agents)
  return agents_.Get(index);
}
::naothmessages::BehaviorStateComplete_Agent* BehaviorStateComplete::mutable_agents(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.agents)
  return agents_.Mutable(index);
}
::naothmessages::BehaviorStateComplete_Agent* BehaviorStateComplete::add_agents() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.agents)
  return agents_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Agent >*
BehaviorStateComplete::mutable_agents() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.agents)
  return &agents_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Agent >&
BehaviorStateComplete::agents() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.agents)
  return agents_;
}

// optional .naothmessages.SymbolValueList inputSymbolList = 13;
bool BehaviorStateComplete::has_inputsymbollist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BehaviorStateComplete::set_has_inputsymbollist() {
  _has_bits_[0] |= 0x00000001u;
}
void BehaviorStateComplete::clear_has_inputsymbollist() {
  _has_bits_[0] &= ~0x00000001u;
}
void BehaviorStateComplete::clear_inputsymbollist() {
  if (inputsymbollist_ != NULL) inputsymbollist_->::naothmessages::SymbolValueList::Clear();
  clear_has_inputsymbollist();
}
const ::naothmessages::SymbolValueList& BehaviorStateComplete::inputsymbollist() const {
  const ::naothmessages::SymbolValueList* p = inputsymbollist_;
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.inputSymbolList)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::SymbolValueList*>(
      &::naothmessages::_SymbolValueList_default_instance_);
}
::naothmessages::SymbolValueList* BehaviorStateComplete::mutable_inputsymbollist() {
  set_has_inputsymbollist();
  if (inputsymbollist_ == NULL) {
    inputsymbollist_ = new ::naothmessages::SymbolValueList;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.inputSymbolList)
  return inputsymbollist_;
}
::naothmessages::SymbolValueList* BehaviorStateComplete::release_inputsymbollist() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.inputSymbolList)
  clear_has_inputsymbollist();
  ::naothmessages::SymbolValueList* temp = inputsymbollist_;
  inputsymbollist_ = NULL;
  return temp;
}
void BehaviorStateComplete::set_allocated_inputsymbollist(::naothmessages::SymbolValueList* inputsymbollist) {
  delete inputsymbollist_;
  inputsymbollist_ = inputsymbollist;
  if (inputsymbollist) {
    set_has_inputsymbollist();
  } else {
    clear_has_inputsymbollist();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.inputSymbolList)
}

// optional .naothmessages.SymbolValueList outputSymbolList = 14;
bool BehaviorStateComplete::has_outputsymbollist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BehaviorStateComplete::set_has_outputsymbollist() {
  _has_bits_[0] |= 0x00000002u;
}
void BehaviorStateComplete::clear_has_outputsymbollist() {
  _has_bits_[0] &= ~0x00000002u;
}
void BehaviorStateComplete::clear_outputsymbollist() {
  if (outputsymbollist_ != NULL) outputsymbollist_->::naothmessages::SymbolValueList::Clear();
  clear_has_outputsymbollist();
}
const ::naothmessages::SymbolValueList& BehaviorStateComplete::outputsymbollist() const {
  const ::naothmessages::SymbolValueList* p = outputsymbollist_;
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.outputSymbolList)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::SymbolValueList*>(
      &::naothmessages::_SymbolValueList_default_instance_);
}
::naothmessages::SymbolValueList* BehaviorStateComplete::mutable_outputsymbollist() {
  set_has_outputsymbollist();
  if (outputsymbollist_ == NULL) {
    outputsymbollist_ = new ::naothmessages::SymbolValueList;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.outputSymbolList)
  return outputsymbollist_;
}
::naothmessages::SymbolValueList* BehaviorStateComplete::release_outputsymbollist() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.outputSymbolList)
  clear_has_outputsymbollist();
  ::naothmessages::SymbolValueList* temp = outputsymbollist_;
  outputsymbollist_ = NULL;
  return temp;
}
void BehaviorStateComplete::set_allocated_outputsymbollist(::naothmessages::SymbolValueList* outputsymbollist) {
  delete outputsymbollist_;
  outputsymbollist_ = outputsymbollist;
  if (outputsymbollist) {
    set_has_outputsymbollist();
  } else {
    clear_has_outputsymbollist();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.outputSymbolList)
}

// optional uint32 frameNumber = 15;
bool BehaviorStateComplete::has_framenumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BehaviorStateComplete::set_has_framenumber() {
  _has_bits_[0] |= 0x00000004u;
}
void BehaviorStateComplete::clear_has_framenumber() {
  _has_bits_[0] &= ~0x00000004u;
}
void BehaviorStateComplete::clear_framenumber() {
  framenumber_ = 0u;
  clear_has_framenumber();
}
::google::protobuf::uint32 BehaviorStateComplete::framenumber() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.frameNumber)
  return framenumber_;
}
void BehaviorStateComplete::set_framenumber(::google::protobuf::uint32 value) {
  set_has_framenumber();
  framenumber_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.frameNumber)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Module::kNameFieldNumber;
const int Module::kUsedRepresentationsFieldNumber;
const int Module::kProvidedRepresentationsFieldNumber;
const int Module::kActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Module::Module()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.Module)
}
Module::Module(const Module& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      usedrepresentations_(from.usedrepresentations_),
      providedrepresentations_(from.providedrepresentations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  active_ = from.active_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.Module)
}

void Module::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_ = false;
}

Module::~Module() {
  // @@protoc_insertion_point(destructor:naothmessages.Module)
  SharedDtor();
}

void Module::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Module::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Module::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Module& Module::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

Module* Module::New(::google::protobuf::Arena* arena) const {
  Module* n = new Module;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.Module)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usedrepresentations_.Clear();
  providedrepresentations_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  active_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.Module)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.Module.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string usedRepresentations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_usedrepresentations()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usedrepresentations(this->usedrepresentations_size() - 1).data(),
            static_cast<int>(this->usedrepresentations(this->usedrepresentations_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.Module.usedRepresentations");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string providedRepresentations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_providedrepresentations()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->providedrepresentations(this->providedrepresentations_size() - 1).data(),
            static_cast<int>(this->providedrepresentations(this->providedrepresentations_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.Module.providedRepresentations");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool active = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_active();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.Module)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.Module)
  return false;
#undef DO_
}

void Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.Module)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.Module.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string usedRepresentations = 2;
  for (int i = 0, n = this->usedrepresentations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usedrepresentations(i).data(), static_cast<int>(this->usedrepresentations(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.Module.usedRepresentations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->usedrepresentations(i), output);
  }

  // repeated string providedRepresentations = 3;
  for (int i = 0, n = this->providedrepresentations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->providedrepresentations(i).data(), static_cast<int>(this->providedrepresentations(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.Module.providedRepresentations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->providedrepresentations(i), output);
  }

  // optional bool active = 4 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->active(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.Module)
}

::google::protobuf::uint8* Module::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.Module)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.Module.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string usedRepresentations = 2;
  for (int i = 0, n = this->usedrepresentations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usedrepresentations(i).data(), static_cast<int>(this->usedrepresentations(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.Module.usedRepresentations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->usedrepresentations(i), target);
  }

  // repeated string providedRepresentations = 3;
  for (int i = 0, n = this->providedrepresentations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->providedrepresentations(i).data(), static_cast<int>(this->providedrepresentations(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.Module.providedRepresentations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->providedrepresentations(i), target);
  }

  // optional bool active = 4 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->active(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.Module)
  return target;
}

size_t Module::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.Module)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated string usedRepresentations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->usedrepresentations_size());
  for (int i = 0, n = this->usedrepresentations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->usedrepresentations(i));
  }

  // repeated string providedRepresentations = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->providedrepresentations_size());
  for (int i = 0, n = this->providedrepresentations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->providedrepresentations(i));
  }

  // optional bool active = 4 [default = false];
  if (has_active()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Module::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.Module)
  GOOGLE_DCHECK_NE(&from, this);
  const Module* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Module>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.Module)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.Module)
    MergeFrom(*source);
  }
}

void Module::MergeFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.Module)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usedrepresentations_.MergeFrom(from.usedrepresentations_);
  providedrepresentations_.MergeFrom(from.providedrepresentations_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      active_ = from.active_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Module::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Module::Swap(Module* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Module::InternalSwap(Module* other) {
  using std::swap;
  usedrepresentations_.InternalSwap(&other->usedrepresentations_);
  providedrepresentations_.InternalSwap(&other->providedrepresentations_);
  name_.Swap(&other->name_);
  swap(active_, other->active_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Module::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Module

// required string name = 1;
bool Module::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Module::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Module::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Module::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Module::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.Module.name)
  return name_.GetNoArena();
}
void Module::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.Module.name)
}
#if LANG_CXX11
void Module::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.Module.name)
}
#endif
void Module::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.Module.name)
}
void Module::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.Module.name)
}
::std::string* Module::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.Module.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Module::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.Module.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Module::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.Module.name)
}

// repeated string usedRepresentations = 2;
int Module::usedrepresentations_size() const {
  return usedrepresentations_.size();
}
void Module::clear_usedrepresentations() {
  usedrepresentations_.Clear();
}
const ::std::string& Module::usedrepresentations(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Module.usedRepresentations)
  return usedrepresentations_.Get(index);
}
::std::string* Module::mutable_usedrepresentations(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Module.usedRepresentations)
  return usedrepresentations_.Mutable(index);
}
void Module::set_usedrepresentations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:naothmessages.Module.usedRepresentations)
  usedrepresentations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Module::set_usedrepresentations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:naothmessages.Module.usedRepresentations)
  usedrepresentations_.Mutable(index)->assign(std::move(value));
}
#endif
void Module::set_usedrepresentations(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  usedrepresentations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:naothmessages.Module.usedRepresentations)
}
void Module::set_usedrepresentations(int index, const char* value, size_t size) {
  usedrepresentations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:naothmessages.Module.usedRepresentations)
}
::std::string* Module::add_usedrepresentations() {
  // @@protoc_insertion_point(field_add_mutable:naothmessages.Module.usedRepresentations)
  return usedrepresentations_.Add();
}
void Module::add_usedrepresentations(const ::std::string& value) {
  usedrepresentations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:naothmessages.Module.usedRepresentations)
}
#if LANG_CXX11
void Module::add_usedrepresentations(::std::string&& value) {
  usedrepresentations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:naothmessages.Module.usedRepresentations)
}
#endif
void Module::add_usedrepresentations(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  usedrepresentations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:naothmessages.Module.usedRepresentations)
}
void Module::add_usedrepresentations(const char* value, size_t size) {
  usedrepresentations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:naothmessages.Module.usedRepresentations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Module::usedrepresentations() const {
  // @@protoc_insertion_point(field_list:naothmessages.Module.usedRepresentations)
  return usedrepresentations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Module::mutable_usedrepresentations() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Module.usedRepresentations)
  return &usedrepresentations_;
}

// repeated string providedRepresentations = 3;
int Module::providedrepresentations_size() const {
  return providedrepresentations_.size();
}
void Module::clear_providedrepresentations() {
  providedrepresentations_.Clear();
}
const ::std::string& Module::providedrepresentations(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Module.providedRepresentations)
  return providedrepresentations_.Get(index);
}
::std::string* Module::mutable_providedrepresentations(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Module.providedRepresentations)
  return providedrepresentations_.Mutable(index);
}
void Module::set_providedrepresentations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:naothmessages.Module.providedRepresentations)
  providedrepresentations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Module::set_providedrepresentations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:naothmessages.Module.providedRepresentations)
  providedrepresentations_.Mutable(index)->assign(std::move(value));
}
#endif
void Module::set_providedrepresentations(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  providedrepresentations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:naothmessages.Module.providedRepresentations)
}
void Module::set_providedrepresentations(int index, const char* value, size_t size) {
  providedrepresentations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:naothmessages.Module.providedRepresentations)
}
::std::string* Module::add_providedrepresentations() {
  // @@protoc_insertion_point(field_add_mutable:naothmessages.Module.providedRepresentations)
  return providedrepresentations_.Add();
}
void Module::add_providedrepresentations(const ::std::string& value) {
  providedrepresentations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:naothmessages.Module.providedRepresentations)
}
#if LANG_CXX11
void Module::add_providedrepresentations(::std::string&& value) {
  providedrepresentations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:naothmessages.Module.providedRepresentations)
}
#endif
void Module::add_providedrepresentations(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  providedrepresentations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:naothmessages.Module.providedRepresentations)
}
void Module::add_providedrepresentations(const char* value, size_t size) {
  providedrepresentations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:naothmessages.Module.providedRepresentations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Module::providedrepresentations() const {
  // @@protoc_insertion_point(field_list:naothmessages.Module.providedRepresentations)
  return providedrepresentations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Module::mutable_providedrepresentations() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Module.providedRepresentations)
  return &providedrepresentations_;
}

// optional bool active = 4 [default = false];
bool Module::has_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Module::set_has_active() {
  _has_bits_[0] |= 0x00000002u;
}
void Module::clear_has_active() {
  _has_bits_[0] &= ~0x00000002u;
}
void Module::clear_active() {
  active_ = false;
  clear_has_active();
}
bool Module::active() const {
  // @@protoc_insertion_point(field_get:naothmessages.Module.active)
  return active_;
}
void Module::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.Module.active)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleList::kModulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleList::ModuleList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.ModuleList)
}
ModuleList::ModuleList(const ModuleList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      modules_(from.modules_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:naothmessages.ModuleList)
}

void ModuleList::SharedCtor() {
  _cached_size_ = 0;
}

ModuleList::~ModuleList() {
  // @@protoc_insertion_point(destructor:naothmessages.ModuleList)
  SharedDtor();
}

void ModuleList::SharedDtor() {
}

void ModuleList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModuleList::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleList& ModuleList::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModuleList* ModuleList::New(::google::protobuf::Arena* arena) const {
  ModuleList* n = new ModuleList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModuleList::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.ModuleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modules_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModuleList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.ModuleList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .naothmessages.Module modules = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_modules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.ModuleList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.ModuleList)
  return false;
#undef DO_
}

void ModuleList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.ModuleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.Module modules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->modules(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.ModuleList)
}

::google::protobuf::uint8* ModuleList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.ModuleList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.Module modules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->modules(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.ModuleList)
  return target;
}

size_t ModuleList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.ModuleList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .naothmessages.Module modules = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->modules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->modules(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModuleList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.ModuleList)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.ModuleList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.ModuleList)
    MergeFrom(*source);
  }
}

void ModuleList::MergeFrom(const ModuleList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.ModuleList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  modules_.MergeFrom(from.modules_);
}

void ModuleList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.ModuleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleList::CopyFrom(const ModuleList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.ModuleList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->modules())) return false;
  return true;
}

void ModuleList::Swap(ModuleList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleList::InternalSwap(ModuleList* other) {
  using std::swap;
  modules_.InternalSwap(&other->modules_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModuleList::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModuleList

// repeated .naothmessages.Module modules = 1;
int ModuleList::modules_size() const {
  return modules_.size();
}
void ModuleList::clear_modules() {
  modules_.Clear();
}
const ::naothmessages::Module& ModuleList::modules(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.ModuleList.modules)
  return modules_.Get(index);
}
::naothmessages::Module* ModuleList::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.ModuleList.modules)
  return modules_.Mutable(index);
}
::naothmessages::Module* ModuleList::add_modules() {
  // @@protoc_insertion_point(field_add:naothmessages.ModuleList.modules)
  return modules_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::Module >*
ModuleList::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.ModuleList.modules)
  return &modules_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::Module >&
ModuleList::modules() const {
  // @@protoc_insertion_point(field_list:naothmessages.ModuleList.modules)
  return modules_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugRequest_Item::kNameFieldNumber;
const int DebugRequest_Item::kDescriptionFieldNumber;
const int DebugRequest_Item::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugRequest_Item::DebugRequest_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.DebugRequest.Item)
}
DebugRequest_Item::DebugRequest_Item(const DebugRequest_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.DebugRequest.Item)
}

void DebugRequest_Item::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = false;
}

DebugRequest_Item::~DebugRequest_Item() {
  // @@protoc_insertion_point(destructor:naothmessages.DebugRequest.Item)
  SharedDtor();
}

void DebugRequest_Item::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebugRequest_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugRequest_Item::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugRequest_Item& DebugRequest_Item::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

DebugRequest_Item* DebugRequest_Item::New(::google::protobuf::Arena* arena) const {
  DebugRequest_Item* n = new DebugRequest_Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugRequest_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.DebugRequest.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
  }
  value_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DebugRequest_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.DebugRequest.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.DebugRequest.Item.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.DebugRequest.Item.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool value = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.DebugRequest.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.DebugRequest.Item)
  return false;
#undef DO_
}

void DebugRequest_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.DebugRequest.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.DebugRequest.Item.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string description = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.DebugRequest.Item.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // required bool value = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.DebugRequest.Item)
}

::google::protobuf::uint8* DebugRequest_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.DebugRequest.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.DebugRequest.Item.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string description = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.DebugRequest.Item.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // required bool value = 4 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.DebugRequest.Item)
  return target;
}

size_t DebugRequest_Item::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:naothmessages.DebugRequest.Item)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required bool value = 4 [default = false];
    total_size += 1 + 1;
  }

  return total_size;
}
size_t DebugRequest_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.DebugRequest.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required bool value = 4 [default = false];
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string description = 2;
  if (has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugRequest_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.DebugRequest.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugRequest_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugRequest_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.DebugRequest.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.DebugRequest.Item)
    MergeFrom(*source);
  }
}

void DebugRequest_Item::MergeFrom(const DebugRequest_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.DebugRequest.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000004u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DebugRequest_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.DebugRequest.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugRequest_Item::CopyFrom(const DebugRequest_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.DebugRequest.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugRequest_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void DebugRequest_Item::Swap(DebugRequest_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugRequest_Item::InternalSwap(DebugRequest_Item* other) {
  using std::swap;
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DebugRequest_Item::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugRequest_Item

// required string name = 1;
bool DebugRequest_Item::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DebugRequest_Item::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DebugRequest_Item::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DebugRequest_Item::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& DebugRequest_Item::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.DebugRequest.Item.name)
  return name_.GetNoArena();
}
void DebugRequest_Item::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.DebugRequest.Item.name)
}
#if LANG_CXX11
void DebugRequest_Item::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.DebugRequest.Item.name)
}
#endif
void DebugRequest_Item::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.DebugRequest.Item.name)
}
void DebugRequest_Item::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.DebugRequest.Item.name)
}
::std::string* DebugRequest_Item::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.DebugRequest.Item.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DebugRequest_Item::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.DebugRequest.Item.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DebugRequest_Item::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.DebugRequest.Item.name)
}

// optional string description = 2;
bool DebugRequest_Item::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DebugRequest_Item::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
void DebugRequest_Item::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
void DebugRequest_Item::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& DebugRequest_Item::description() const {
  // @@protoc_insertion_point(field_get:naothmessages.DebugRequest.Item.description)
  return description_.GetNoArena();
}
void DebugRequest_Item::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.DebugRequest.Item.description)
}
#if LANG_CXX11
void DebugRequest_Item::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.DebugRequest.Item.description)
}
#endif
void DebugRequest_Item::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.DebugRequest.Item.description)
}
void DebugRequest_Item::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.DebugRequest.Item.description)
}
::std::string* DebugRequest_Item::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:naothmessages.DebugRequest.Item.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DebugRequest_Item::release_description() {
  // @@protoc_insertion_point(field_release:naothmessages.DebugRequest.Item.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DebugRequest_Item::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.DebugRequest.Item.description)
}

// required bool value = 4 [default = false];
bool DebugRequest_Item::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DebugRequest_Item::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
void DebugRequest_Item::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void DebugRequest_Item::clear_value() {
  value_ = false;
  clear_has_value();
}
bool DebugRequest_Item::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.DebugRequest.Item.value)
  return value_;
}
void DebugRequest_Item::set_value(bool value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.DebugRequest.Item.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugRequest::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugRequest::DebugRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.DebugRequest)
}
DebugRequest::DebugRequest(const DebugRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:naothmessages.DebugRequest)
}

void DebugRequest::SharedCtor() {
  _cached_size_ = 0;
}

DebugRequest::~DebugRequest() {
  // @@protoc_insertion_point(destructor:naothmessages.DebugRequest)
  SharedDtor();
}

void DebugRequest::SharedDtor() {
}

void DebugRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugRequest::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugRequest& DebugRequest::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

DebugRequest* DebugRequest::New(::google::protobuf::Arena* arena) const {
  DebugRequest* n = new DebugRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.DebugRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DebugRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.DebugRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .naothmessages.DebugRequest.Item requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.DebugRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.DebugRequest)
  return false;
#undef DO_
}

void DebugRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.DebugRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.DebugRequest.Item requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->requests(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.DebugRequest)
}

::google::protobuf::uint8* DebugRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.DebugRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.DebugRequest.Item requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.DebugRequest)
  return target;
}

size_t DebugRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.DebugRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .naothmessages.DebugRequest.Item requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->requests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.DebugRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.DebugRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.DebugRequest)
    MergeFrom(*source);
  }
}

void DebugRequest::MergeFrom(const DebugRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.DebugRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void DebugRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.DebugRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugRequest::CopyFrom(const DebugRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.DebugRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->requests())) return false;
  return true;
}

void DebugRequest::Swap(DebugRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugRequest::InternalSwap(DebugRequest* other) {
  using std::swap;
  requests_.InternalSwap(&other->requests_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DebugRequest::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugRequest

// repeated .naothmessages.DebugRequest.Item requests = 1;
int DebugRequest::requests_size() const {
  return requests_.size();
}
void DebugRequest::clear_requests() {
  requests_.Clear();
}
const ::naothmessages::DebugRequest_Item& DebugRequest::requests(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.DebugRequest.requests)
  return requests_.Get(index);
}
::naothmessages::DebugRequest_Item* DebugRequest::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.DebugRequest.requests)
  return requests_.Mutable(index);
}
::naothmessages::DebugRequest_Item* DebugRequest::add_requests() {
  // @@protoc_insertion_point(field_add:naothmessages.DebugRequest.requests)
  return requests_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::DebugRequest_Item >*
DebugRequest::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.DebugRequest.requests)
  return &requests_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::DebugRequest_Item >&
DebugRequest::requests() const {
  // @@protoc_insertion_point(field_list:naothmessages.DebugRequest.requests)
  return requests_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureKeyPoint::kPtFieldNumber;
const int FeatureKeyPoint::kSizeFieldNumber;
const int FeatureKeyPoint::kAngleFieldNumber;
const int FeatureKeyPoint::kResponseFieldNumber;
const int FeatureKeyPoint::kOctaveFieldNumber;
const int FeatureKeyPoint::kClassIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureKeyPoint::FeatureKeyPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.FeatureKeyPoint)
}
FeatureKeyPoint::FeatureKeyPoint(const FeatureKeyPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pt()) {
    pt_ = new ::naothmessages::FloatVector2(*from.pt_);
  } else {
    pt_ = NULL;
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&class_id_) -
    reinterpret_cast<char*>(&size_)) + sizeof(class_id_));
  // @@protoc_insertion_point(copy_constructor:naothmessages.FeatureKeyPoint)
}

void FeatureKeyPoint::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&class_id_) -
      reinterpret_cast<char*>(&pt_)) + sizeof(class_id_));
}

FeatureKeyPoint::~FeatureKeyPoint() {
  // @@protoc_insertion_point(destructor:naothmessages.FeatureKeyPoint)
  SharedDtor();
}

void FeatureKeyPoint::SharedDtor() {
  if (this != internal_default_instance()) delete pt_;
}

void FeatureKeyPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FeatureKeyPoint::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeatureKeyPoint& FeatureKeyPoint::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

FeatureKeyPoint* FeatureKeyPoint::New(::google::protobuf::Arena* arena) const {
  FeatureKeyPoint* n = new FeatureKeyPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FeatureKeyPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.FeatureKeyPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_pt()) {
    GOOGLE_DCHECK(pt_ != NULL);
    pt_->::naothmessages::FloatVector2::Clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 62u) {
    ::memset(&size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&class_id_) -
        reinterpret_cast<char*>(&size_)) + sizeof(class_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FeatureKeyPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.FeatureKeyPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .naothmessages.FloatVector2 pt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_angle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float response = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 octave = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_octave();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &octave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 class_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_class_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.FeatureKeyPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.FeatureKeyPoint)
  return false;
#undef DO_
}

void FeatureKeyPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.FeatureKeyPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .naothmessages.FloatVector2 pt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pt_, output);
  }

  // required float size = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->size(), output);
  }

  // required float angle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  // required float response = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->response(), output);
  }

  // required int32 octave = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->octave(), output);
  }

  // required int32 class_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->class_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.FeatureKeyPoint)
}

::google::protobuf::uint8* FeatureKeyPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.FeatureKeyPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .naothmessages.FloatVector2 pt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pt_, deterministic, target);
  }

  // required float size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->size(), target);
  }

  // required float angle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  // required float response = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->response(), target);
  }

  // required int32 octave = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->octave(), target);
  }

  // required int32 class_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->class_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.FeatureKeyPoint)
  return target;
}

size_t FeatureKeyPoint::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:naothmessages.FeatureKeyPoint)
  size_t total_size = 0;

  if (has_pt()) {
    // required .naothmessages.FloatVector2 pt = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pt_);
  }

  if (has_size()) {
    // required float size = 2;
    total_size += 1 + 4;
  }

  if (has_angle()) {
    // required float angle = 3;
    total_size += 1 + 4;
  }

  if (has_response()) {
    // required float response = 4;
    total_size += 1 + 4;
  }

  if (has_octave()) {
    // required int32 octave = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->octave());
  }

  if (has_class_id()) {
    // required int32 class_id = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->class_id());
  }

  return total_size;
}
size_t FeatureKeyPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.FeatureKeyPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required .naothmessages.FloatVector2 pt = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pt_);

    // required float size = 2;
    total_size += 1 + 4;

    // required float angle = 3;
    total_size += 1 + 4;

    // required float response = 4;
    total_size += 1 + 4;

    // required int32 octave = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->octave());

    // required int32 class_id = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->class_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FeatureKeyPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.FeatureKeyPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureKeyPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeatureKeyPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.FeatureKeyPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.FeatureKeyPoint)
    MergeFrom(*source);
  }
}

void FeatureKeyPoint::MergeFrom(const FeatureKeyPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.FeatureKeyPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pt()->::naothmessages::FloatVector2::MergeFrom(from.pt());
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      angle_ = from.angle_;
    }
    if (cached_has_bits & 0x00000008u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000010u) {
      octave_ = from.octave_;
    }
    if (cached_has_bits & 0x00000020u) {
      class_id_ = from.class_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FeatureKeyPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.FeatureKeyPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureKeyPoint::CopyFrom(const FeatureKeyPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.FeatureKeyPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureKeyPoint::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_pt()) {
    if (!this->pt_->IsInitialized()) return false;
  }
  return true;
}

void FeatureKeyPoint::Swap(FeatureKeyPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureKeyPoint::InternalSwap(FeatureKeyPoint* other) {
  using std::swap;
  swap(pt_, other->pt_);
  swap(size_, other->size_);
  swap(angle_, other->angle_);
  swap(response_, other->response_);
  swap(octave_, other->octave_);
  swap(class_id_, other->class_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FeatureKeyPoint::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FeatureKeyPoint

// required .naothmessages.FloatVector2 pt = 1;
bool FeatureKeyPoint::has_pt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FeatureKeyPoint::set_has_pt() {
  _has_bits_[0] |= 0x00000001u;
}
void FeatureKeyPoint::clear_has_pt() {
  _has_bits_[0] &= ~0x00000001u;
}
void FeatureKeyPoint::clear_pt() {
  if (pt_ != NULL) pt_->::naothmessages::FloatVector2::Clear();
  clear_has_pt();
}
const ::naothmessages::FloatVector2& FeatureKeyPoint::pt() const {
  const ::naothmessages::FloatVector2* p = pt_;
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::FloatVector2*>(
      &::naothmessages::_FloatVector2_default_instance_);
}
::naothmessages::FloatVector2* FeatureKeyPoint::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::naothmessages::FloatVector2;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureKeyPoint.pt)
  return pt_;
}
::naothmessages::FloatVector2* FeatureKeyPoint::release_pt() {
  // @@protoc_insertion_point(field_release:naothmessages.FeatureKeyPoint.pt)
  clear_has_pt();
  ::naothmessages::FloatVector2* temp = pt_;
  pt_ = NULL;
  return temp;
}
void FeatureKeyPoint::set_allocated_pt(::naothmessages::FloatVector2* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.FeatureKeyPoint.pt)
}

// required float size = 2;
bool FeatureKeyPoint::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FeatureKeyPoint::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
void FeatureKeyPoint::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
void FeatureKeyPoint::clear_size() {
  size_ = 0;
  clear_has_size();
}
float FeatureKeyPoint::size() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.size)
  return size_;
}
void FeatureKeyPoint::set_size(float value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.size)
}

// required float angle = 3;
bool FeatureKeyPoint::has_angle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FeatureKeyPoint::set_has_angle() {
  _has_bits_[0] |= 0x00000004u;
}
void FeatureKeyPoint::clear_has_angle() {
  _has_bits_[0] &= ~0x00000004u;
}
void FeatureKeyPoint::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
float FeatureKeyPoint::angle() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.angle)
  return angle_;
}
void FeatureKeyPoint::set_angle(float value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.angle)
}

// required float response = 4;
bool FeatureKeyPoint::has_response() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FeatureKeyPoint::set_has_response() {
  _has_bits_[0] |= 0x00000008u;
}
void FeatureKeyPoint::clear_has_response() {
  _has_bits_[0] &= ~0x00000008u;
}
void FeatureKeyPoint::clear_response() {
  response_ = 0;
  clear_has_response();
}
float FeatureKeyPoint::response() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.response)
  return response_;
}
void FeatureKeyPoint::set_response(float value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.response)
}

// required int32 octave = 5;
bool FeatureKeyPoint::has_octave() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FeatureKeyPoint::set_has_octave() {
  _has_bits_[0] |= 0x00000010u;
}
void FeatureKeyPoint::clear_has_octave() {
  _has_bits_[0] &= ~0x00000010u;
}
void FeatureKeyPoint::clear_octave() {
  octave_ = 0;
  clear_has_octave();
}
::google::protobuf::int32 FeatureKeyPoint::octave() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.octave)
  return octave_;
}
void FeatureKeyPoint::set_octave(::google::protobuf::int32 value) {
  set_has_octave();
  octave_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.octave)
}

// required int32 class_id = 6;
bool FeatureKeyPoint::has_class_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void FeatureKeyPoint::set_has_class_id() {
  _has_bits_[0] |= 0x00000020u;
}
void FeatureKeyPoint::clear_has_class_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void FeatureKeyPoint::clear_class_id() {
  class_id_ = 0;
  clear_has_class_id();
}
::google::protobuf::int32 FeatureKeyPoint::class_id() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.class_id)
  return class_id_;
}
void FeatureKeyPoint::set_class_id(::google::protobuf::int32 value) {
  set_has_class_id();
  class_id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.class_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureDetectionResult::kGrayScaleImageFieldNumber;
const int FeatureDetectionResult::kKeyPointsFieldNumber;
const int FeatureDetectionResult::kDescriptorsFieldNumber;
const int FeatureDetectionResult::kNamesForKeyPointsFieldNumber;
const int FeatureDetectionResult::kNumberOfFeatureElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureDetectionResult::FeatureDetectionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.FeatureDetectionResult)
}
FeatureDetectionResult::FeatureDetectionResult(const FeatureDetectionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      keypoints_(from.keypoints_),
      descriptors_(from.descriptors_),
      namesforkeypoints_(from.namesforkeypoints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grayscaleimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_grayscaleimage()) {
    grayscaleimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grayscaleimage_);
  }
  numberoffeatureelements_ = from.numberoffeatureelements_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.FeatureDetectionResult)
}

void FeatureDetectionResult::SharedCtor() {
  _cached_size_ = 0;
  grayscaleimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numberoffeatureelements_ = 64;
}

FeatureDetectionResult::~FeatureDetectionResult() {
  // @@protoc_insertion_point(destructor:naothmessages.FeatureDetectionResult)
  SharedDtor();
}

void FeatureDetectionResult::SharedDtor() {
  grayscaleimage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FeatureDetectionResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FeatureDetectionResult::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeatureDetectionResult& FeatureDetectionResult::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

FeatureDetectionResult* FeatureDetectionResult::New(::google::protobuf::Arena* arena) const {
  FeatureDetectionResult* n = new FeatureDetectionResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FeatureDetectionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.FeatureDetectionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keypoints_.Clear();
  descriptors_.Clear();
  namesforkeypoints_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!grayscaleimage_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*grayscaleimage_.UnsafeRawStringPointer())->clear();
    }
    numberoffeatureelements_ = 64;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FeatureDetectionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.FeatureDetectionResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes grayScaleImage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_grayscaleimage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.FeatureKeyPoint keyPoints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_keypoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.SingleDescriptor descriptors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string namesForKeyPoints = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_namesforkeypoints()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->namesforkeypoints(this->namesforkeypoints_size() - 1).data(),
            static_cast<int>(this->namesforkeypoints(this->namesforkeypoints_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.FeatureDetectionResult.namesForKeyPoints");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 numberOfFeatureElements = 5 [default = 64];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_numberoffeatureelements();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numberoffeatureelements_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.FeatureDetectionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.FeatureDetectionResult)
  return false;
#undef DO_
}

void FeatureDetectionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.FeatureDetectionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes grayScaleImage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->grayscaleimage(), output);
  }

  // repeated .naothmessages.FeatureKeyPoint keyPoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keypoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->keypoints(static_cast<int>(i)), output);
  }

  // repeated .naothmessages.SingleDescriptor descriptors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->descriptors(static_cast<int>(i)), output);
  }

  // repeated string namesForKeyPoints = 4;
  for (int i = 0, n = this->namesforkeypoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->namesforkeypoints(i).data(), static_cast<int>(this->namesforkeypoints(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.FeatureDetectionResult.namesForKeyPoints");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->namesforkeypoints(i), output);
  }

  // optional int32 numberOfFeatureElements = 5 [default = 64];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->numberoffeatureelements(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.FeatureDetectionResult)
}

::google::protobuf::uint8* FeatureDetectionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.FeatureDetectionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes grayScaleImage = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->grayscaleimage(), target);
  }

  // repeated .naothmessages.FeatureKeyPoint keyPoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keypoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->keypoints(static_cast<int>(i)), deterministic, target);
  }

  // repeated .naothmessages.SingleDescriptor descriptors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->descriptors(static_cast<int>(i)), deterministic, target);
  }

  // repeated string namesForKeyPoints = 4;
  for (int i = 0, n = this->namesforkeypoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->namesforkeypoints(i).data(), static_cast<int>(this->namesforkeypoints(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.FeatureDetectionResult.namesForKeyPoints");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->namesforkeypoints(i), target);
  }

  // optional int32 numberOfFeatureElements = 5 [default = 64];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->numberoffeatureelements(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.FeatureDetectionResult)
  return target;
}

size_t FeatureDetectionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.FeatureDetectionResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes grayScaleImage = 1;
  if (has_grayscaleimage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->grayscaleimage());
  }
  // repeated .naothmessages.FeatureKeyPoint keyPoints = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->keypoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->keypoints(static_cast<int>(i)));
    }
  }

  // repeated .naothmessages.SingleDescriptor descriptors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->descriptors(static_cast<int>(i)));
    }
  }

  // repeated string namesForKeyPoints = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->namesforkeypoints_size());
  for (int i = 0, n = this->namesforkeypoints_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->namesforkeypoints(i));
  }

  // optional int32 numberOfFeatureElements = 5 [default = 64];
  if (has_numberoffeatureelements()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numberoffeatureelements());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FeatureDetectionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.FeatureDetectionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureDetectionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeatureDetectionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.FeatureDetectionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.FeatureDetectionResult)
    MergeFrom(*source);
  }
}

void FeatureDetectionResult::MergeFrom(const FeatureDetectionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.FeatureDetectionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keypoints_.MergeFrom(from.keypoints_);
  descriptors_.MergeFrom(from.descriptors_);
  namesforkeypoints_.MergeFrom(from.namesforkeypoints_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_grayscaleimage();
      grayscaleimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grayscaleimage_);
    }
    if (cached_has_bits & 0x00000002u) {
      numberoffeatureelements_ = from.numberoffeatureelements_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FeatureDetectionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.FeatureDetectionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureDetectionResult::CopyFrom(const FeatureDetectionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.FeatureDetectionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureDetectionResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->keypoints())) return false;
  return true;
}

void FeatureDetectionResult::Swap(FeatureDetectionResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureDetectionResult::InternalSwap(FeatureDetectionResult* other) {
  using std::swap;
  keypoints_.InternalSwap(&other->keypoints_);
  descriptors_.InternalSwap(&other->descriptors_);
  namesforkeypoints_.InternalSwap(&other->namesforkeypoints_);
  grayscaleimage_.Swap(&other->grayscaleimage_);
  swap(numberoffeatureelements_, other->numberoffeatureelements_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FeatureDetectionResult::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FeatureDetectionResult

// required bytes grayScaleImage = 1;
bool FeatureDetectionResult::has_grayscaleimage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FeatureDetectionResult::set_has_grayscaleimage() {
  _has_bits_[0] |= 0x00000001u;
}
void FeatureDetectionResult::clear_has_grayscaleimage() {
  _has_bits_[0] &= ~0x00000001u;
}
void FeatureDetectionResult::clear_grayscaleimage() {
  grayscaleimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_grayscaleimage();
}
const ::std::string& FeatureDetectionResult::grayscaleimage() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.grayScaleImage)
  return grayscaleimage_.GetNoArena();
}
void FeatureDetectionResult::set_grayscaleimage(const ::std::string& value) {
  set_has_grayscaleimage();
  grayscaleimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.FeatureDetectionResult.grayScaleImage)
}
#if LANG_CXX11
void FeatureDetectionResult::set_grayscaleimage(::std::string&& value) {
  set_has_grayscaleimage();
  grayscaleimage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.FeatureDetectionResult.grayScaleImage)
}
#endif
void FeatureDetectionResult::set_grayscaleimage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_grayscaleimage();
  grayscaleimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.FeatureDetectionResult.grayScaleImage)
}
void FeatureDetectionResult::set_grayscaleimage(const void* value, size_t size) {
  set_has_grayscaleimage();
  grayscaleimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.FeatureDetectionResult.grayScaleImage)
}
::std::string* FeatureDetectionResult::mutable_grayscaleimage() {
  set_has_grayscaleimage();
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureDetectionResult.grayScaleImage)
  return grayscaleimage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FeatureDetectionResult::release_grayscaleimage() {
  // @@protoc_insertion_point(field_release:naothmessages.FeatureDetectionResult.grayScaleImage)
  clear_has_grayscaleimage();
  return grayscaleimage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FeatureDetectionResult::set_allocated_grayscaleimage(::std::string* grayscaleimage) {
  if (grayscaleimage != NULL) {
    set_has_grayscaleimage();
  } else {
    clear_has_grayscaleimage();
  }
  grayscaleimage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), grayscaleimage);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.FeatureDetectionResult.grayScaleImage)
}

// repeated .naothmessages.FeatureKeyPoint keyPoints = 2;
int FeatureDetectionResult::keypoints_size() const {
  return keypoints_.size();
}
void FeatureDetectionResult::clear_keypoints() {
  keypoints_.Clear();
}
const ::naothmessages::FeatureKeyPoint& FeatureDetectionResult::keypoints(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.keyPoints)
  return keypoints_.Get(index);
}
::naothmessages::FeatureKeyPoint* FeatureDetectionResult::mutable_keypoints(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureDetectionResult.keyPoints)
  return keypoints_.Mutable(index);
}
::naothmessages::FeatureKeyPoint* FeatureDetectionResult::add_keypoints() {
  // @@protoc_insertion_point(field_add:naothmessages.FeatureDetectionResult.keyPoints)
  return keypoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureKeyPoint >*
FeatureDetectionResult::mutable_keypoints() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureDetectionResult.keyPoints)
  return &keypoints_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureKeyPoint >&
FeatureDetectionResult::keypoints() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureDetectionResult.keyPoints)
  return keypoints_;
}

// repeated .naothmessages.SingleDescriptor descriptors = 3;
int FeatureDetectionResult::descriptors_size() const {
  return descriptors_.size();
}
void FeatureDetectionResult::clear_descriptors() {
  descriptors_.Clear();
}
const ::naothmessages::SingleDescriptor& FeatureDetectionResult::descriptors(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.descriptors)
  return descriptors_.Get(index);
}
::naothmessages::SingleDescriptor* FeatureDetectionResult::mutable_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureDetectionResult.descriptors)
  return descriptors_.Mutable(index);
}
::naothmessages::SingleDescriptor* FeatureDetectionResult::add_descriptors() {
  // @@protoc_insertion_point(field_add:naothmessages.FeatureDetectionResult.descriptors)
  return descriptors_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >*
FeatureDetectionResult::mutable_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureDetectionResult.descriptors)
  return &descriptors_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >&
FeatureDetectionResult::descriptors() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureDetectionResult.descriptors)
  return descriptors_;
}

// repeated string namesForKeyPoints = 4;
int FeatureDetectionResult::namesforkeypoints_size() const {
  return namesforkeypoints_.size();
}
void FeatureDetectionResult::clear_namesforkeypoints() {
  namesforkeypoints_.Clear();
}
const ::std::string& FeatureDetectionResult::namesforkeypoints(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return namesforkeypoints_.Get(index);
}
::std::string* FeatureDetectionResult::mutable_namesforkeypoints(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return namesforkeypoints_.Mutable(index);
}
void FeatureDetectionResult::set_namesforkeypoints(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  namesforkeypoints_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void FeatureDetectionResult::set_namesforkeypoints(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  namesforkeypoints_.Mutable(index)->assign(std::move(value));
}
#endif
void FeatureDetectionResult::set_namesforkeypoints(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  namesforkeypoints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
void FeatureDetectionResult::set_namesforkeypoints(int index, const char* value, size_t size) {
  namesforkeypoints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
::std::string* FeatureDetectionResult::add_namesforkeypoints() {
  // @@protoc_insertion_point(field_add_mutable:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return namesforkeypoints_.Add();
}
void FeatureDetectionResult::add_namesforkeypoints(const ::std::string& value) {
  namesforkeypoints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
#if LANG_CXX11
void FeatureDetectionResult::add_namesforkeypoints(::std::string&& value) {
  namesforkeypoints_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
#endif
void FeatureDetectionResult::add_namesforkeypoints(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  namesforkeypoints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
void FeatureDetectionResult::add_namesforkeypoints(const char* value, size_t size) {
  namesforkeypoints_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
FeatureDetectionResult::namesforkeypoints() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return namesforkeypoints_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
FeatureDetectionResult::mutable_namesforkeypoints() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return &namesforkeypoints_;
}

// optional int32 numberOfFeatureElements = 5 [default = 64];
bool FeatureDetectionResult::has_numberoffeatureelements() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FeatureDetectionResult::set_has_numberoffeatureelements() {
  _has_bits_[0] |= 0x00000002u;
}
void FeatureDetectionResult::clear_has_numberoffeatureelements() {
  _has_bits_[0] &= ~0x00000002u;
}
void FeatureDetectionResult::clear_numberoffeatureelements() {
  numberoffeatureelements_ = 64;
  clear_has_numberoffeatureelements();
}
::google::protobuf::int32 FeatureDetectionResult::numberoffeatureelements() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.numberOfFeatureElements)
  return numberoffeatureelements_;
}
void FeatureDetectionResult::set_numberoffeatureelements(::google::protobuf::int32 value) {
  set_has_numberoffeatureelements();
  numberoffeatureelements_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureDetectionResult.numberOfFeatureElements)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleDescriptor::kDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleDescriptor::SingleDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.SingleDescriptor)
}
SingleDescriptor::SingleDescriptor(const SingleDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      d_(from.d_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:naothmessages.SingleDescriptor)
}

void SingleDescriptor::SharedCtor() {
  _cached_size_ = 0;
}

SingleDescriptor::~SingleDescriptor() {
  // @@protoc_insertion_point(destructor:naothmessages.SingleDescriptor)
  SharedDtor();
}

void SingleDescriptor::SharedDtor() {
}

void SingleDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SingleDescriptor::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleDescriptor& SingleDescriptor::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

SingleDescriptor* SingleDescriptor::New(::google::protobuf::Arena* arena) const {
  SingleDescriptor* n = new SingleDescriptor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SingleDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.SingleDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  d_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SingleDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.SingleDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float d = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_d())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_d())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.SingleDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.SingleDescriptor)
  return false;
#undef DO_
}

void SingleDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.SingleDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float d = 1;
  for (int i = 0, n = this->d_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->d(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.SingleDescriptor)
}

::google::protobuf::uint8* SingleDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.SingleDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float d = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->d_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.SingleDescriptor)
  return target;
}

size_t SingleDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.SingleDescriptor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float d = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->d_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->d_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SingleDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.SingleDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.SingleDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.SingleDescriptor)
    MergeFrom(*source);
  }
}

void SingleDescriptor::MergeFrom(const SingleDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.SingleDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  d_.MergeFrom(from.d_);
}

void SingleDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.SingleDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleDescriptor::CopyFrom(const SingleDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.SingleDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleDescriptor::IsInitialized() const {
  return true;
}

void SingleDescriptor::Swap(SingleDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleDescriptor::InternalSwap(SingleDescriptor* other) {
  using std::swap;
  d_.InternalSwap(&other->d_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SingleDescriptor::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SingleDescriptor

// repeated float d = 1;
int SingleDescriptor::d_size() const {
  return d_.size();
}
void SingleDescriptor::clear_d() {
  d_.Clear();
}
float SingleDescriptor::d(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.SingleDescriptor.d)
  return d_.Get(index);
}
void SingleDescriptor::set_d(int index, float value) {
  d_.Set(index, value);
  // @@protoc_insertion_point(field_set:naothmessages.SingleDescriptor.d)
}
void SingleDescriptor::add_d(float value) {
  d_.Add(value);
  // @@protoc_insertion_point(field_add:naothmessages.SingleDescriptor.d)
}
const ::google::protobuf::RepeatedField< float >&
SingleDescriptor::d() const {
  // @@protoc_insertion_point(field_list:naothmessages.SingleDescriptor.d)
  return d_;
}
::google::protobuf::RepeatedField< float >*
SingleDescriptor::mutable_d() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.SingleDescriptor.d)
  return &d_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureClass::kNameFieldNumber;
const int FeatureClass::kSamplesFieldNumber;
const int FeatureClass::kObjectHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureClass::FeatureClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.FeatureClass)
}
FeatureClass::FeatureClass(const FeatureClass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      samples_(from.samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  objectheight_ = from.objectheight_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.FeatureClass)
}

void FeatureClass::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objectheight_ = 0;
}

FeatureClass::~FeatureClass() {
  // @@protoc_insertion_point(destructor:naothmessages.FeatureClass)
  SharedDtor();
}

void FeatureClass::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FeatureClass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FeatureClass::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeatureClass& FeatureClass::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

FeatureClass* FeatureClass::New(::google::protobuf::Arena* arena) const {
  FeatureClass* n = new FeatureClass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FeatureClass::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.FeatureClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  samples_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  objectheight_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FeatureClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.FeatureClass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "naothmessages.FeatureClass.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .naothmessages.SingleDescriptor samples = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_samples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double objectHeight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_objectheight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &objectheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.FeatureClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.FeatureClass)
  return false;
#undef DO_
}

void FeatureClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.FeatureClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.FeatureClass.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .naothmessages.SingleDescriptor samples = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->samples_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->samples(static_cast<int>(i)), output);
  }

  // optional double objectHeight = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->objectheight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.FeatureClass)
}

::google::protobuf::uint8* FeatureClass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.FeatureClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "naothmessages.FeatureClass.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .naothmessages.SingleDescriptor samples = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->samples_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->samples(static_cast<int>(i)), deterministic, target);
  }

  // optional double objectHeight = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->objectheight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.FeatureClass)
  return target;
}

size_t FeatureClass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.FeatureClass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .naothmessages.SingleDescriptor samples = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->samples_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->samples(static_cast<int>(i)));
    }
  }

  // optional double objectHeight = 3;
  if (has_objectheight()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FeatureClass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.FeatureClass)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureClass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeatureClass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.FeatureClass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.FeatureClass)
    MergeFrom(*source);
  }
}

void FeatureClass::MergeFrom(const FeatureClass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.FeatureClass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  samples_.MergeFrom(from.samples_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      objectheight_ = from.objectheight_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FeatureClass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.FeatureClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureClass::CopyFrom(const FeatureClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.FeatureClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureClass::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void FeatureClass::Swap(FeatureClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureClass::InternalSwap(FeatureClass* other) {
  using std::swap;
  samples_.InternalSwap(&other->samples_);
  name_.Swap(&other->name_);
  swap(objectheight_, other->objectheight_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FeatureClass::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FeatureClass

// required string name = 1;
bool FeatureClass::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FeatureClass::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void FeatureClass::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void FeatureClass::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& FeatureClass::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureClass.name)
  return name_.GetNoArena();
}
void FeatureClass::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.FeatureClass.name)
}
#if LANG_CXX11
void FeatureClass::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.FeatureClass.name)
}
#endif
void FeatureClass::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.FeatureClass.name)
}
void FeatureClass::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.FeatureClass.name)
}
::std::string* FeatureClass::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureClass.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FeatureClass::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.FeatureClass.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FeatureClass::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.FeatureClass.name)
}

// repeated .naothmessages.SingleDescriptor samples = 2;
int FeatureClass::samples_size() const {
  return samples_.size();
}
void FeatureClass::clear_samples() {
  samples_.Clear();
}
const ::naothmessages::SingleDescriptor& FeatureClass::samples(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureClass.samples)
  return samples_.Get(index);
}
::naothmessages::SingleDescriptor* FeatureClass::mutable_samples(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureClass.samples)
  return samples_.Mutable(index);
}
::naothmessages::SingleDescriptor* FeatureClass::add_samples() {
  // @@protoc_insertion_point(field_add:naothmessages.FeatureClass.samples)
  return samples_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >*
FeatureClass::mutable_samples() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureClass.samples)
  return &samples_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >&
FeatureClass::samples() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureClass.samples)
  return samples_;
}

// optional double objectHeight = 3;
bool FeatureClass::has_objectheight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FeatureClass::set_has_objectheight() {
  _has_bits_[0] |= 0x00000002u;
}
void FeatureClass::clear_has_objectheight() {
  _has_bits_[0] &= ~0x00000002u;
}
void FeatureClass::clear_objectheight() {
  objectheight_ = 0;
  clear_has_objectheight();
}
double FeatureClass::objectheight() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureClass.objectHeight)
  return objectheight_;
}
void FeatureClass::set_objectheight(double value) {
  set_has_objectheight();
  objectheight_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureClass.objectHeight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureTable::kClassesFieldNumber;
const int FeatureTable::kNumberOfFeatureElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureTable::FeatureTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Messages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:naothmessages.FeatureTable)
}
FeatureTable::FeatureTable(const FeatureTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      classes_(from.classes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  numberoffeatureelements_ = from.numberoffeatureelements_;
  // @@protoc_insertion_point(copy_constructor:naothmessages.FeatureTable)
}

void FeatureTable::SharedCtor() {
  _cached_size_ = 0;
  numberoffeatureelements_ = 64;
}

FeatureTable::~FeatureTable() {
  // @@protoc_insertion_point(destructor:naothmessages.FeatureTable)
  SharedDtor();
}

void FeatureTable::SharedDtor() {
}

void FeatureTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FeatureTable::descriptor() {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeatureTable& FeatureTable::default_instance() {
  protobuf_Messages_2eproto::InitDefaults();
  return *internal_default_instance();
}

FeatureTable* FeatureTable::New(::google::protobuf::Arena* arena) const {
  FeatureTable* n = new FeatureTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FeatureTable::Clear() {
// @@protoc_insertion_point(message_clear_start:naothmessages.FeatureTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  classes_.Clear();
  numberoffeatureelements_ = 64;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FeatureTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:naothmessages.FeatureTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .naothmessages.FeatureClass classes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_classes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 numberOfFeatureElements = 2 [default = 64];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_numberoffeatureelements();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numberoffeatureelements_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:naothmessages.FeatureTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:naothmessages.FeatureTable)
  return false;
#undef DO_
}

void FeatureTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:naothmessages.FeatureTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.FeatureClass classes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->classes(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 numberOfFeatureElements = 2 [default = 64];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->numberoffeatureelements(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:naothmessages.FeatureTable)
}

::google::protobuf::uint8* FeatureTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:naothmessages.FeatureTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .naothmessages.FeatureClass classes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->classes(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 numberOfFeatureElements = 2 [default = 64];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->numberoffeatureelements(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:naothmessages.FeatureTable)
  return target;
}

size_t FeatureTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:naothmessages.FeatureTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .naothmessages.FeatureClass classes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->classes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->classes(static_cast<int>(i)));
    }
  }

  // optional int32 numberOfFeatureElements = 2 [default = 64];
  if (has_numberoffeatureelements()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numberoffeatureelements());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FeatureTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:naothmessages.FeatureTable)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeatureTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:naothmessages.FeatureTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:naothmessages.FeatureTable)
    MergeFrom(*source);
  }
}

void FeatureTable::MergeFrom(const FeatureTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:naothmessages.FeatureTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  classes_.MergeFrom(from.classes_);
  if (from.has_numberoffeatureelements()) {
    set_numberoffeatureelements(from.numberoffeatureelements());
  }
}

void FeatureTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:naothmessages.FeatureTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureTable::CopyFrom(const FeatureTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:naothmessages.FeatureTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureTable::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->classes())) return false;
  return true;
}

void FeatureTable::Swap(FeatureTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureTable::InternalSwap(FeatureTable* other) {
  using std::swap;
  classes_.InternalSwap(&other->classes_);
  swap(numberoffeatureelements_, other->numberoffeatureelements_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FeatureTable::GetMetadata() const {
  protobuf_Messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Messages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FeatureTable

// repeated .naothmessages.FeatureClass classes = 1;
int FeatureTable::classes_size() const {
  return classes_.size();
}
void FeatureTable::clear_classes() {
  classes_.Clear();
}
const ::naothmessages::FeatureClass& FeatureTable::classes(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureTable.classes)
  return classes_.Get(index);
}
::naothmessages::FeatureClass* FeatureTable::mutable_classes(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureTable.classes)
  return classes_.Mutable(index);
}
::naothmessages::FeatureClass* FeatureTable::add_classes() {
  // @@protoc_insertion_point(field_add:naothmessages.FeatureTable.classes)
  return classes_.Add();
}
::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureClass >*
FeatureTable::mutable_classes() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureTable.classes)
  return &classes_;
}
const ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureClass >&
FeatureTable::classes() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureTable.classes)
  return classes_;
}

// optional int32 numberOfFeatureElements = 2 [default = 64];
bool FeatureTable::has_numberoffeatureelements() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FeatureTable::set_has_numberoffeatureelements() {
  _has_bits_[0] |= 0x00000001u;
}
void FeatureTable::clear_has_numberoffeatureelements() {
  _has_bits_[0] &= ~0x00000001u;
}
void FeatureTable::clear_numberoffeatureelements() {
  numberoffeatureelements_ = 64;
  clear_has_numberoffeatureelements();
}
::google::protobuf::int32 FeatureTable::numberoffeatureelements() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureTable.numberOfFeatureElements)
  return numberoffeatureelements_;
}
void FeatureTable::set_numberoffeatureelements(::google::protobuf::int32 value) {
  set_has_numberoffeatureelements();
  numberoffeatureelements_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureTable.numberOfFeatureElements)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace naothmessages

// @@protoc_insertion_point(global_scope)
