// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages.proto

#ifndef PROTOBUF_Messages_2eproto__INCLUDED
#define PROTOBUF_Messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonTypes.pb.h"
// @@protoc_insertion_point(includes)
namespace naothmessages {
class BehaviorStateComplete;
class BehaviorStateCompleteDefaultTypeInternal;
extern BehaviorStateCompleteDefaultTypeInternal _BehaviorStateComplete_default_instance_;
class BehaviorStateComplete_Agent;
class BehaviorStateComplete_AgentDefaultTypeInternal;
extern BehaviorStateComplete_AgentDefaultTypeInternal _BehaviorStateComplete_Agent_default_instance_;
class BehaviorStateComplete_EnumType;
class BehaviorStateComplete_EnumTypeDefaultTypeInternal;
extern BehaviorStateComplete_EnumTypeDefaultTypeInternal _BehaviorStateComplete_EnumType_default_instance_;
class BehaviorStateComplete_EnumType_Element;
class BehaviorStateComplete_EnumType_ElementDefaultTypeInternal;
extern BehaviorStateComplete_EnumType_ElementDefaultTypeInternal _BehaviorStateComplete_EnumType_Element_default_instance_;
class BehaviorStateComplete_Option;
class BehaviorStateComplete_OptionDefaultTypeInternal;
extern BehaviorStateComplete_OptionDefaultTypeInternal _BehaviorStateComplete_Option_default_instance_;
class BehaviorStateComplete_Option_State;
class BehaviorStateComplete_Option_StateDefaultTypeInternal;
extern BehaviorStateComplete_Option_StateDefaultTypeInternal _BehaviorStateComplete_Option_State_default_instance_;
class BehaviorStateSparse;
class BehaviorStateSparseDefaultTypeInternal;
extern BehaviorStateSparseDefaultTypeInternal _BehaviorStateSparse_default_instance_;
class CMD;
class CMDDefaultTypeInternal;
extern CMDDefaultTypeInternal _CMD_default_instance_;
class CMDArg;
class CMDArgDefaultTypeInternal;
extern CMDArgDefaultTypeInternal _CMDArg_default_instance_;
class DebugRequest;
class DebugRequestDefaultTypeInternal;
extern DebugRequestDefaultTypeInternal _DebugRequest_default_instance_;
class DebugRequest_Item;
class DebugRequest_ItemDefaultTypeInternal;
extern DebugRequest_ItemDefaultTypeInternal _DebugRequest_Item_default_instance_;
class FeatureClass;
class FeatureClassDefaultTypeInternal;
extern FeatureClassDefaultTypeInternal _FeatureClass_default_instance_;
class FeatureDetectionResult;
class FeatureDetectionResultDefaultTypeInternal;
extern FeatureDetectionResultDefaultTypeInternal _FeatureDetectionResult_default_instance_;
class FeatureKeyPoint;
class FeatureKeyPointDefaultTypeInternal;
extern FeatureKeyPointDefaultTypeInternal _FeatureKeyPoint_default_instance_;
class FeatureTable;
class FeatureTableDefaultTypeInternal;
extern FeatureTableDefaultTypeInternal _FeatureTable_default_instance_;
class Module;
class ModuleDefaultTypeInternal;
extern ModuleDefaultTypeInternal _Module_default_instance_;
class ModuleList;
class ModuleListDefaultTypeInternal;
extern ModuleListDefaultTypeInternal _ModuleList_default_instance_;
class PlotItem;
class PlotItemDefaultTypeInternal;
extern PlotItemDefaultTypeInternal _PlotItem_default_instance_;
class PlotStroke2D;
class PlotStroke2DDefaultTypeInternal;
extern PlotStroke2DDefaultTypeInternal _PlotStroke2D_default_instance_;
class Plots;
class PlotsDefaultTypeInternal;
extern PlotsDefaultTypeInternal _Plots_default_instance_;
class SingleDescriptor;
class SingleDescriptorDefaultTypeInternal;
extern SingleDescriptorDefaultTypeInternal _SingleDescriptor_default_instance_;
class StopwatchItem;
class StopwatchItemDefaultTypeInternal;
extern StopwatchItemDefaultTypeInternal _StopwatchItem_default_instance_;
class Stopwatches;
class StopwatchesDefaultTypeInternal;
extern StopwatchesDefaultTypeInternal _Stopwatches_default_instance_;
class SymbolValueList;
class SymbolValueListDefaultTypeInternal;
extern SymbolValueListDefaultTypeInternal _SymbolValueList_default_instance_;
class SymbolValueList_BooleanSymbol;
class SymbolValueList_BooleanSymbolDefaultTypeInternal;
extern SymbolValueList_BooleanSymbolDefaultTypeInternal _SymbolValueList_BooleanSymbol_default_instance_;
class SymbolValueList_DoubleSymbol;
class SymbolValueList_DoubleSymbolDefaultTypeInternal;
extern SymbolValueList_DoubleSymbolDefaultTypeInternal _SymbolValueList_DoubleSymbol_default_instance_;
class SymbolValueList_EnumSymbol;
class SymbolValueList_EnumSymbolDefaultTypeInternal;
extern SymbolValueList_EnumSymbolDefaultTypeInternal _SymbolValueList_EnumSymbol_default_instance_;
class XABSLActionSparse;
class XABSLActionSparseDefaultTypeInternal;
extern XABSLActionSparseDefaultTypeInternal _XABSLActionSparse_default_instance_;
class XABSLActiveOptionSparse;
class XABSLActiveOptionSparseDefaultTypeInternal;
extern XABSLActiveOptionSparseDefaultTypeInternal _XABSLActiveOptionSparse_default_instance_;
class XABSLSymbol;
class XABSLSymbolDefaultTypeInternal;
extern XABSLSymbolDefaultTypeInternal _XABSLSymbol_default_instance_;
}  // namespace naothmessages

namespace naothmessages {

namespace protobuf_Messages_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Messages_2eproto

enum PlotItem_PlotType {
  PlotItem_PlotType_Default = 1,
  PlotItem_PlotType_Plot2D = 2,
  PlotItem_PlotType_Origin2D = 3
};
bool PlotItem_PlotType_IsValid(int value);
const PlotItem_PlotType PlotItem_PlotType_PlotType_MIN = PlotItem_PlotType_Default;
const PlotItem_PlotType PlotItem_PlotType_PlotType_MAX = PlotItem_PlotType_Origin2D;
const int PlotItem_PlotType_PlotType_ARRAYSIZE = PlotItem_PlotType_PlotType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlotItem_PlotType_descriptor();
inline const ::std::string& PlotItem_PlotType_Name(PlotItem_PlotType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlotItem_PlotType_descriptor(), value);
}
inline bool PlotItem_PlotType_Parse(
    const ::std::string& name, PlotItem_PlotType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlotItem_PlotType>(
    PlotItem_PlotType_descriptor(), name, value);
}
enum XABSLSymbol_SymbolType {
  XABSLSymbol_SymbolType_Decimal = 0,
  XABSLSymbol_SymbolType_Boolean = 1,
  XABSLSymbol_SymbolType_Enum = 2,
  XABSLSymbol_SymbolType_Unknown = 3
};
bool XABSLSymbol_SymbolType_IsValid(int value);
const XABSLSymbol_SymbolType XABSLSymbol_SymbolType_SymbolType_MIN = XABSLSymbol_SymbolType_Decimal;
const XABSLSymbol_SymbolType XABSLSymbol_SymbolType_SymbolType_MAX = XABSLSymbol_SymbolType_Unknown;
const int XABSLSymbol_SymbolType_SymbolType_ARRAYSIZE = XABSLSymbol_SymbolType_SymbolType_MAX + 1;

const ::google::protobuf::EnumDescriptor* XABSLSymbol_SymbolType_descriptor();
inline const ::std::string& XABSLSymbol_SymbolType_Name(XABSLSymbol_SymbolType value) {
  return ::google::protobuf::internal::NameOfEnum(
    XABSLSymbol_SymbolType_descriptor(), value);
}
inline bool XABSLSymbol_SymbolType_Parse(
    const ::std::string& name, XABSLSymbol_SymbolType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<XABSLSymbol_SymbolType>(
    XABSLSymbol_SymbolType_descriptor(), name, value);
}
enum XABSLActionSparse_ActionType {
  XABSLActionSparse_ActionType_Option = 0,
  XABSLActionSparse_ActionType_BasicBehavior = 1,
  XABSLActionSparse_ActionType_SymbolAssignment = 2,
  XABSLActionSparse_ActionType_Unknown = 3
};
bool XABSLActionSparse_ActionType_IsValid(int value);
const XABSLActionSparse_ActionType XABSLActionSparse_ActionType_ActionType_MIN = XABSLActionSparse_ActionType_Option;
const XABSLActionSparse_ActionType XABSLActionSparse_ActionType_ActionType_MAX = XABSLActionSparse_ActionType_Unknown;
const int XABSLActionSparse_ActionType_ActionType_ARRAYSIZE = XABSLActionSparse_ActionType_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* XABSLActionSparse_ActionType_descriptor();
inline const ::std::string& XABSLActionSparse_ActionType_Name(XABSLActionSparse_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    XABSLActionSparse_ActionType_descriptor(), value);
}
inline bool XABSLActionSparse_ActionType_Parse(
    const ::std::string& name, XABSLActionSparse_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<XABSLActionSparse_ActionType>(
    XABSLActionSparse_ActionType_descriptor(), name, value);
}
// ===================================================================

class CMDArg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.CMDArg) */ {
 public:
  CMDArg();
  virtual ~CMDArg();

  CMDArg(const CMDArg& from);

  inline CMDArg& operator=(const CMDArg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMDArg(CMDArg&& from) noexcept
    : CMDArg() {
    *this = ::std::move(from);
  }

  inline CMDArg& operator=(CMDArg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDArg& default_instance();

  static inline const CMDArg* internal_default_instance() {
    return reinterpret_cast<const CMDArg*>(
               &_CMDArg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMDArg* other);
  friend void swap(CMDArg& a, CMDArg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMDArg* New() const PROTOBUF_FINAL { return New(NULL); }

  CMDArg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMDArg& from);
  void MergeFrom(const CMDArg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMDArg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes bytes = 3;
  bool has_bytes() const;
  void clear_bytes();
  static const int kBytesFieldNumber = 3;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // @@protoc_insertion_point(class_scope:naothmessages.CMDArg)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_bytes();
  void clear_has_bytes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.CMD) */ {
 public:
  CMD();
  virtual ~CMD();

  CMD(const CMD& from);

  inline CMD& operator=(const CMD& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD(CMD&& from) noexcept
    : CMD() {
    *this = ::std::move(from);
  }

  inline CMD& operator=(CMD&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD& default_instance();

  static inline const CMD* internal_default_instance() {
    return reinterpret_cast<const CMD*>(
               &_CMD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMD* other);
  friend void swap(CMD& a, CMD& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD& from);
  void MergeFrom(const CMD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .naothmessages.CMDArg args = 2;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 2;
  const ::naothmessages::CMDArg& args(int index) const;
  ::naothmessages::CMDArg* mutable_args(int index);
  ::naothmessages::CMDArg* add_args();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::CMDArg >*
      mutable_args();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::CMDArg >&
      args() const;

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:naothmessages.CMD)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::CMDArg > args_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopwatchItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.StopwatchItem) */ {
 public:
  StopwatchItem();
  virtual ~StopwatchItem();

  StopwatchItem(const StopwatchItem& from);

  inline StopwatchItem& operator=(const StopwatchItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopwatchItem(StopwatchItem&& from) noexcept
    : StopwatchItem() {
    *this = ::std::move(from);
  }

  inline StopwatchItem& operator=(StopwatchItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopwatchItem& default_instance();

  static inline const StopwatchItem* internal_default_instance() {
    return reinterpret_cast<const StopwatchItem*>(
               &_StopwatchItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(StopwatchItem* other);
  friend void swap(StopwatchItem& a, StopwatchItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopwatchItem* New() const PROTOBUF_FINAL { return New(NULL); }

  StopwatchItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopwatchItem& from);
  void MergeFrom(const StopwatchItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopwatchItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.StopwatchItem)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_time();
  void clear_has_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 time_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Stopwatches : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.Stopwatches) */ {
 public:
  Stopwatches();
  virtual ~Stopwatches();

  Stopwatches(const Stopwatches& from);

  inline Stopwatches& operator=(const Stopwatches& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stopwatches(Stopwatches&& from) noexcept
    : Stopwatches() {
    *this = ::std::move(from);
  }

  inline Stopwatches& operator=(Stopwatches&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stopwatches& default_instance();

  static inline const Stopwatches* internal_default_instance() {
    return reinterpret_cast<const Stopwatches*>(
               &_Stopwatches_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Stopwatches* other);
  friend void swap(Stopwatches& a, Stopwatches& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stopwatches* New() const PROTOBUF_FINAL { return New(NULL); }

  Stopwatches* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stopwatches& from);
  void MergeFrom(const Stopwatches& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stopwatches* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .naothmessages.StopwatchItem stopwatches = 1;
  int stopwatches_size() const;
  void clear_stopwatches();
  static const int kStopwatchesFieldNumber = 1;
  const ::naothmessages::StopwatchItem& stopwatches(int index) const;
  ::naothmessages::StopwatchItem* mutable_stopwatches(int index);
  ::naothmessages::StopwatchItem* add_stopwatches();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::StopwatchItem >*
      mutable_stopwatches();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::StopwatchItem >&
      stopwatches() const;

  // @@protoc_insertion_point(class_scope:naothmessages.Stopwatches)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::StopwatchItem > stopwatches_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlotItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.PlotItem) */ {
 public:
  PlotItem();
  virtual ~PlotItem();

  PlotItem(const PlotItem& from);

  inline PlotItem& operator=(const PlotItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlotItem(PlotItem&& from) noexcept
    : PlotItem() {
    *this = ::std::move(from);
  }

  inline PlotItem& operator=(PlotItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlotItem& default_instance();

  static inline const PlotItem* internal_default_instance() {
    return reinterpret_cast<const PlotItem*>(
               &_PlotItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PlotItem* other);
  friend void swap(PlotItem& a, PlotItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlotItem* New() const PROTOBUF_FINAL { return New(NULL); }

  PlotItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlotItem& from);
  void MergeFrom(const PlotItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlotItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlotItem_PlotType PlotType;
  static const PlotType Default =
    PlotItem_PlotType_Default;
  static const PlotType Plot2D =
    PlotItem_PlotType_Plot2D;
  static const PlotType Origin2D =
    PlotItem_PlotType_Origin2D;
  static inline bool PlotType_IsValid(int value) {
    return PlotItem_PlotType_IsValid(value);
  }
  static const PlotType PlotType_MIN =
    PlotItem_PlotType_PlotType_MIN;
  static const PlotType PlotType_MAX =
    PlotItem_PlotType_PlotType_MAX;
  static const int PlotType_ARRAYSIZE =
    PlotItem_PlotType_PlotType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PlotType_descriptor() {
    return PlotItem_PlotType_descriptor();
  }
  static inline const ::std::string& PlotType_Name(PlotType value) {
    return PlotItem_PlotType_Name(value);
  }
  static inline bool PlotType_Parse(const ::std::string& name,
      PlotType* value) {
    return PlotItem_PlotType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional double value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  double value() const;
  void set_value(double value);

  // optional double x = 4;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 4;
  double x() const;
  void set_x(double value);

  // optional double y = 5;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 5;
  double y() const;
  void set_y(double value);

  // optional double rotation = 6;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 6;
  double rotation() const;
  void set_rotation(double value);

  // required .naothmessages.PlotItem.PlotType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::naothmessages::PlotItem_PlotType type() const;
  void set_type(::naothmessages::PlotItem_PlotType value);

  // @@protoc_insertion_point(class_scope:naothmessages.PlotItem)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_rotation();
  void clear_has_rotation();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  double value_;
  double x_;
  double y_;
  double rotation_;
  int type_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlotStroke2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.PlotStroke2D) */ {
 public:
  PlotStroke2D();
  virtual ~PlotStroke2D();

  PlotStroke2D(const PlotStroke2D& from);

  inline PlotStroke2D& operator=(const PlotStroke2D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlotStroke2D(PlotStroke2D&& from) noexcept
    : PlotStroke2D() {
    *this = ::std::move(from);
  }

  inline PlotStroke2D& operator=(PlotStroke2D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlotStroke2D& default_instance();

  static inline const PlotStroke2D* internal_default_instance() {
    return reinterpret_cast<const PlotStroke2D*>(
               &_PlotStroke2D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PlotStroke2D* other);
  friend void swap(PlotStroke2D& a, PlotStroke2D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlotStroke2D* New() const PROTOBUF_FINAL { return New(NULL); }

  PlotStroke2D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlotStroke2D& from);
  void MergeFrom(const PlotStroke2D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlotStroke2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .naothmessages.DoubleVector2 points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  const ::naothmessages::DoubleVector2& points(int index) const;
  ::naothmessages::DoubleVector2* mutable_points(int index);
  ::naothmessages::DoubleVector2* add_points();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector2 >*
      mutable_points();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector2 >&
      points() const;

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:naothmessages.PlotStroke2D)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector2 > points_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Plots : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.Plots) */ {
 public:
  Plots();
  virtual ~Plots();

  Plots(const Plots& from);

  inline Plots& operator=(const Plots& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Plots(Plots&& from) noexcept
    : Plots() {
    *this = ::std::move(from);
  }

  inline Plots& operator=(Plots&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Plots& default_instance();

  static inline const Plots* internal_default_instance() {
    return reinterpret_cast<const Plots*>(
               &_Plots_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Plots* other);
  friend void swap(Plots& a, Plots& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Plots* New() const PROTOBUF_FINAL { return New(NULL); }

  Plots* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Plots& from);
  void MergeFrom(const Plots& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Plots* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .naothmessages.PlotItem plots = 1;
  int plots_size() const;
  void clear_plots();
  static const int kPlotsFieldNumber = 1;
  const ::naothmessages::PlotItem& plots(int index) const;
  ::naothmessages::PlotItem* mutable_plots(int index);
  ::naothmessages::PlotItem* add_plots();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotItem >*
      mutable_plots();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotItem >&
      plots() const;

  // repeated .naothmessages.PlotStroke2D plotstrokes = 2;
  int plotstrokes_size() const;
  void clear_plotstrokes();
  static const int kPlotstrokesFieldNumber = 2;
  const ::naothmessages::PlotStroke2D& plotstrokes(int index) const;
  ::naothmessages::PlotStroke2D* mutable_plotstrokes(int index);
  ::naothmessages::PlotStroke2D* add_plotstrokes();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotStroke2D >*
      mutable_plotstrokes();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotStroke2D >&
      plotstrokes() const;

  // @@protoc_insertion_point(class_scope:naothmessages.Plots)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotItem > plots_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotStroke2D > plotstrokes_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XABSLSymbol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.XABSLSymbol) */ {
 public:
  XABSLSymbol();
  virtual ~XABSLSymbol();

  XABSLSymbol(const XABSLSymbol& from);

  inline XABSLSymbol& operator=(const XABSLSymbol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XABSLSymbol(XABSLSymbol&& from) noexcept
    : XABSLSymbol() {
    *this = ::std::move(from);
  }

  inline XABSLSymbol& operator=(XABSLSymbol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XABSLSymbol& default_instance();

  static inline const XABSLSymbol* internal_default_instance() {
    return reinterpret_cast<const XABSLSymbol*>(
               &_XABSLSymbol_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(XABSLSymbol* other);
  friend void swap(XABSLSymbol& a, XABSLSymbol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XABSLSymbol* New() const PROTOBUF_FINAL { return New(NULL); }

  XABSLSymbol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XABSLSymbol& from);
  void MergeFrom(const XABSLSymbol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XABSLSymbol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef XABSLSymbol_SymbolType SymbolType;
  static const SymbolType Decimal =
    XABSLSymbol_SymbolType_Decimal;
  static const SymbolType Boolean =
    XABSLSymbol_SymbolType_Boolean;
  static const SymbolType Enum =
    XABSLSymbol_SymbolType_Enum;
  static const SymbolType Unknown =
    XABSLSymbol_SymbolType_Unknown;
  static inline bool SymbolType_IsValid(int value) {
    return XABSLSymbol_SymbolType_IsValid(value);
  }
  static const SymbolType SymbolType_MIN =
    XABSLSymbol_SymbolType_SymbolType_MIN;
  static const SymbolType SymbolType_MAX =
    XABSLSymbol_SymbolType_SymbolType_MAX;
  static const int SymbolType_ARRAYSIZE =
    XABSLSymbol_SymbolType_SymbolType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SymbolType_descriptor() {
    return XABSLSymbol_SymbolType_descriptor();
  }
  static inline const ::std::string& SymbolType_Name(SymbolType value) {
    return XABSLSymbol_SymbolType_Name(value);
  }
  static inline bool SymbolType_Parse(const ::std::string& name,
      SymbolType* value) {
    return XABSLSymbol_SymbolType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 enumTypeId = 14;
  bool has_enumtypeid() const;
  void clear_enumtypeid();
  static const int kEnumTypeIdFieldNumber = 14;
  ::google::protobuf::int32 enumtypeid() const;
  void set_enumtypeid(::google::protobuf::int32 value);

  // optional double decimalValue = 11;
  bool has_decimalvalue() const;
  void clear_decimalvalue();
  static const int kDecimalValueFieldNumber = 11;
  double decimalvalue() const;
  void set_decimalvalue(double value);

  // optional bool boolValue = 12;
  bool has_boolvalue() const;
  void clear_boolvalue();
  static const int kBoolValueFieldNumber = 12;
  bool boolvalue() const;
  void set_boolvalue(bool value);

  // optional int32 enumValue = 13;
  bool has_enumvalue() const;
  void clear_enumvalue();
  static const int kEnumValueFieldNumber = 13;
  ::google::protobuf::int32 enumvalue() const;
  void set_enumvalue(::google::protobuf::int32 value);

  // required int32 id = 1 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required .naothmessages.XABSLSymbol.SymbolType type = 2 [default = Unknown];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::naothmessages::XABSLSymbol_SymbolType type() const;
  void set_type(::naothmessages::XABSLSymbol_SymbolType value);

  // @@protoc_insertion_point(class_scope:naothmessages.XABSLSymbol)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_decimalvalue();
  void clear_has_decimalvalue();
  void set_has_boolvalue();
  void clear_has_boolvalue();
  void set_has_enumvalue();
  void clear_has_enumvalue();
  void set_has_enumtypeid();
  void clear_has_enumtypeid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 enumtypeid_;
  double decimalvalue_;
  bool boolvalue_;
  ::google::protobuf::int32 enumvalue_;
  ::google::protobuf::int32 id_;
  int type_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XABSLActiveOptionSparse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.XABSLActiveOptionSparse) */ {
 public:
  XABSLActiveOptionSparse();
  virtual ~XABSLActiveOptionSparse();

  XABSLActiveOptionSparse(const XABSLActiveOptionSparse& from);

  inline XABSLActiveOptionSparse& operator=(const XABSLActiveOptionSparse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XABSLActiveOptionSparse(XABSLActiveOptionSparse&& from) noexcept
    : XABSLActiveOptionSparse() {
    *this = ::std::move(from);
  }

  inline XABSLActiveOptionSparse& operator=(XABSLActiveOptionSparse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XABSLActiveOptionSparse& default_instance();

  static inline const XABSLActiveOptionSparse* internal_default_instance() {
    return reinterpret_cast<const XABSLActiveOptionSparse*>(
               &_XABSLActiveOptionSparse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XABSLActiveOptionSparse* other);
  friend void swap(XABSLActiveOptionSparse& a, XABSLActiveOptionSparse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XABSLActiveOptionSparse* New() const PROTOBUF_FINAL { return New(NULL); }

  XABSLActiveOptionSparse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XABSLActiveOptionSparse& from);
  void MergeFrom(const XABSLActiveOptionSparse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XABSLActiveOptionSparse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double decimalParameters = 6;
  int decimalparameters_size() const;
  void clear_decimalparameters();
  static const int kDecimalParametersFieldNumber = 6;
  double decimalparameters(int index) const;
  void set_decimalparameters(int index, double value);
  void add_decimalparameters(double value);
  const ::google::protobuf::RepeatedField< double >&
      decimalparameters() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_decimalparameters();

  // repeated bool booleanParameters = 7;
  int booleanparameters_size() const;
  void clear_booleanparameters();
  static const int kBooleanParametersFieldNumber = 7;
  bool booleanparameters(int index) const;
  void set_booleanparameters(int index, bool value);
  void add_booleanparameters(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      booleanparameters() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_booleanparameters();

  // repeated int32 enumeratedParameters = 8;
  int enumeratedparameters_size() const;
  void clear_enumeratedparameters();
  static const int kEnumeratedParametersFieldNumber = 8;
  ::google::protobuf::int32 enumeratedparameters(int index) const;
  void set_enumeratedparameters(int index, ::google::protobuf::int32 value);
  void add_enumeratedparameters(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      enumeratedparameters() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_enumeratedparameters();

  // repeated .naothmessages.XABSLActionSparse activeSubActions = 9;
  int activesubactions_size() const;
  void clear_activesubactions();
  static const int kActiveSubActionsFieldNumber = 9;
  const ::naothmessages::XABSLActionSparse& activesubactions(int index) const;
  ::naothmessages::XABSLActionSparse* mutable_activesubactions(int index);
  ::naothmessages::XABSLActionSparse* add_activesubactions();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >*
      mutable_activesubactions();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >&
      activesubactions() const;

  // optional int64 timeOfExecution = 3 [default = 0];
  bool has_timeofexecution() const;
  void clear_timeofexecution();
  static const int kTimeOfExecutionFieldNumber = 3;
  ::google::protobuf::int64 timeofexecution() const;
  void set_timeofexecution(::google::protobuf::int64 value);

  // optional int64 stateTime = 5;
  bool has_statetime() const;
  void clear_statetime();
  static const int kStateTimeFieldNumber = 5;
  ::google::protobuf::int64 statetime() const;
  void set_statetime(::google::protobuf::int64 value);

  // optional int32 activeState = 4;
  bool has_activestate() const;
  void clear_activestate();
  static const int kActiveStateFieldNumber = 4;
  ::google::protobuf::int32 activestate() const;
  void set_activestate(::google::protobuf::int32 value);

  // required int32 id = 1 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.XABSLActiveOptionSparse)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_timeofexecution();
  void clear_has_timeofexecution();
  void set_has_activestate();
  void clear_has_activestate();
  void set_has_statetime();
  void clear_has_statetime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > decimalparameters_;
  ::google::protobuf::RepeatedField< bool > booleanparameters_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > enumeratedparameters_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse > activesubactions_;
  ::google::protobuf::int64 timeofexecution_;
  ::google::protobuf::int64 statetime_;
  ::google::protobuf::int32 activestate_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XABSLActionSparse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.XABSLActionSparse) */ {
 public:
  XABSLActionSparse();
  virtual ~XABSLActionSparse();

  XABSLActionSparse(const XABSLActionSparse& from);

  inline XABSLActionSparse& operator=(const XABSLActionSparse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XABSLActionSparse(XABSLActionSparse&& from) noexcept
    : XABSLActionSparse() {
    *this = ::std::move(from);
  }

  inline XABSLActionSparse& operator=(XABSLActionSparse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XABSLActionSparse& default_instance();

  static inline const XABSLActionSparse* internal_default_instance() {
    return reinterpret_cast<const XABSLActionSparse*>(
               &_XABSLActionSparse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(XABSLActionSparse* other);
  friend void swap(XABSLActionSparse& a, XABSLActionSparse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XABSLActionSparse* New() const PROTOBUF_FINAL { return New(NULL); }

  XABSLActionSparse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XABSLActionSparse& from);
  void MergeFrom(const XABSLActionSparse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XABSLActionSparse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef XABSLActionSparse_ActionType ActionType;
  static const ActionType Option =
    XABSLActionSparse_ActionType_Option;
  static const ActionType BasicBehavior =
    XABSLActionSparse_ActionType_BasicBehavior;
  static const ActionType SymbolAssignment =
    XABSLActionSparse_ActionType_SymbolAssignment;
  static const ActionType Unknown =
    XABSLActionSparse_ActionType_Unknown;
  static inline bool ActionType_IsValid(int value) {
    return XABSLActionSparse_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    XABSLActionSparse_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    XABSLActionSparse_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    XABSLActionSparse_ActionType_ActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionType_descriptor() {
    return XABSLActionSparse_ActionType_descriptor();
  }
  static inline const ::std::string& ActionType_Name(ActionType value) {
    return XABSLActionSparse_ActionType_Name(value);
  }
  static inline bool ActionType_Parse(const ::std::string& name,
      ActionType* value) {
    return XABSLActionSparse_ActionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .naothmessages.XABSLSymbol symbol = 3;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 3;
  const ::naothmessages::XABSLSymbol& symbol() const;
  ::naothmessages::XABSLSymbol* mutable_symbol();
  ::naothmessages::XABSLSymbol* release_symbol();
  void set_allocated_symbol(::naothmessages::XABSLSymbol* symbol);

  // optional .naothmessages.XABSLActiveOptionSparse option = 4;
  bool has_option() const;
  void clear_option();
  static const int kOptionFieldNumber = 4;
  const ::naothmessages::XABSLActiveOptionSparse& option() const;
  ::naothmessages::XABSLActiveOptionSparse* mutable_option();
  ::naothmessages::XABSLActiveOptionSparse* release_option();
  void set_allocated_option(::naothmessages::XABSLActiveOptionSparse* option);

  // required .naothmessages.XABSLActionSparse.ActionType type = 2 [default = Unknown];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::naothmessages::XABSLActionSparse_ActionType type() const;
  void set_type(::naothmessages::XABSLActionSparse_ActionType value);

  // @@protoc_insertion_point(class_scope:naothmessages.XABSLActionSparse)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_symbol();
  void clear_has_symbol();
  void set_has_option();
  void clear_has_option();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::naothmessages::XABSLSymbol* symbol_;
  ::naothmessages::XABSLActiveOptionSparse* option_;
  int type_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolValueList_DoubleSymbol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.SymbolValueList.DoubleSymbol) */ {
 public:
  SymbolValueList_DoubleSymbol();
  virtual ~SymbolValueList_DoubleSymbol();

  SymbolValueList_DoubleSymbol(const SymbolValueList_DoubleSymbol& from);

  inline SymbolValueList_DoubleSymbol& operator=(const SymbolValueList_DoubleSymbol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolValueList_DoubleSymbol(SymbolValueList_DoubleSymbol&& from) noexcept
    : SymbolValueList_DoubleSymbol() {
    *this = ::std::move(from);
  }

  inline SymbolValueList_DoubleSymbol& operator=(SymbolValueList_DoubleSymbol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolValueList_DoubleSymbol& default_instance();

  static inline const SymbolValueList_DoubleSymbol* internal_default_instance() {
    return reinterpret_cast<const SymbolValueList_DoubleSymbol*>(
               &_SymbolValueList_DoubleSymbol_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SymbolValueList_DoubleSymbol* other);
  friend void swap(SymbolValueList_DoubleSymbol& a, SymbolValueList_DoubleSymbol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolValueList_DoubleSymbol* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolValueList_DoubleSymbol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolValueList_DoubleSymbol& from);
  void MergeFrom(const SymbolValueList_DoubleSymbol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolValueList_DoubleSymbol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional double value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  double value() const;
  void set_value(double value);

  // required int32 id = 1 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.SymbolValueList.DoubleSymbol)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  double value_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolValueList_BooleanSymbol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.SymbolValueList.BooleanSymbol) */ {
 public:
  SymbolValueList_BooleanSymbol();
  virtual ~SymbolValueList_BooleanSymbol();

  SymbolValueList_BooleanSymbol(const SymbolValueList_BooleanSymbol& from);

  inline SymbolValueList_BooleanSymbol& operator=(const SymbolValueList_BooleanSymbol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolValueList_BooleanSymbol(SymbolValueList_BooleanSymbol&& from) noexcept
    : SymbolValueList_BooleanSymbol() {
    *this = ::std::move(from);
  }

  inline SymbolValueList_BooleanSymbol& operator=(SymbolValueList_BooleanSymbol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolValueList_BooleanSymbol& default_instance();

  static inline const SymbolValueList_BooleanSymbol* internal_default_instance() {
    return reinterpret_cast<const SymbolValueList_BooleanSymbol*>(
               &_SymbolValueList_BooleanSymbol_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SymbolValueList_BooleanSymbol* other);
  friend void swap(SymbolValueList_BooleanSymbol& a, SymbolValueList_BooleanSymbol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolValueList_BooleanSymbol* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolValueList_BooleanSymbol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolValueList_BooleanSymbol& from);
  void MergeFrom(const SymbolValueList_BooleanSymbol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolValueList_BooleanSymbol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  bool value() const;
  void set_value(bool value);

  // required int32 id = 1 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.SymbolValueList.BooleanSymbol)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool value_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolValueList_EnumSymbol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.SymbolValueList.EnumSymbol) */ {
 public:
  SymbolValueList_EnumSymbol();
  virtual ~SymbolValueList_EnumSymbol();

  SymbolValueList_EnumSymbol(const SymbolValueList_EnumSymbol& from);

  inline SymbolValueList_EnumSymbol& operator=(const SymbolValueList_EnumSymbol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolValueList_EnumSymbol(SymbolValueList_EnumSymbol&& from) noexcept
    : SymbolValueList_EnumSymbol() {
    *this = ::std::move(from);
  }

  inline SymbolValueList_EnumSymbol& operator=(SymbolValueList_EnumSymbol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolValueList_EnumSymbol& default_instance();

  static inline const SymbolValueList_EnumSymbol* internal_default_instance() {
    return reinterpret_cast<const SymbolValueList_EnumSymbol*>(
               &_SymbolValueList_EnumSymbol_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SymbolValueList_EnumSymbol* other);
  friend void swap(SymbolValueList_EnumSymbol& a, SymbolValueList_EnumSymbol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolValueList_EnumSymbol* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolValueList_EnumSymbol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolValueList_EnumSymbol& from);
  void MergeFrom(const SymbolValueList_EnumSymbol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolValueList_EnumSymbol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 value = 13;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 13;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // optional int32 typeId = 14;
  bool has_typeid_() const;
  void clear_typeid_();
  static const int kTypeIdFieldNumber = 14;
  ::google::protobuf::int32 typeid_() const;
  void set_typeid_(::google::protobuf::int32 value);

  // required int32 id = 1 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.SymbolValueList.EnumSymbol)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();
  void set_has_typeid_();
  void clear_has_typeid_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 typeid__;
  ::google::protobuf::int32 id_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SymbolValueList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.SymbolValueList) */ {
 public:
  SymbolValueList();
  virtual ~SymbolValueList();

  SymbolValueList(const SymbolValueList& from);

  inline SymbolValueList& operator=(const SymbolValueList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SymbolValueList(SymbolValueList&& from) noexcept
    : SymbolValueList() {
    *this = ::std::move(from);
  }

  inline SymbolValueList& operator=(SymbolValueList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolValueList& default_instance();

  static inline const SymbolValueList* internal_default_instance() {
    return reinterpret_cast<const SymbolValueList*>(
               &_SymbolValueList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SymbolValueList* other);
  friend void swap(SymbolValueList& a, SymbolValueList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SymbolValueList* New() const PROTOBUF_FINAL { return New(NULL); }

  SymbolValueList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SymbolValueList& from);
  void MergeFrom(const SymbolValueList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SymbolValueList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SymbolValueList_DoubleSymbol DoubleSymbol;
  typedef SymbolValueList_BooleanSymbol BooleanSymbol;
  typedef SymbolValueList_EnumSymbol EnumSymbol;

  // accessors -------------------------------------------------------

  // repeated .naothmessages.SymbolValueList.DoubleSymbol decimal = 1;
  int decimal_size() const;
  void clear_decimal();
  static const int kDecimalFieldNumber = 1;
  const ::naothmessages::SymbolValueList_DoubleSymbol& decimal(int index) const;
  ::naothmessages::SymbolValueList_DoubleSymbol* mutable_decimal(int index);
  ::naothmessages::SymbolValueList_DoubleSymbol* add_decimal();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_DoubleSymbol >*
      mutable_decimal();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_DoubleSymbol >&
      decimal() const;

  // repeated .naothmessages.SymbolValueList.BooleanSymbol boolean = 2;
  int boolean_size() const;
  void clear_boolean();
  static const int kBooleanFieldNumber = 2;
  const ::naothmessages::SymbolValueList_BooleanSymbol& boolean(int index) const;
  ::naothmessages::SymbolValueList_BooleanSymbol* mutable_boolean(int index);
  ::naothmessages::SymbolValueList_BooleanSymbol* add_boolean();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_BooleanSymbol >*
      mutable_boolean();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_BooleanSymbol >&
      boolean() const;

  // repeated .naothmessages.SymbolValueList.EnumSymbol enumerated = 3;
  int enumerated_size() const;
  void clear_enumerated();
  static const int kEnumeratedFieldNumber = 3;
  const ::naothmessages::SymbolValueList_EnumSymbol& enumerated(int index) const;
  ::naothmessages::SymbolValueList_EnumSymbol* mutable_enumerated(int index);
  ::naothmessages::SymbolValueList_EnumSymbol* add_enumerated();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_EnumSymbol >*
      mutable_enumerated();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_EnumSymbol >&
      enumerated() const;

  // @@protoc_insertion_point(class_scope:naothmessages.SymbolValueList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_DoubleSymbol > decimal_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_BooleanSymbol > boolean_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_EnumSymbol > enumerated_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BehaviorStateSparse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.BehaviorStateSparse) */ {
 public:
  BehaviorStateSparse();
  virtual ~BehaviorStateSparse();

  BehaviorStateSparse(const BehaviorStateSparse& from);

  inline BehaviorStateSparse& operator=(const BehaviorStateSparse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BehaviorStateSparse(BehaviorStateSparse&& from) noexcept
    : BehaviorStateSparse() {
    *this = ::std::move(from);
  }

  inline BehaviorStateSparse& operator=(BehaviorStateSparse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorStateSparse& default_instance();

  static inline const BehaviorStateSparse* internal_default_instance() {
    return reinterpret_cast<const BehaviorStateSparse*>(
               &_BehaviorStateSparse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(BehaviorStateSparse* other);
  friend void swap(BehaviorStateSparse& a, BehaviorStateSparse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BehaviorStateSparse* New() const PROTOBUF_FINAL { return New(NULL); }

  BehaviorStateSparse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BehaviorStateSparse& from);
  void MergeFrom(const BehaviorStateSparse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BehaviorStateSparse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .naothmessages.XABSLActionSparse activeRootActions = 2;
  int activerootactions_size() const;
  void clear_activerootactions();
  static const int kActiveRootActionsFieldNumber = 2;
  const ::naothmessages::XABSLActionSparse& activerootactions(int index) const;
  ::naothmessages::XABSLActionSparse* mutable_activerootactions(int index);
  ::naothmessages::XABSLActionSparse* add_activerootactions();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >*
      mutable_activerootactions();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >&
      activerootactions() const;

  // optional string agent = 1;
  bool has_agent() const;
  void clear_agent();
  static const int kAgentFieldNumber = 1;
  const ::std::string& agent() const;
  void set_agent(const ::std::string& value);
  #if LANG_CXX11
  void set_agent(::std::string&& value);
  #endif
  void set_agent(const char* value);
  void set_agent(const char* value, size_t size);
  ::std::string* mutable_agent();
  ::std::string* release_agent();
  void set_allocated_agent(::std::string* agent);

  // optional string errorMessage = 6;
  bool has_errormessage() const;
  void clear_errormessage();
  static const int kErrorMessageFieldNumber = 6;
  const ::std::string& errormessage() const;
  void set_errormessage(const ::std::string& value);
  #if LANG_CXX11
  void set_errormessage(::std::string&& value);
  #endif
  void set_errormessage(const char* value);
  void set_errormessage(const char* value, size_t size);
  ::std::string* mutable_errormessage();
  ::std::string* release_errormessage();
  void set_allocated_errormessage(::std::string* errormessage);

  // optional .naothmessages.SymbolValueList inputSymbolList = 10;
  bool has_inputsymbollist() const;
  void clear_inputsymbollist();
  static const int kInputSymbolListFieldNumber = 10;
  const ::naothmessages::SymbolValueList& inputsymbollist() const;
  ::naothmessages::SymbolValueList* mutable_inputsymbollist();
  ::naothmessages::SymbolValueList* release_inputsymbollist();
  void set_allocated_inputsymbollist(::naothmessages::SymbolValueList* inputsymbollist);

  // optional .naothmessages.SymbolValueList outputSymbolList = 11;
  bool has_outputsymbollist() const;
  void clear_outputsymbollist();
  static const int kOutputSymbolListFieldNumber = 11;
  const ::naothmessages::SymbolValueList& outputsymbollist() const;
  ::naothmessages::SymbolValueList* mutable_outputsymbollist();
  ::naothmessages::SymbolValueList* release_outputsymbollist();
  void set_allocated_outputsymbollist(::naothmessages::SymbolValueList* outputsymbollist);

  // optional uint32 frameNumber = 5;
  bool has_framenumber() const;
  void clear_framenumber();
  static const int kFrameNumberFieldNumber = 5;
  ::google::protobuf::uint32 framenumber() const;
  void set_framenumber(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.BehaviorStateSparse)
 private:
  void set_has_agent();
  void clear_has_agent();
  void set_has_inputsymbollist();
  void clear_has_inputsymbollist();
  void set_has_outputsymbollist();
  void clear_has_outputsymbollist();
  void set_has_framenumber();
  void clear_has_framenumber();
  void set_has_errormessage();
  void clear_has_errormessage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse > activerootactions_;
  ::google::protobuf::internal::ArenaStringPtr agent_;
  ::google::protobuf::internal::ArenaStringPtr errormessage_;
  ::naothmessages::SymbolValueList* inputsymbollist_;
  ::naothmessages::SymbolValueList* outputsymbollist_;
  ::google::protobuf::uint32 framenumber_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BehaviorStateComplete_EnumType_Element : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.BehaviorStateComplete.EnumType.Element) */ {
 public:
  BehaviorStateComplete_EnumType_Element();
  virtual ~BehaviorStateComplete_EnumType_Element();

  BehaviorStateComplete_EnumType_Element(const BehaviorStateComplete_EnumType_Element& from);

  inline BehaviorStateComplete_EnumType_Element& operator=(const BehaviorStateComplete_EnumType_Element& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BehaviorStateComplete_EnumType_Element(BehaviorStateComplete_EnumType_Element&& from) noexcept
    : BehaviorStateComplete_EnumType_Element() {
    *this = ::std::move(from);
  }

  inline BehaviorStateComplete_EnumType_Element& operator=(BehaviorStateComplete_EnumType_Element&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorStateComplete_EnumType_Element& default_instance();

  static inline const BehaviorStateComplete_EnumType_Element* internal_default_instance() {
    return reinterpret_cast<const BehaviorStateComplete_EnumType_Element*>(
               &_BehaviorStateComplete_EnumType_Element_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(BehaviorStateComplete_EnumType_Element* other);
  friend void swap(BehaviorStateComplete_EnumType_Element& a, BehaviorStateComplete_EnumType_Element& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BehaviorStateComplete_EnumType_Element* New() const PROTOBUF_FINAL { return New(NULL); }

  BehaviorStateComplete_EnumType_Element* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BehaviorStateComplete_EnumType_Element& from);
  void MergeFrom(const BehaviorStateComplete_EnumType_Element& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BehaviorStateComplete_EnumType_Element* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.BehaviorStateComplete.EnumType.Element)
 private:
  void set_has_value();
  void clear_has_value();
  void set_has_name();
  void clear_has_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 value_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BehaviorStateComplete_EnumType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.BehaviorStateComplete.EnumType) */ {
 public:
  BehaviorStateComplete_EnumType();
  virtual ~BehaviorStateComplete_EnumType();

  BehaviorStateComplete_EnumType(const BehaviorStateComplete_EnumType& from);

  inline BehaviorStateComplete_EnumType& operator=(const BehaviorStateComplete_EnumType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BehaviorStateComplete_EnumType(BehaviorStateComplete_EnumType&& from) noexcept
    : BehaviorStateComplete_EnumType() {
    *this = ::std::move(from);
  }

  inline BehaviorStateComplete_EnumType& operator=(BehaviorStateComplete_EnumType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorStateComplete_EnumType& default_instance();

  static inline const BehaviorStateComplete_EnumType* internal_default_instance() {
    return reinterpret_cast<const BehaviorStateComplete_EnumType*>(
               &_BehaviorStateComplete_EnumType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(BehaviorStateComplete_EnumType* other);
  friend void swap(BehaviorStateComplete_EnumType& a, BehaviorStateComplete_EnumType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BehaviorStateComplete_EnumType* New() const PROTOBUF_FINAL { return New(NULL); }

  BehaviorStateComplete_EnumType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BehaviorStateComplete_EnumType& from);
  void MergeFrom(const BehaviorStateComplete_EnumType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BehaviorStateComplete_EnumType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BehaviorStateComplete_EnumType_Element Element;

  // accessors -------------------------------------------------------

  // repeated .naothmessages.BehaviorStateComplete.EnumType.Element elements = 2;
  int elements_size() const;
  void clear_elements();
  static const int kElementsFieldNumber = 2;
  const ::naothmessages::BehaviorStateComplete_EnumType_Element& elements(int index) const;
  ::naothmessages::BehaviorStateComplete_EnumType_Element* mutable_elements(int index);
  ::naothmessages::BehaviorStateComplete_EnumType_Element* add_elements();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType_Element >*
      mutable_elements();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType_Element >&
      elements() const;

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:naothmessages.BehaviorStateComplete.EnumType)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType_Element > elements_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BehaviorStateComplete_Option_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.BehaviorStateComplete.Option.State) */ {
 public:
  BehaviorStateComplete_Option_State();
  virtual ~BehaviorStateComplete_Option_State();

  BehaviorStateComplete_Option_State(const BehaviorStateComplete_Option_State& from);

  inline BehaviorStateComplete_Option_State& operator=(const BehaviorStateComplete_Option_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BehaviorStateComplete_Option_State(BehaviorStateComplete_Option_State&& from) noexcept
    : BehaviorStateComplete_Option_State() {
    *this = ::std::move(from);
  }

  inline BehaviorStateComplete_Option_State& operator=(BehaviorStateComplete_Option_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorStateComplete_Option_State& default_instance();

  static inline const BehaviorStateComplete_Option_State* internal_default_instance() {
    return reinterpret_cast<const BehaviorStateComplete_Option_State*>(
               &_BehaviorStateComplete_Option_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(BehaviorStateComplete_Option_State* other);
  friend void swap(BehaviorStateComplete_Option_State& a, BehaviorStateComplete_Option_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BehaviorStateComplete_Option_State* New() const PROTOBUF_FINAL { return New(NULL); }

  BehaviorStateComplete_Option_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BehaviorStateComplete_Option_State& from);
  void MergeFrom(const BehaviorStateComplete_Option_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BehaviorStateComplete_Option_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool target = 2;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 2;
  bool target() const;
  void set_target(bool value);

  // @@protoc_insertion_point(class_scope:naothmessages.BehaviorStateComplete.Option.State)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_target();
  void clear_has_target();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool target_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BehaviorStateComplete_Option : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.BehaviorStateComplete.Option) */ {
 public:
  BehaviorStateComplete_Option();
  virtual ~BehaviorStateComplete_Option();

  BehaviorStateComplete_Option(const BehaviorStateComplete_Option& from);

  inline BehaviorStateComplete_Option& operator=(const BehaviorStateComplete_Option& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BehaviorStateComplete_Option(BehaviorStateComplete_Option&& from) noexcept
    : BehaviorStateComplete_Option() {
    *this = ::std::move(from);
  }

  inline BehaviorStateComplete_Option& operator=(BehaviorStateComplete_Option&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorStateComplete_Option& default_instance();

  static inline const BehaviorStateComplete_Option* internal_default_instance() {
    return reinterpret_cast<const BehaviorStateComplete_Option*>(
               &_BehaviorStateComplete_Option_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(BehaviorStateComplete_Option* other);
  friend void swap(BehaviorStateComplete_Option& a, BehaviorStateComplete_Option& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BehaviorStateComplete_Option* New() const PROTOBUF_FINAL { return New(NULL); }

  BehaviorStateComplete_Option* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BehaviorStateComplete_Option& from);
  void MergeFrom(const BehaviorStateComplete_Option& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BehaviorStateComplete_Option* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BehaviorStateComplete_Option_State State;

  // accessors -------------------------------------------------------

  // repeated .naothmessages.XABSLSymbol parameters = 2;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 2;
  const ::naothmessages::XABSLSymbol& parameters(int index) const;
  ::naothmessages::XABSLSymbol* mutable_parameters(int index);
  ::naothmessages::XABSLSymbol* add_parameters();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLSymbol >*
      mutable_parameters();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLSymbol >&
      parameters() const;

  // repeated .naothmessages.BehaviorStateComplete.Option.State states = 3;
  int states_size() const;
  void clear_states();
  static const int kStatesFieldNumber = 3;
  const ::naothmessages::BehaviorStateComplete_Option_State& states(int index) const;
  ::naothmessages::BehaviorStateComplete_Option_State* mutable_states(int index);
  ::naothmessages::BehaviorStateComplete_Option_State* add_states();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option_State >*
      mutable_states();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option_State >&
      states() const;

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:naothmessages.BehaviorStateComplete.Option)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLSymbol > parameters_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option_State > states_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BehaviorStateComplete_Agent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.BehaviorStateComplete.Agent) */ {
 public:
  BehaviorStateComplete_Agent();
  virtual ~BehaviorStateComplete_Agent();

  BehaviorStateComplete_Agent(const BehaviorStateComplete_Agent& from);

  inline BehaviorStateComplete_Agent& operator=(const BehaviorStateComplete_Agent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BehaviorStateComplete_Agent(BehaviorStateComplete_Agent&& from) noexcept
    : BehaviorStateComplete_Agent() {
    *this = ::std::move(from);
  }

  inline BehaviorStateComplete_Agent& operator=(BehaviorStateComplete_Agent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorStateComplete_Agent& default_instance();

  static inline const BehaviorStateComplete_Agent* internal_default_instance() {
    return reinterpret_cast<const BehaviorStateComplete_Agent*>(
               &_BehaviorStateComplete_Agent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(BehaviorStateComplete_Agent* other);
  friend void swap(BehaviorStateComplete_Agent& a, BehaviorStateComplete_Agent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BehaviorStateComplete_Agent* New() const PROTOBUF_FINAL { return New(NULL); }

  BehaviorStateComplete_Agent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BehaviorStateComplete_Agent& from);
  void MergeFrom(const BehaviorStateComplete_Agent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BehaviorStateComplete_Agent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string rootOption = 2;
  bool has_rootoption() const;
  void clear_rootoption();
  static const int kRootOptionFieldNumber = 2;
  const ::std::string& rootoption() const;
  void set_rootoption(const ::std::string& value);
  #if LANG_CXX11
  void set_rootoption(::std::string&& value);
  #endif
  void set_rootoption(const char* value);
  void set_rootoption(const char* value, size_t size);
  ::std::string* mutable_rootoption();
  ::std::string* release_rootoption();
  void set_allocated_rootoption(::std::string* rootoption);

  // @@protoc_insertion_point(class_scope:naothmessages.BehaviorStateComplete.Agent)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_rootoption();
  void clear_has_rootoption();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr rootoption_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BehaviorStateComplete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.BehaviorStateComplete) */ {
 public:
  BehaviorStateComplete();
  virtual ~BehaviorStateComplete();

  BehaviorStateComplete(const BehaviorStateComplete& from);

  inline BehaviorStateComplete& operator=(const BehaviorStateComplete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BehaviorStateComplete(BehaviorStateComplete&& from) noexcept
    : BehaviorStateComplete() {
    *this = ::std::move(from);
  }

  inline BehaviorStateComplete& operator=(BehaviorStateComplete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorStateComplete& default_instance();

  static inline const BehaviorStateComplete* internal_default_instance() {
    return reinterpret_cast<const BehaviorStateComplete*>(
               &_BehaviorStateComplete_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(BehaviorStateComplete* other);
  friend void swap(BehaviorStateComplete& a, BehaviorStateComplete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BehaviorStateComplete* New() const PROTOBUF_FINAL { return New(NULL); }

  BehaviorStateComplete* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BehaviorStateComplete& from);
  void MergeFrom(const BehaviorStateComplete& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BehaviorStateComplete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BehaviorStateComplete_EnumType EnumType;
  typedef BehaviorStateComplete_Option Option;
  typedef BehaviorStateComplete_Agent Agent;

  // accessors -------------------------------------------------------

  // repeated .naothmessages.BehaviorStateComplete.EnumType enumerations = 10;
  int enumerations_size() const;
  void clear_enumerations();
  static const int kEnumerationsFieldNumber = 10;
  const ::naothmessages::BehaviorStateComplete_EnumType& enumerations(int index) const;
  ::naothmessages::BehaviorStateComplete_EnumType* mutable_enumerations(int index);
  ::naothmessages::BehaviorStateComplete_EnumType* add_enumerations();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType >*
      mutable_enumerations();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType >&
      enumerations() const;

  // repeated .naothmessages.BehaviorStateComplete.Option options = 11;
  int options_size() const;
  void clear_options();
  static const int kOptionsFieldNumber = 11;
  const ::naothmessages::BehaviorStateComplete_Option& options(int index) const;
  ::naothmessages::BehaviorStateComplete_Option* mutable_options(int index);
  ::naothmessages::BehaviorStateComplete_Option* add_options();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option >*
      mutable_options();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option >&
      options() const;

  // repeated .naothmessages.BehaviorStateComplete.Agent agents = 12;
  int agents_size() const;
  void clear_agents();
  static const int kAgentsFieldNumber = 12;
  const ::naothmessages::BehaviorStateComplete_Agent& agents(int index) const;
  ::naothmessages::BehaviorStateComplete_Agent* mutable_agents(int index);
  ::naothmessages::BehaviorStateComplete_Agent* add_agents();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Agent >*
      mutable_agents();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Agent >&
      agents() const;

  // optional .naothmessages.SymbolValueList inputSymbolList = 13;
  bool has_inputsymbollist() const;
  void clear_inputsymbollist();
  static const int kInputSymbolListFieldNumber = 13;
  const ::naothmessages::SymbolValueList& inputsymbollist() const;
  ::naothmessages::SymbolValueList* mutable_inputsymbollist();
  ::naothmessages::SymbolValueList* release_inputsymbollist();
  void set_allocated_inputsymbollist(::naothmessages::SymbolValueList* inputsymbollist);

  // optional .naothmessages.SymbolValueList outputSymbolList = 14;
  bool has_outputsymbollist() const;
  void clear_outputsymbollist();
  static const int kOutputSymbolListFieldNumber = 14;
  const ::naothmessages::SymbolValueList& outputsymbollist() const;
  ::naothmessages::SymbolValueList* mutable_outputsymbollist();
  ::naothmessages::SymbolValueList* release_outputsymbollist();
  void set_allocated_outputsymbollist(::naothmessages::SymbolValueList* outputsymbollist);

  // optional uint32 frameNumber = 15;
  bool has_framenumber() const;
  void clear_framenumber();
  static const int kFrameNumberFieldNumber = 15;
  ::google::protobuf::uint32 framenumber() const;
  void set_framenumber(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.BehaviorStateComplete)
 private:
  void set_has_inputsymbollist();
  void clear_has_inputsymbollist();
  void set_has_outputsymbollist();
  void clear_has_outputsymbollist();
  void set_has_framenumber();
  void clear_has_framenumber();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType > enumerations_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option > options_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Agent > agents_;
  ::naothmessages::SymbolValueList* inputsymbollist_;
  ::naothmessages::SymbolValueList* outputsymbollist_;
  ::google::protobuf::uint32 framenumber_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Module : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.Module) */ {
 public:
  Module();
  virtual ~Module();

  Module(const Module& from);

  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Module(Module&& from) noexcept
    : Module() {
    *this = ::std::move(from);
  }

  inline Module& operator=(Module&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Module& default_instance();

  static inline const Module* internal_default_instance() {
    return reinterpret_cast<const Module*>(
               &_Module_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(Module* other);
  friend void swap(Module& a, Module& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Module* New() const PROTOBUF_FINAL { return New(NULL); }

  Module* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Module& from);
  void MergeFrom(const Module& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Module* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string usedRepresentations = 2;
  int usedrepresentations_size() const;
  void clear_usedrepresentations();
  static const int kUsedRepresentationsFieldNumber = 2;
  const ::std::string& usedrepresentations(int index) const;
  ::std::string* mutable_usedrepresentations(int index);
  void set_usedrepresentations(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_usedrepresentations(int index, ::std::string&& value);
  #endif
  void set_usedrepresentations(int index, const char* value);
  void set_usedrepresentations(int index, const char* value, size_t size);
  ::std::string* add_usedrepresentations();
  void add_usedrepresentations(const ::std::string& value);
  #if LANG_CXX11
  void add_usedrepresentations(::std::string&& value);
  #endif
  void add_usedrepresentations(const char* value);
  void add_usedrepresentations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& usedrepresentations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_usedrepresentations();

  // repeated string providedRepresentations = 3;
  int providedrepresentations_size() const;
  void clear_providedrepresentations();
  static const int kProvidedRepresentationsFieldNumber = 3;
  const ::std::string& providedrepresentations(int index) const;
  ::std::string* mutable_providedrepresentations(int index);
  void set_providedrepresentations(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_providedrepresentations(int index, ::std::string&& value);
  #endif
  void set_providedrepresentations(int index, const char* value);
  void set_providedrepresentations(int index, const char* value, size_t size);
  ::std::string* add_providedrepresentations();
  void add_providedrepresentations(const ::std::string& value);
  #if LANG_CXX11
  void add_providedrepresentations(::std::string&& value);
  #endif
  void add_providedrepresentations(const char* value);
  void add_providedrepresentations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& providedrepresentations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_providedrepresentations();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool active = 4 [default = false];
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 4;
  bool active() const;
  void set_active(bool value);

  // @@protoc_insertion_point(class_scope:naothmessages.Module)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_active();
  void clear_has_active();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> usedrepresentations_;
  ::google::protobuf::RepeatedPtrField< ::std::string> providedrepresentations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool active_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModuleList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.ModuleList) */ {
 public:
  ModuleList();
  virtual ~ModuleList();

  ModuleList(const ModuleList& from);

  inline ModuleList& operator=(const ModuleList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModuleList(ModuleList&& from) noexcept
    : ModuleList() {
    *this = ::std::move(from);
  }

  inline ModuleList& operator=(ModuleList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModuleList& default_instance();

  static inline const ModuleList* internal_default_instance() {
    return reinterpret_cast<const ModuleList*>(
               &_ModuleList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ModuleList* other);
  friend void swap(ModuleList& a, ModuleList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModuleList* New() const PROTOBUF_FINAL { return New(NULL); }

  ModuleList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModuleList& from);
  void MergeFrom(const ModuleList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModuleList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .naothmessages.Module modules = 1;
  int modules_size() const;
  void clear_modules();
  static const int kModulesFieldNumber = 1;
  const ::naothmessages::Module& modules(int index) const;
  ::naothmessages::Module* mutable_modules(int index);
  ::naothmessages::Module* add_modules();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::Module >*
      mutable_modules();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::Module >&
      modules() const;

  // @@protoc_insertion_point(class_scope:naothmessages.ModuleList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::Module > modules_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DebugRequest_Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.DebugRequest.Item) */ {
 public:
  DebugRequest_Item();
  virtual ~DebugRequest_Item();

  DebugRequest_Item(const DebugRequest_Item& from);

  inline DebugRequest_Item& operator=(const DebugRequest_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DebugRequest_Item(DebugRequest_Item&& from) noexcept
    : DebugRequest_Item() {
    *this = ::std::move(from);
  }

  inline DebugRequest_Item& operator=(DebugRequest_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugRequest_Item& default_instance();

  static inline const DebugRequest_Item* internal_default_instance() {
    return reinterpret_cast<const DebugRequest_Item*>(
               &_DebugRequest_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(DebugRequest_Item* other);
  friend void swap(DebugRequest_Item& a, DebugRequest_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DebugRequest_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  DebugRequest_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DebugRequest_Item& from);
  void MergeFrom(const DebugRequest_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DebugRequest_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string description = 2;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required bool value = 4 [default = false];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  bool value() const;
  void set_value(bool value);

  // @@protoc_insertion_point(class_scope:naothmessages.DebugRequest.Item)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_description();
  void clear_has_description();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  bool value_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DebugRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.DebugRequest) */ {
 public:
  DebugRequest();
  virtual ~DebugRequest();

  DebugRequest(const DebugRequest& from);

  inline DebugRequest& operator=(const DebugRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DebugRequest(DebugRequest&& from) noexcept
    : DebugRequest() {
    *this = ::std::move(from);
  }

  inline DebugRequest& operator=(DebugRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugRequest& default_instance();

  static inline const DebugRequest* internal_default_instance() {
    return reinterpret_cast<const DebugRequest*>(
               &_DebugRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(DebugRequest* other);
  friend void swap(DebugRequest& a, DebugRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DebugRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DebugRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DebugRequest& from);
  void MergeFrom(const DebugRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DebugRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DebugRequest_Item Item;

  // accessors -------------------------------------------------------

  // repeated .naothmessages.DebugRequest.Item requests = 1;
  int requests_size() const;
  void clear_requests();
  static const int kRequestsFieldNumber = 1;
  const ::naothmessages::DebugRequest_Item& requests(int index) const;
  ::naothmessages::DebugRequest_Item* mutable_requests(int index);
  ::naothmessages::DebugRequest_Item* add_requests();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::DebugRequest_Item >*
      mutable_requests();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::DebugRequest_Item >&
      requests() const;

  // @@protoc_insertion_point(class_scope:naothmessages.DebugRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::DebugRequest_Item > requests_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FeatureKeyPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.FeatureKeyPoint) */ {
 public:
  FeatureKeyPoint();
  virtual ~FeatureKeyPoint();

  FeatureKeyPoint(const FeatureKeyPoint& from);

  inline FeatureKeyPoint& operator=(const FeatureKeyPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FeatureKeyPoint(FeatureKeyPoint&& from) noexcept
    : FeatureKeyPoint() {
    *this = ::std::move(from);
  }

  inline FeatureKeyPoint& operator=(FeatureKeyPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FeatureKeyPoint& default_instance();

  static inline const FeatureKeyPoint* internal_default_instance() {
    return reinterpret_cast<const FeatureKeyPoint*>(
               &_FeatureKeyPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(FeatureKeyPoint* other);
  friend void swap(FeatureKeyPoint& a, FeatureKeyPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FeatureKeyPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  FeatureKeyPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FeatureKeyPoint& from);
  void MergeFrom(const FeatureKeyPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FeatureKeyPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .naothmessages.FloatVector2 pt = 1;
  bool has_pt() const;
  void clear_pt();
  static const int kPtFieldNumber = 1;
  const ::naothmessages::FloatVector2& pt() const;
  ::naothmessages::FloatVector2* mutable_pt();
  ::naothmessages::FloatVector2* release_pt();
  void set_allocated_pt(::naothmessages::FloatVector2* pt);

  // required float size = 2;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  float size() const;
  void set_size(float value);

  // required float angle = 3;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 3;
  float angle() const;
  void set_angle(float value);

  // required float response = 4;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 4;
  float response() const;
  void set_response(float value);

  // required int32 octave = 5;
  bool has_octave() const;
  void clear_octave();
  static const int kOctaveFieldNumber = 5;
  ::google::protobuf::int32 octave() const;
  void set_octave(::google::protobuf::int32 value);

  // required int32 class_id = 6;
  bool has_class_id() const;
  void clear_class_id();
  static const int kClassIdFieldNumber = 6;
  ::google::protobuf::int32 class_id() const;
  void set_class_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.FeatureKeyPoint)
 private:
  void set_has_pt();
  void clear_has_pt();
  void set_has_size();
  void clear_has_size();
  void set_has_angle();
  void clear_has_angle();
  void set_has_response();
  void clear_has_response();
  void set_has_octave();
  void clear_has_octave();
  void set_has_class_id();
  void clear_has_class_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::naothmessages::FloatVector2* pt_;
  float size_;
  float angle_;
  float response_;
  ::google::protobuf::int32 octave_;
  ::google::protobuf::int32 class_id_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FeatureDetectionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.FeatureDetectionResult) */ {
 public:
  FeatureDetectionResult();
  virtual ~FeatureDetectionResult();

  FeatureDetectionResult(const FeatureDetectionResult& from);

  inline FeatureDetectionResult& operator=(const FeatureDetectionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FeatureDetectionResult(FeatureDetectionResult&& from) noexcept
    : FeatureDetectionResult() {
    *this = ::std::move(from);
  }

  inline FeatureDetectionResult& operator=(FeatureDetectionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FeatureDetectionResult& default_instance();

  static inline const FeatureDetectionResult* internal_default_instance() {
    return reinterpret_cast<const FeatureDetectionResult*>(
               &_FeatureDetectionResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(FeatureDetectionResult* other);
  friend void swap(FeatureDetectionResult& a, FeatureDetectionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FeatureDetectionResult* New() const PROTOBUF_FINAL { return New(NULL); }

  FeatureDetectionResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FeatureDetectionResult& from);
  void MergeFrom(const FeatureDetectionResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FeatureDetectionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .naothmessages.FeatureKeyPoint keyPoints = 2;
  int keypoints_size() const;
  void clear_keypoints();
  static const int kKeyPointsFieldNumber = 2;
  const ::naothmessages::FeatureKeyPoint& keypoints(int index) const;
  ::naothmessages::FeatureKeyPoint* mutable_keypoints(int index);
  ::naothmessages::FeatureKeyPoint* add_keypoints();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureKeyPoint >*
      mutable_keypoints();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureKeyPoint >&
      keypoints() const;

  // repeated .naothmessages.SingleDescriptor descriptors = 3;
  int descriptors_size() const;
  void clear_descriptors();
  static const int kDescriptorsFieldNumber = 3;
  const ::naothmessages::SingleDescriptor& descriptors(int index) const;
  ::naothmessages::SingleDescriptor* mutable_descriptors(int index);
  ::naothmessages::SingleDescriptor* add_descriptors();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >*
      mutable_descriptors();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >&
      descriptors() const;

  // repeated string namesForKeyPoints = 4;
  int namesforkeypoints_size() const;
  void clear_namesforkeypoints();
  static const int kNamesForKeyPointsFieldNumber = 4;
  const ::std::string& namesforkeypoints(int index) const;
  ::std::string* mutable_namesforkeypoints(int index);
  void set_namesforkeypoints(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_namesforkeypoints(int index, ::std::string&& value);
  #endif
  void set_namesforkeypoints(int index, const char* value);
  void set_namesforkeypoints(int index, const char* value, size_t size);
  ::std::string* add_namesforkeypoints();
  void add_namesforkeypoints(const ::std::string& value);
  #if LANG_CXX11
  void add_namesforkeypoints(::std::string&& value);
  #endif
  void add_namesforkeypoints(const char* value);
  void add_namesforkeypoints(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& namesforkeypoints() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_namesforkeypoints();

  // required bytes grayScaleImage = 1;
  bool has_grayscaleimage() const;
  void clear_grayscaleimage();
  static const int kGrayScaleImageFieldNumber = 1;
  const ::std::string& grayscaleimage() const;
  void set_grayscaleimage(const ::std::string& value);
  #if LANG_CXX11
  void set_grayscaleimage(::std::string&& value);
  #endif
  void set_grayscaleimage(const char* value);
  void set_grayscaleimage(const void* value, size_t size);
  ::std::string* mutable_grayscaleimage();
  ::std::string* release_grayscaleimage();
  void set_allocated_grayscaleimage(::std::string* grayscaleimage);

  // optional int32 numberOfFeatureElements = 5 [default = 64];
  bool has_numberoffeatureelements() const;
  void clear_numberoffeatureelements();
  static const int kNumberOfFeatureElementsFieldNumber = 5;
  ::google::protobuf::int32 numberoffeatureelements() const;
  void set_numberoffeatureelements(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.FeatureDetectionResult)
 private:
  void set_has_grayscaleimage();
  void clear_has_grayscaleimage();
  void set_has_numberoffeatureelements();
  void clear_has_numberoffeatureelements();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureKeyPoint > keypoints_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor > descriptors_;
  ::google::protobuf::RepeatedPtrField< ::std::string> namesforkeypoints_;
  ::google::protobuf::internal::ArenaStringPtr grayscaleimage_;
  ::google::protobuf::int32 numberoffeatureelements_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SingleDescriptor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.SingleDescriptor) */ {
 public:
  SingleDescriptor();
  virtual ~SingleDescriptor();

  SingleDescriptor(const SingleDescriptor& from);

  inline SingleDescriptor& operator=(const SingleDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SingleDescriptor(SingleDescriptor&& from) noexcept
    : SingleDescriptor() {
    *this = ::std::move(from);
  }

  inline SingleDescriptor& operator=(SingleDescriptor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleDescriptor& default_instance();

  static inline const SingleDescriptor* internal_default_instance() {
    return reinterpret_cast<const SingleDescriptor*>(
               &_SingleDescriptor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(SingleDescriptor* other);
  friend void swap(SingleDescriptor& a, SingleDescriptor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SingleDescriptor* New() const PROTOBUF_FINAL { return New(NULL); }

  SingleDescriptor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SingleDescriptor& from);
  void MergeFrom(const SingleDescriptor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SingleDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float d = 1;
  int d_size() const;
  void clear_d();
  static const int kDFieldNumber = 1;
  float d(int index) const;
  void set_d(int index, float value);
  void add_d(float value);
  const ::google::protobuf::RepeatedField< float >&
      d() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_d();

  // @@protoc_insertion_point(class_scope:naothmessages.SingleDescriptor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > d_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FeatureClass : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.FeatureClass) */ {
 public:
  FeatureClass();
  virtual ~FeatureClass();

  FeatureClass(const FeatureClass& from);

  inline FeatureClass& operator=(const FeatureClass& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FeatureClass(FeatureClass&& from) noexcept
    : FeatureClass() {
    *this = ::std::move(from);
  }

  inline FeatureClass& operator=(FeatureClass&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FeatureClass& default_instance();

  static inline const FeatureClass* internal_default_instance() {
    return reinterpret_cast<const FeatureClass*>(
               &_FeatureClass_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(FeatureClass* other);
  friend void swap(FeatureClass& a, FeatureClass& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FeatureClass* New() const PROTOBUF_FINAL { return New(NULL); }

  FeatureClass* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FeatureClass& from);
  void MergeFrom(const FeatureClass& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FeatureClass* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .naothmessages.SingleDescriptor samples = 2;
  int samples_size() const;
  void clear_samples();
  static const int kSamplesFieldNumber = 2;
  const ::naothmessages::SingleDescriptor& samples(int index) const;
  ::naothmessages::SingleDescriptor* mutable_samples(int index);
  ::naothmessages::SingleDescriptor* add_samples();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >*
      mutable_samples();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >&
      samples() const;

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional double objectHeight = 3;
  bool has_objectheight() const;
  void clear_objectheight();
  static const int kObjectHeightFieldNumber = 3;
  double objectheight() const;
  void set_objectheight(double value);

  // @@protoc_insertion_point(class_scope:naothmessages.FeatureClass)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_objectheight();
  void clear_has_objectheight();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor > samples_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  double objectheight_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FeatureTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:naothmessages.FeatureTable) */ {
 public:
  FeatureTable();
  virtual ~FeatureTable();

  FeatureTable(const FeatureTable& from);

  inline FeatureTable& operator=(const FeatureTable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FeatureTable(FeatureTable&& from) noexcept
    : FeatureTable() {
    *this = ::std::move(from);
  }

  inline FeatureTable& operator=(FeatureTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FeatureTable& default_instance();

  static inline const FeatureTable* internal_default_instance() {
    return reinterpret_cast<const FeatureTable*>(
               &_FeatureTable_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(FeatureTable* other);
  friend void swap(FeatureTable& a, FeatureTable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FeatureTable* New() const PROTOBUF_FINAL { return New(NULL); }

  FeatureTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FeatureTable& from);
  void MergeFrom(const FeatureTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FeatureTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .naothmessages.FeatureClass classes = 1;
  int classes_size() const;
  void clear_classes();
  static const int kClassesFieldNumber = 1;
  const ::naothmessages::FeatureClass& classes(int index) const;
  ::naothmessages::FeatureClass* mutable_classes(int index);
  ::naothmessages::FeatureClass* add_classes();
  ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureClass >*
      mutable_classes();
  const ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureClass >&
      classes() const;

  // optional int32 numberOfFeatureElements = 2 [default = 64];
  bool has_numberoffeatureelements() const;
  void clear_numberoffeatureelements();
  static const int kNumberOfFeatureElementsFieldNumber = 2;
  ::google::protobuf::int32 numberoffeatureelements() const;
  void set_numberoffeatureelements(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:naothmessages.FeatureTable)
 private:
  void set_has_numberoffeatureelements();
  void clear_has_numberoffeatureelements();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureClass > classes_;
  ::google::protobuf::int32 numberoffeatureelements_;
  friend struct protobuf_Messages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMDArg

// required string name = 1;
inline bool CMDArg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMDArg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMDArg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMDArg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMDArg::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.CMDArg.name)
  return name_.GetNoArena();
}
inline void CMDArg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.CMDArg.name)
}
#if LANG_CXX11
inline void CMDArg::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.CMDArg.name)
}
#endif
inline void CMDArg::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.CMDArg.name)
}
inline void CMDArg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.CMDArg.name)
}
inline ::std::string* CMDArg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.CMDArg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDArg::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.CMDArg.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDArg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.CMDArg.name)
}

// optional bytes bytes = 3;
inline bool CMDArg::has_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMDArg::set_has_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMDArg::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMDArg::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes();
}
inline const ::std::string& CMDArg::bytes() const {
  // @@protoc_insertion_point(field_get:naothmessages.CMDArg.bytes)
  return bytes_.GetNoArena();
}
inline void CMDArg::set_bytes(const ::std::string& value) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.CMDArg.bytes)
}
#if LANG_CXX11
inline void CMDArg::set_bytes(::std::string&& value) {
  set_has_bytes();
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.CMDArg.bytes)
}
#endif
inline void CMDArg::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.CMDArg.bytes)
}
inline void CMDArg::set_bytes(const void* value, size_t size) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.CMDArg.bytes)
}
inline ::std::string* CMDArg::mutable_bytes() {
  set_has_bytes();
  // @@protoc_insertion_point(field_mutable:naothmessages.CMDArg.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDArg::release_bytes() {
  // @@protoc_insertion_point(field_release:naothmessages.CMDArg.bytes)
  clear_has_bytes();
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDArg::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    set_has_bytes();
  } else {
    clear_has_bytes();
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.CMDArg.bytes)
}

// -------------------------------------------------------------------

// CMD

// required string name = 1;
inline bool CMD::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMD::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.CMD.name)
  return name_.GetNoArena();
}
inline void CMD::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.CMD.name)
}
#if LANG_CXX11
inline void CMD::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.CMD.name)
}
#endif
inline void CMD::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.CMD.name)
}
inline void CMD::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.CMD.name)
}
inline ::std::string* CMD::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.CMD.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.CMD.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.CMD.name)
}

// repeated .naothmessages.CMDArg args = 2;
inline int CMD::args_size() const {
  return args_.size();
}
inline void CMD::clear_args() {
  args_.Clear();
}
inline const ::naothmessages::CMDArg& CMD::args(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.CMD.args)
  return args_.Get(index);
}
inline ::naothmessages::CMDArg* CMD::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.CMD.args)
  return args_.Mutable(index);
}
inline ::naothmessages::CMDArg* CMD::add_args() {
  // @@protoc_insertion_point(field_add:naothmessages.CMD.args)
  return args_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::CMDArg >*
CMD::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.CMD.args)
  return &args_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::CMDArg >&
CMD::args() const {
  // @@protoc_insertion_point(field_list:naothmessages.CMD.args)
  return args_;
}

// -------------------------------------------------------------------

// StopwatchItem

// required string name = 1;
inline bool StopwatchItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StopwatchItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StopwatchItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StopwatchItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& StopwatchItem::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.StopwatchItem.name)
  return name_.GetNoArena();
}
inline void StopwatchItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.StopwatchItem.name)
}
#if LANG_CXX11
inline void StopwatchItem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.StopwatchItem.name)
}
#endif
inline void StopwatchItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.StopwatchItem.name)
}
inline void StopwatchItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.StopwatchItem.name)
}
inline ::std::string* StopwatchItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.StopwatchItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopwatchItem::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.StopwatchItem.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopwatchItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.StopwatchItem.name)
}

// required int32 time = 2;
inline bool StopwatchItem::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StopwatchItem::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StopwatchItem::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StopwatchItem::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 StopwatchItem::time() const {
  // @@protoc_insertion_point(field_get:naothmessages.StopwatchItem.time)
  return time_;
}
inline void StopwatchItem::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.StopwatchItem.time)
}

// -------------------------------------------------------------------

// Stopwatches

// repeated .naothmessages.StopwatchItem stopwatches = 1;
inline int Stopwatches::stopwatches_size() const {
  return stopwatches_.size();
}
inline void Stopwatches::clear_stopwatches() {
  stopwatches_.Clear();
}
inline const ::naothmessages::StopwatchItem& Stopwatches::stopwatches(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Stopwatches.stopwatches)
  return stopwatches_.Get(index);
}
inline ::naothmessages::StopwatchItem* Stopwatches::mutable_stopwatches(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Stopwatches.stopwatches)
  return stopwatches_.Mutable(index);
}
inline ::naothmessages::StopwatchItem* Stopwatches::add_stopwatches() {
  // @@protoc_insertion_point(field_add:naothmessages.Stopwatches.stopwatches)
  return stopwatches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::StopwatchItem >*
Stopwatches::mutable_stopwatches() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Stopwatches.stopwatches)
  return &stopwatches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::StopwatchItem >&
Stopwatches::stopwatches() const {
  // @@protoc_insertion_point(field_list:naothmessages.Stopwatches.stopwatches)
  return stopwatches_;
}

// -------------------------------------------------------------------

// PlotItem

// required .naothmessages.PlotItem.PlotType type = 1;
inline bool PlotItem::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlotItem::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlotItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlotItem::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::naothmessages::PlotItem_PlotType PlotItem::type() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.type)
  return static_cast< ::naothmessages::PlotItem_PlotType >(type_);
}
inline void PlotItem::set_type(::naothmessages::PlotItem_PlotType value) {
  assert(::naothmessages::PlotItem_PlotType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.type)
}

// required string name = 2;
inline bool PlotItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlotItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlotItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlotItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PlotItem::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.name)
  return name_.GetNoArena();
}
inline void PlotItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.name)
}
#if LANG_CXX11
inline void PlotItem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.PlotItem.name)
}
#endif
inline void PlotItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.PlotItem.name)
}
inline void PlotItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.PlotItem.name)
}
inline ::std::string* PlotItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.PlotItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlotItem::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.PlotItem.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlotItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.PlotItem.name)
}

// optional double value = 3;
inline bool PlotItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlotItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlotItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlotItem::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double PlotItem::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.value)
  return value_;
}
inline void PlotItem::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.value)
}

// optional double x = 4;
inline bool PlotItem::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlotItem::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlotItem::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlotItem::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double PlotItem::x() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.x)
  return x_;
}
inline void PlotItem::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.x)
}

// optional double y = 5;
inline bool PlotItem::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlotItem::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlotItem::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlotItem::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double PlotItem::y() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.y)
  return y_;
}
inline void PlotItem::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.y)
}

// optional double rotation = 6;
inline bool PlotItem::has_rotation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlotItem::set_has_rotation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlotItem::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlotItem::clear_rotation() {
  rotation_ = 0;
  clear_has_rotation();
}
inline double PlotItem::rotation() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotItem.rotation)
  return rotation_;
}
inline void PlotItem::set_rotation(double value) {
  set_has_rotation();
  rotation_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.PlotItem.rotation)
}

// -------------------------------------------------------------------

// PlotStroke2D

// required string name = 2;
inline bool PlotStroke2D::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlotStroke2D::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlotStroke2D::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlotStroke2D::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PlotStroke2D::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotStroke2D.name)
  return name_.GetNoArena();
}
inline void PlotStroke2D::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.PlotStroke2D.name)
}
#if LANG_CXX11
inline void PlotStroke2D::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.PlotStroke2D.name)
}
#endif
inline void PlotStroke2D::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.PlotStroke2D.name)
}
inline void PlotStroke2D::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.PlotStroke2D.name)
}
inline ::std::string* PlotStroke2D::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.PlotStroke2D.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlotStroke2D::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.PlotStroke2D.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlotStroke2D::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.PlotStroke2D.name)
}

// repeated .naothmessages.DoubleVector2 points = 1;
inline int PlotStroke2D::points_size() const {
  return points_.size();
}
inline void PlotStroke2D::clear_points() {
  points_.Clear();
}
inline const ::naothmessages::DoubleVector2& PlotStroke2D::points(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.PlotStroke2D.points)
  return points_.Get(index);
}
inline ::naothmessages::DoubleVector2* PlotStroke2D::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.PlotStroke2D.points)
  return points_.Mutable(index);
}
inline ::naothmessages::DoubleVector2* PlotStroke2D::add_points() {
  // @@protoc_insertion_point(field_add:naothmessages.PlotStroke2D.points)
  return points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector2 >*
PlotStroke2D::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.PlotStroke2D.points)
  return &points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector2 >&
PlotStroke2D::points() const {
  // @@protoc_insertion_point(field_list:naothmessages.PlotStroke2D.points)
  return points_;
}

// -------------------------------------------------------------------

// Plots

// repeated .naothmessages.PlotItem plots = 1;
inline int Plots::plots_size() const {
  return plots_.size();
}
inline void Plots::clear_plots() {
  plots_.Clear();
}
inline const ::naothmessages::PlotItem& Plots::plots(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Plots.plots)
  return plots_.Get(index);
}
inline ::naothmessages::PlotItem* Plots::mutable_plots(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Plots.plots)
  return plots_.Mutable(index);
}
inline ::naothmessages::PlotItem* Plots::add_plots() {
  // @@protoc_insertion_point(field_add:naothmessages.Plots.plots)
  return plots_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotItem >*
Plots::mutable_plots() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Plots.plots)
  return &plots_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotItem >&
Plots::plots() const {
  // @@protoc_insertion_point(field_list:naothmessages.Plots.plots)
  return plots_;
}

// repeated .naothmessages.PlotStroke2D plotstrokes = 2;
inline int Plots::plotstrokes_size() const {
  return plotstrokes_.size();
}
inline void Plots::clear_plotstrokes() {
  plotstrokes_.Clear();
}
inline const ::naothmessages::PlotStroke2D& Plots::plotstrokes(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Plots.plotstrokes)
  return plotstrokes_.Get(index);
}
inline ::naothmessages::PlotStroke2D* Plots::mutable_plotstrokes(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Plots.plotstrokes)
  return plotstrokes_.Mutable(index);
}
inline ::naothmessages::PlotStroke2D* Plots::add_plotstrokes() {
  // @@protoc_insertion_point(field_add:naothmessages.Plots.plotstrokes)
  return plotstrokes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotStroke2D >*
Plots::mutable_plotstrokes() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Plots.plotstrokes)
  return &plotstrokes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::PlotStroke2D >&
Plots::plotstrokes() const {
  // @@protoc_insertion_point(field_list:naothmessages.Plots.plotstrokes)
  return plotstrokes_;
}

// -------------------------------------------------------------------

// XABSLSymbol

// required int32 id = 1 [default = -1];
inline bool XABSLSymbol::has_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void XABSLSymbol::set_has_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void XABSLSymbol::clear_has_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void XABSLSymbol::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 XABSLSymbol::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.id)
  return id_;
}
inline void XABSLSymbol::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.id)
}

// required .naothmessages.XABSLSymbol.SymbolType type = 2 [default = Unknown];
inline bool XABSLSymbol::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void XABSLSymbol::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void XABSLSymbol::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void XABSLSymbol::clear_type() {
  type_ = 3;
  clear_has_type();
}
inline ::naothmessages::XABSLSymbol_SymbolType XABSLSymbol::type() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.type)
  return static_cast< ::naothmessages::XABSLSymbol_SymbolType >(type_);
}
inline void XABSLSymbol::set_type(::naothmessages::XABSLSymbol_SymbolType value) {
  assert(::naothmessages::XABSLSymbol_SymbolType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.type)
}

// optional string name = 3;
inline bool XABSLSymbol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XABSLSymbol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XABSLSymbol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XABSLSymbol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& XABSLSymbol::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.name)
  return name_.GetNoArena();
}
inline void XABSLSymbol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.name)
}
#if LANG_CXX11
inline void XABSLSymbol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.XABSLSymbol.name)
}
#endif
inline void XABSLSymbol::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.XABSLSymbol.name)
}
inline void XABSLSymbol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.XABSLSymbol.name)
}
inline ::std::string* XABSLSymbol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.XABSLSymbol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XABSLSymbol::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.XABSLSymbol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XABSLSymbol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.XABSLSymbol.name)
}

// optional double decimalValue = 11;
inline bool XABSLSymbol::has_decimalvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XABSLSymbol::set_has_decimalvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XABSLSymbol::clear_has_decimalvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XABSLSymbol::clear_decimalvalue() {
  decimalvalue_ = 0;
  clear_has_decimalvalue();
}
inline double XABSLSymbol::decimalvalue() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.decimalValue)
  return decimalvalue_;
}
inline void XABSLSymbol::set_decimalvalue(double value) {
  set_has_decimalvalue();
  decimalvalue_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.decimalValue)
}

// optional bool boolValue = 12;
inline bool XABSLSymbol::has_boolvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void XABSLSymbol::set_has_boolvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void XABSLSymbol::clear_has_boolvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void XABSLSymbol::clear_boolvalue() {
  boolvalue_ = false;
  clear_has_boolvalue();
}
inline bool XABSLSymbol::boolvalue() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.boolValue)
  return boolvalue_;
}
inline void XABSLSymbol::set_boolvalue(bool value) {
  set_has_boolvalue();
  boolvalue_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.boolValue)
}

// optional int32 enumValue = 13;
inline bool XABSLSymbol::has_enumvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void XABSLSymbol::set_has_enumvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void XABSLSymbol::clear_has_enumvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void XABSLSymbol::clear_enumvalue() {
  enumvalue_ = 0;
  clear_has_enumvalue();
}
inline ::google::protobuf::int32 XABSLSymbol::enumvalue() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.enumValue)
  return enumvalue_;
}
inline void XABSLSymbol::set_enumvalue(::google::protobuf::int32 value) {
  set_has_enumvalue();
  enumvalue_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.enumValue)
}

// optional int32 enumTypeId = 14;
inline bool XABSLSymbol::has_enumtypeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XABSLSymbol::set_has_enumtypeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XABSLSymbol::clear_has_enumtypeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XABSLSymbol::clear_enumtypeid() {
  enumtypeid_ = 0;
  clear_has_enumtypeid();
}
inline ::google::protobuf::int32 XABSLSymbol::enumtypeid() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLSymbol.enumTypeId)
  return enumtypeid_;
}
inline void XABSLSymbol::set_enumtypeid(::google::protobuf::int32 value) {
  set_has_enumtypeid();
  enumtypeid_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLSymbol.enumTypeId)
}

// -------------------------------------------------------------------

// XABSLActiveOptionSparse

// required int32 id = 1 [default = -1];
inline bool XABSLActiveOptionSparse::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void XABSLActiveOptionSparse::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void XABSLActiveOptionSparse::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void XABSLActiveOptionSparse::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 XABSLActiveOptionSparse::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.id)
  return id_;
}
inline void XABSLActiveOptionSparse::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.id)
}

// optional int64 timeOfExecution = 3 [default = 0];
inline bool XABSLActiveOptionSparse::has_timeofexecution() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XABSLActiveOptionSparse::set_has_timeofexecution() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XABSLActiveOptionSparse::clear_has_timeofexecution() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XABSLActiveOptionSparse::clear_timeofexecution() {
  timeofexecution_ = GOOGLE_LONGLONG(0);
  clear_has_timeofexecution();
}
inline ::google::protobuf::int64 XABSLActiveOptionSparse::timeofexecution() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.timeOfExecution)
  return timeofexecution_;
}
inline void XABSLActiveOptionSparse::set_timeofexecution(::google::protobuf::int64 value) {
  set_has_timeofexecution();
  timeofexecution_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.timeOfExecution)
}

// optional int32 activeState = 4;
inline bool XABSLActiveOptionSparse::has_activestate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XABSLActiveOptionSparse::set_has_activestate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XABSLActiveOptionSparse::clear_has_activestate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XABSLActiveOptionSparse::clear_activestate() {
  activestate_ = 0;
  clear_has_activestate();
}
inline ::google::protobuf::int32 XABSLActiveOptionSparse::activestate() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.activeState)
  return activestate_;
}
inline void XABSLActiveOptionSparse::set_activestate(::google::protobuf::int32 value) {
  set_has_activestate();
  activestate_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.activeState)
}

// optional int64 stateTime = 5;
inline bool XABSLActiveOptionSparse::has_statetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XABSLActiveOptionSparse::set_has_statetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XABSLActiveOptionSparse::clear_has_statetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XABSLActiveOptionSparse::clear_statetime() {
  statetime_ = GOOGLE_LONGLONG(0);
  clear_has_statetime();
}
inline ::google::protobuf::int64 XABSLActiveOptionSparse::statetime() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.stateTime)
  return statetime_;
}
inline void XABSLActiveOptionSparse::set_statetime(::google::protobuf::int64 value) {
  set_has_statetime();
  statetime_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.stateTime)
}

// repeated double decimalParameters = 6;
inline int XABSLActiveOptionSparse::decimalparameters_size() const {
  return decimalparameters_.size();
}
inline void XABSLActiveOptionSparse::clear_decimalparameters() {
  decimalparameters_.Clear();
}
inline double XABSLActiveOptionSparse::decimalparameters(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.decimalParameters)
  return decimalparameters_.Get(index);
}
inline void XABSLActiveOptionSparse::set_decimalparameters(int index, double value) {
  decimalparameters_.Set(index, value);
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.decimalParameters)
}
inline void XABSLActiveOptionSparse::add_decimalparameters(double value) {
  decimalparameters_.Add(value);
  // @@protoc_insertion_point(field_add:naothmessages.XABSLActiveOptionSparse.decimalParameters)
}
inline const ::google::protobuf::RepeatedField< double >&
XABSLActiveOptionSparse::decimalparameters() const {
  // @@protoc_insertion_point(field_list:naothmessages.XABSLActiveOptionSparse.decimalParameters)
  return decimalparameters_;
}
inline ::google::protobuf::RepeatedField< double >*
XABSLActiveOptionSparse::mutable_decimalparameters() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.XABSLActiveOptionSparse.decimalParameters)
  return &decimalparameters_;
}

// repeated bool booleanParameters = 7;
inline int XABSLActiveOptionSparse::booleanparameters_size() const {
  return booleanparameters_.size();
}
inline void XABSLActiveOptionSparse::clear_booleanparameters() {
  booleanparameters_.Clear();
}
inline bool XABSLActiveOptionSparse::booleanparameters(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.booleanParameters)
  return booleanparameters_.Get(index);
}
inline void XABSLActiveOptionSparse::set_booleanparameters(int index, bool value) {
  booleanparameters_.Set(index, value);
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.booleanParameters)
}
inline void XABSLActiveOptionSparse::add_booleanparameters(bool value) {
  booleanparameters_.Add(value);
  // @@protoc_insertion_point(field_add:naothmessages.XABSLActiveOptionSparse.booleanParameters)
}
inline const ::google::protobuf::RepeatedField< bool >&
XABSLActiveOptionSparse::booleanparameters() const {
  // @@protoc_insertion_point(field_list:naothmessages.XABSLActiveOptionSparse.booleanParameters)
  return booleanparameters_;
}
inline ::google::protobuf::RepeatedField< bool >*
XABSLActiveOptionSparse::mutable_booleanparameters() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.XABSLActiveOptionSparse.booleanParameters)
  return &booleanparameters_;
}

// repeated int32 enumeratedParameters = 8;
inline int XABSLActiveOptionSparse::enumeratedparameters_size() const {
  return enumeratedparameters_.size();
}
inline void XABSLActiveOptionSparse::clear_enumeratedparameters() {
  enumeratedparameters_.Clear();
}
inline ::google::protobuf::int32 XABSLActiveOptionSparse::enumeratedparameters(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
  return enumeratedparameters_.Get(index);
}
inline void XABSLActiveOptionSparse::set_enumeratedparameters(int index, ::google::protobuf::int32 value) {
  enumeratedparameters_.Set(index, value);
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
}
inline void XABSLActiveOptionSparse::add_enumeratedparameters(::google::protobuf::int32 value) {
  enumeratedparameters_.Add(value);
  // @@protoc_insertion_point(field_add:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
XABSLActiveOptionSparse::enumeratedparameters() const {
  // @@protoc_insertion_point(field_list:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
  return enumeratedparameters_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
XABSLActiveOptionSparse::mutable_enumeratedparameters() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.XABSLActiveOptionSparse.enumeratedParameters)
  return &enumeratedparameters_;
}

// repeated .naothmessages.XABSLActionSparse activeSubActions = 9;
inline int XABSLActiveOptionSparse::activesubactions_size() const {
  return activesubactions_.size();
}
inline void XABSLActiveOptionSparse::clear_activesubactions() {
  activesubactions_.Clear();
}
inline const ::naothmessages::XABSLActionSparse& XABSLActiveOptionSparse::activesubactions(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return activesubactions_.Get(index);
}
inline ::naothmessages::XABSLActionSparse* XABSLActiveOptionSparse::mutable_activesubactions(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return activesubactions_.Mutable(index);
}
inline ::naothmessages::XABSLActionSparse* XABSLActiveOptionSparse::add_activesubactions() {
  // @@protoc_insertion_point(field_add:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return activesubactions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >*
XABSLActiveOptionSparse::mutable_activesubactions() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return &activesubactions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >&
XABSLActiveOptionSparse::activesubactions() const {
  // @@protoc_insertion_point(field_list:naothmessages.XABSLActiveOptionSparse.activeSubActions)
  return activesubactions_;
}

// -------------------------------------------------------------------

// XABSLActionSparse

// required .naothmessages.XABSLActionSparse.ActionType type = 2 [default = Unknown];
inline bool XABSLActionSparse::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void XABSLActionSparse::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void XABSLActionSparse::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void XABSLActionSparse::clear_type() {
  type_ = 3;
  clear_has_type();
}
inline ::naothmessages::XABSLActionSparse_ActionType XABSLActionSparse::type() const {
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActionSparse.type)
  return static_cast< ::naothmessages::XABSLActionSparse_ActionType >(type_);
}
inline void XABSLActionSparse::set_type(::naothmessages::XABSLActionSparse_ActionType value) {
  assert(::naothmessages::XABSLActionSparse_ActionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.XABSLActionSparse.type)
}

// optional .naothmessages.XABSLSymbol symbol = 3;
inline bool XABSLActionSparse::has_symbol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XABSLActionSparse::set_has_symbol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XABSLActionSparse::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XABSLActionSparse::clear_symbol() {
  if (symbol_ != NULL) symbol_->::naothmessages::XABSLSymbol::Clear();
  clear_has_symbol();
}
inline const ::naothmessages::XABSLSymbol& XABSLActionSparse::symbol() const {
  const ::naothmessages::XABSLSymbol* p = symbol_;
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActionSparse.symbol)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::XABSLSymbol*>(
      &::naothmessages::_XABSLSymbol_default_instance_);
}
inline ::naothmessages::XABSLSymbol* XABSLActionSparse::mutable_symbol() {
  set_has_symbol();
  if (symbol_ == NULL) {
    symbol_ = new ::naothmessages::XABSLSymbol;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.XABSLActionSparse.symbol)
  return symbol_;
}
inline ::naothmessages::XABSLSymbol* XABSLActionSparse::release_symbol() {
  // @@protoc_insertion_point(field_release:naothmessages.XABSLActionSparse.symbol)
  clear_has_symbol();
  ::naothmessages::XABSLSymbol* temp = symbol_;
  symbol_ = NULL;
  return temp;
}
inline void XABSLActionSparse::set_allocated_symbol(::naothmessages::XABSLSymbol* symbol) {
  delete symbol_;
  symbol_ = symbol;
  if (symbol) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.XABSLActionSparse.symbol)
}

// optional .naothmessages.XABSLActiveOptionSparse option = 4;
inline bool XABSLActionSparse::has_option() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XABSLActionSparse::set_has_option() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XABSLActionSparse::clear_has_option() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XABSLActionSparse::clear_option() {
  if (option_ != NULL) option_->::naothmessages::XABSLActiveOptionSparse::Clear();
  clear_has_option();
}
inline const ::naothmessages::XABSLActiveOptionSparse& XABSLActionSparse::option() const {
  const ::naothmessages::XABSLActiveOptionSparse* p = option_;
  // @@protoc_insertion_point(field_get:naothmessages.XABSLActionSparse.option)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::XABSLActiveOptionSparse*>(
      &::naothmessages::_XABSLActiveOptionSparse_default_instance_);
}
inline ::naothmessages::XABSLActiveOptionSparse* XABSLActionSparse::mutable_option() {
  set_has_option();
  if (option_ == NULL) {
    option_ = new ::naothmessages::XABSLActiveOptionSparse;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.XABSLActionSparse.option)
  return option_;
}
inline ::naothmessages::XABSLActiveOptionSparse* XABSLActionSparse::release_option() {
  // @@protoc_insertion_point(field_release:naothmessages.XABSLActionSparse.option)
  clear_has_option();
  ::naothmessages::XABSLActiveOptionSparse* temp = option_;
  option_ = NULL;
  return temp;
}
inline void XABSLActionSparse::set_allocated_option(::naothmessages::XABSLActiveOptionSparse* option) {
  delete option_;
  option_ = option;
  if (option) {
    set_has_option();
  } else {
    clear_has_option();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.XABSLActionSparse.option)
}

// -------------------------------------------------------------------

// SymbolValueList_DoubleSymbol

// required int32 id = 1 [default = -1];
inline bool SymbolValueList_DoubleSymbol::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolValueList_DoubleSymbol::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolValueList_DoubleSymbol::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolValueList_DoubleSymbol::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 SymbolValueList_DoubleSymbol::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.DoubleSymbol.id)
  return id_;
}
inline void SymbolValueList_DoubleSymbol::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.DoubleSymbol.id)
}

// optional string name = 2;
inline bool SymbolValueList_DoubleSymbol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolValueList_DoubleSymbol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolValueList_DoubleSymbol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolValueList_DoubleSymbol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& SymbolValueList_DoubleSymbol::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.DoubleSymbol.name)
  return name_.GetNoArena();
}
inline void SymbolValueList_DoubleSymbol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.DoubleSymbol.name)
}
#if LANG_CXX11
inline void SymbolValueList_DoubleSymbol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.SymbolValueList.DoubleSymbol.name)
}
#endif
inline void SymbolValueList_DoubleSymbol::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.SymbolValueList.DoubleSymbol.name)
}
inline void SymbolValueList_DoubleSymbol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.SymbolValueList.DoubleSymbol.name)
}
inline ::std::string* SymbolValueList_DoubleSymbol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.DoubleSymbol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SymbolValueList_DoubleSymbol::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.SymbolValueList.DoubleSymbol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SymbolValueList_DoubleSymbol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.SymbolValueList.DoubleSymbol.name)
}

// optional double value = 3;
inline bool SymbolValueList_DoubleSymbol::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolValueList_DoubleSymbol::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolValueList_DoubleSymbol::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolValueList_DoubleSymbol::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double SymbolValueList_DoubleSymbol::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.DoubleSymbol.value)
  return value_;
}
inline void SymbolValueList_DoubleSymbol::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.DoubleSymbol.value)
}

// -------------------------------------------------------------------

// SymbolValueList_BooleanSymbol

// required int32 id = 1 [default = -1];
inline bool SymbolValueList_BooleanSymbol::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolValueList_BooleanSymbol::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolValueList_BooleanSymbol::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolValueList_BooleanSymbol::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 SymbolValueList_BooleanSymbol::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.BooleanSymbol.id)
  return id_;
}
inline void SymbolValueList_BooleanSymbol::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.BooleanSymbol.id)
}

// optional string name = 2;
inline bool SymbolValueList_BooleanSymbol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolValueList_BooleanSymbol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolValueList_BooleanSymbol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolValueList_BooleanSymbol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& SymbolValueList_BooleanSymbol::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.BooleanSymbol.name)
  return name_.GetNoArena();
}
inline void SymbolValueList_BooleanSymbol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.BooleanSymbol.name)
}
#if LANG_CXX11
inline void SymbolValueList_BooleanSymbol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.SymbolValueList.BooleanSymbol.name)
}
#endif
inline void SymbolValueList_BooleanSymbol::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.SymbolValueList.BooleanSymbol.name)
}
inline void SymbolValueList_BooleanSymbol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.SymbolValueList.BooleanSymbol.name)
}
inline ::std::string* SymbolValueList_BooleanSymbol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.BooleanSymbol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SymbolValueList_BooleanSymbol::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.SymbolValueList.BooleanSymbol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SymbolValueList_BooleanSymbol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.SymbolValueList.BooleanSymbol.name)
}

// optional bool value = 3;
inline bool SymbolValueList_BooleanSymbol::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolValueList_BooleanSymbol::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolValueList_BooleanSymbol::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolValueList_BooleanSymbol::clear_value() {
  value_ = false;
  clear_has_value();
}
inline bool SymbolValueList_BooleanSymbol::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.BooleanSymbol.value)
  return value_;
}
inline void SymbolValueList_BooleanSymbol::set_value(bool value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.BooleanSymbol.value)
}

// -------------------------------------------------------------------

// SymbolValueList_EnumSymbol

// required int32 id = 1 [default = -1];
inline bool SymbolValueList_EnumSymbol::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SymbolValueList_EnumSymbol::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SymbolValueList_EnumSymbol::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SymbolValueList_EnumSymbol::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 SymbolValueList_EnumSymbol::id() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.EnumSymbol.id)
  return id_;
}
inline void SymbolValueList_EnumSymbol::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.EnumSymbol.id)
}

// optional string name = 2;
inline bool SymbolValueList_EnumSymbol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SymbolValueList_EnumSymbol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SymbolValueList_EnumSymbol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SymbolValueList_EnumSymbol::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& SymbolValueList_EnumSymbol::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.EnumSymbol.name)
  return name_.GetNoArena();
}
inline void SymbolValueList_EnumSymbol::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.EnumSymbol.name)
}
#if LANG_CXX11
inline void SymbolValueList_EnumSymbol::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.SymbolValueList.EnumSymbol.name)
}
#endif
inline void SymbolValueList_EnumSymbol::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.SymbolValueList.EnumSymbol.name)
}
inline void SymbolValueList_EnumSymbol::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.SymbolValueList.EnumSymbol.name)
}
inline ::std::string* SymbolValueList_EnumSymbol::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.EnumSymbol.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SymbolValueList_EnumSymbol::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.SymbolValueList.EnumSymbol.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SymbolValueList_EnumSymbol::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.SymbolValueList.EnumSymbol.name)
}

// optional int32 value = 13;
inline bool SymbolValueList_EnumSymbol::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SymbolValueList_EnumSymbol::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SymbolValueList_EnumSymbol::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SymbolValueList_EnumSymbol::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 SymbolValueList_EnumSymbol::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.EnumSymbol.value)
  return value_;
}
inline void SymbolValueList_EnumSymbol::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.EnumSymbol.value)
}

// optional int32 typeId = 14;
inline bool SymbolValueList_EnumSymbol::has_typeid_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SymbolValueList_EnumSymbol::set_has_typeid_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SymbolValueList_EnumSymbol::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SymbolValueList_EnumSymbol::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::google::protobuf::int32 SymbolValueList_EnumSymbol::typeid_() const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.EnumSymbol.typeId)
  return typeid__;
}
inline void SymbolValueList_EnumSymbol::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:naothmessages.SymbolValueList.EnumSymbol.typeId)
}

// -------------------------------------------------------------------

// SymbolValueList

// repeated .naothmessages.SymbolValueList.DoubleSymbol decimal = 1;
inline int SymbolValueList::decimal_size() const {
  return decimal_.size();
}
inline void SymbolValueList::clear_decimal() {
  decimal_.Clear();
}
inline const ::naothmessages::SymbolValueList_DoubleSymbol& SymbolValueList::decimal(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.decimal)
  return decimal_.Get(index);
}
inline ::naothmessages::SymbolValueList_DoubleSymbol* SymbolValueList::mutable_decimal(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.decimal)
  return decimal_.Mutable(index);
}
inline ::naothmessages::SymbolValueList_DoubleSymbol* SymbolValueList::add_decimal() {
  // @@protoc_insertion_point(field_add:naothmessages.SymbolValueList.decimal)
  return decimal_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_DoubleSymbol >*
SymbolValueList::mutable_decimal() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.SymbolValueList.decimal)
  return &decimal_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_DoubleSymbol >&
SymbolValueList::decimal() const {
  // @@protoc_insertion_point(field_list:naothmessages.SymbolValueList.decimal)
  return decimal_;
}

// repeated .naothmessages.SymbolValueList.BooleanSymbol boolean = 2;
inline int SymbolValueList::boolean_size() const {
  return boolean_.size();
}
inline void SymbolValueList::clear_boolean() {
  boolean_.Clear();
}
inline const ::naothmessages::SymbolValueList_BooleanSymbol& SymbolValueList::boolean(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.boolean)
  return boolean_.Get(index);
}
inline ::naothmessages::SymbolValueList_BooleanSymbol* SymbolValueList::mutable_boolean(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.boolean)
  return boolean_.Mutable(index);
}
inline ::naothmessages::SymbolValueList_BooleanSymbol* SymbolValueList::add_boolean() {
  // @@protoc_insertion_point(field_add:naothmessages.SymbolValueList.boolean)
  return boolean_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_BooleanSymbol >*
SymbolValueList::mutable_boolean() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.SymbolValueList.boolean)
  return &boolean_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_BooleanSymbol >&
SymbolValueList::boolean() const {
  // @@protoc_insertion_point(field_list:naothmessages.SymbolValueList.boolean)
  return boolean_;
}

// repeated .naothmessages.SymbolValueList.EnumSymbol enumerated = 3;
inline int SymbolValueList::enumerated_size() const {
  return enumerated_.size();
}
inline void SymbolValueList::clear_enumerated() {
  enumerated_.Clear();
}
inline const ::naothmessages::SymbolValueList_EnumSymbol& SymbolValueList::enumerated(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.SymbolValueList.enumerated)
  return enumerated_.Get(index);
}
inline ::naothmessages::SymbolValueList_EnumSymbol* SymbolValueList::mutable_enumerated(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.SymbolValueList.enumerated)
  return enumerated_.Mutable(index);
}
inline ::naothmessages::SymbolValueList_EnumSymbol* SymbolValueList::add_enumerated() {
  // @@protoc_insertion_point(field_add:naothmessages.SymbolValueList.enumerated)
  return enumerated_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_EnumSymbol >*
SymbolValueList::mutable_enumerated() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.SymbolValueList.enumerated)
  return &enumerated_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::SymbolValueList_EnumSymbol >&
SymbolValueList::enumerated() const {
  // @@protoc_insertion_point(field_list:naothmessages.SymbolValueList.enumerated)
  return enumerated_;
}

// -------------------------------------------------------------------

// BehaviorStateSparse

// optional string agent = 1;
inline bool BehaviorStateSparse::has_agent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BehaviorStateSparse::set_has_agent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BehaviorStateSparse::clear_has_agent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BehaviorStateSparse::clear_agent() {
  agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_agent();
}
inline const ::std::string& BehaviorStateSparse::agent() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.agent)
  return agent_.GetNoArena();
}
inline void BehaviorStateSparse::set_agent(const ::std::string& value) {
  set_has_agent();
  agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateSparse.agent)
}
#if LANG_CXX11
inline void BehaviorStateSparse::set_agent(::std::string&& value) {
  set_has_agent();
  agent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateSparse.agent)
}
#endif
inline void BehaviorStateSparse::set_agent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_agent();
  agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateSparse.agent)
}
inline void BehaviorStateSparse::set_agent(const char* value, size_t size) {
  set_has_agent();
  agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateSparse.agent)
}
inline ::std::string* BehaviorStateSparse::mutable_agent() {
  set_has_agent();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.agent)
  return agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorStateSparse::release_agent() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateSparse.agent)
  clear_has_agent();
  return agent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorStateSparse::set_allocated_agent(::std::string* agent) {
  if (agent != NULL) {
    set_has_agent();
  } else {
    clear_has_agent();
  }
  agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateSparse.agent)
}

// repeated .naothmessages.XABSLActionSparse activeRootActions = 2;
inline int BehaviorStateSparse::activerootactions_size() const {
  return activerootactions_.size();
}
inline void BehaviorStateSparse::clear_activerootactions() {
  activerootactions_.Clear();
}
inline const ::naothmessages::XABSLActionSparse& BehaviorStateSparse::activerootactions(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.activeRootActions)
  return activerootactions_.Get(index);
}
inline ::naothmessages::XABSLActionSparse* BehaviorStateSparse::mutable_activerootactions(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.activeRootActions)
  return activerootactions_.Mutable(index);
}
inline ::naothmessages::XABSLActionSparse* BehaviorStateSparse::add_activerootactions() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateSparse.activeRootActions)
  return activerootactions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >*
BehaviorStateSparse::mutable_activerootactions() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateSparse.activeRootActions)
  return &activerootactions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLActionSparse >&
BehaviorStateSparse::activerootactions() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateSparse.activeRootActions)
  return activerootactions_;
}

// optional .naothmessages.SymbolValueList inputSymbolList = 10;
inline bool BehaviorStateSparse::has_inputsymbollist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BehaviorStateSparse::set_has_inputsymbollist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BehaviorStateSparse::clear_has_inputsymbollist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BehaviorStateSparse::clear_inputsymbollist() {
  if (inputsymbollist_ != NULL) inputsymbollist_->::naothmessages::SymbolValueList::Clear();
  clear_has_inputsymbollist();
}
inline const ::naothmessages::SymbolValueList& BehaviorStateSparse::inputsymbollist() const {
  const ::naothmessages::SymbolValueList* p = inputsymbollist_;
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.inputSymbolList)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::SymbolValueList*>(
      &::naothmessages::_SymbolValueList_default_instance_);
}
inline ::naothmessages::SymbolValueList* BehaviorStateSparse::mutable_inputsymbollist() {
  set_has_inputsymbollist();
  if (inputsymbollist_ == NULL) {
    inputsymbollist_ = new ::naothmessages::SymbolValueList;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.inputSymbolList)
  return inputsymbollist_;
}
inline ::naothmessages::SymbolValueList* BehaviorStateSparse::release_inputsymbollist() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateSparse.inputSymbolList)
  clear_has_inputsymbollist();
  ::naothmessages::SymbolValueList* temp = inputsymbollist_;
  inputsymbollist_ = NULL;
  return temp;
}
inline void BehaviorStateSparse::set_allocated_inputsymbollist(::naothmessages::SymbolValueList* inputsymbollist) {
  delete inputsymbollist_;
  inputsymbollist_ = inputsymbollist;
  if (inputsymbollist) {
    set_has_inputsymbollist();
  } else {
    clear_has_inputsymbollist();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateSparse.inputSymbolList)
}

// optional .naothmessages.SymbolValueList outputSymbolList = 11;
inline bool BehaviorStateSparse::has_outputsymbollist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BehaviorStateSparse::set_has_outputsymbollist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BehaviorStateSparse::clear_has_outputsymbollist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BehaviorStateSparse::clear_outputsymbollist() {
  if (outputsymbollist_ != NULL) outputsymbollist_->::naothmessages::SymbolValueList::Clear();
  clear_has_outputsymbollist();
}
inline const ::naothmessages::SymbolValueList& BehaviorStateSparse::outputsymbollist() const {
  const ::naothmessages::SymbolValueList* p = outputsymbollist_;
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.outputSymbolList)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::SymbolValueList*>(
      &::naothmessages::_SymbolValueList_default_instance_);
}
inline ::naothmessages::SymbolValueList* BehaviorStateSparse::mutable_outputsymbollist() {
  set_has_outputsymbollist();
  if (outputsymbollist_ == NULL) {
    outputsymbollist_ = new ::naothmessages::SymbolValueList;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.outputSymbolList)
  return outputsymbollist_;
}
inline ::naothmessages::SymbolValueList* BehaviorStateSparse::release_outputsymbollist() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateSparse.outputSymbolList)
  clear_has_outputsymbollist();
  ::naothmessages::SymbolValueList* temp = outputsymbollist_;
  outputsymbollist_ = NULL;
  return temp;
}
inline void BehaviorStateSparse::set_allocated_outputsymbollist(::naothmessages::SymbolValueList* outputsymbollist) {
  delete outputsymbollist_;
  outputsymbollist_ = outputsymbollist;
  if (outputsymbollist) {
    set_has_outputsymbollist();
  } else {
    clear_has_outputsymbollist();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateSparse.outputSymbolList)
}

// optional uint32 frameNumber = 5;
inline bool BehaviorStateSparse::has_framenumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BehaviorStateSparse::set_has_framenumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BehaviorStateSparse::clear_has_framenumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BehaviorStateSparse::clear_framenumber() {
  framenumber_ = 0u;
  clear_has_framenumber();
}
inline ::google::protobuf::uint32 BehaviorStateSparse::framenumber() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.frameNumber)
  return framenumber_;
}
inline void BehaviorStateSparse::set_framenumber(::google::protobuf::uint32 value) {
  set_has_framenumber();
  framenumber_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateSparse.frameNumber)
}

// optional string errorMessage = 6;
inline bool BehaviorStateSparse::has_errormessage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BehaviorStateSparse::set_has_errormessage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BehaviorStateSparse::clear_has_errormessage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BehaviorStateSparse::clear_errormessage() {
  errormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errormessage();
}
inline const ::std::string& BehaviorStateSparse::errormessage() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateSparse.errorMessage)
  return errormessage_.GetNoArena();
}
inline void BehaviorStateSparse::set_errormessage(const ::std::string& value) {
  set_has_errormessage();
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateSparse.errorMessage)
}
#if LANG_CXX11
inline void BehaviorStateSparse::set_errormessage(::std::string&& value) {
  set_has_errormessage();
  errormessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateSparse.errorMessage)
}
#endif
inline void BehaviorStateSparse::set_errormessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_errormessage();
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateSparse.errorMessage)
}
inline void BehaviorStateSparse::set_errormessage(const char* value, size_t size) {
  set_has_errormessage();
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateSparse.errorMessage)
}
inline ::std::string* BehaviorStateSparse::mutable_errormessage() {
  set_has_errormessage();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateSparse.errorMessage)
  return errormessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorStateSparse::release_errormessage() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateSparse.errorMessage)
  clear_has_errormessage();
  return errormessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorStateSparse::set_allocated_errormessage(::std::string* errormessage) {
  if (errormessage != NULL) {
    set_has_errormessage();
  } else {
    clear_has_errormessage();
  }
  errormessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormessage);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateSparse.errorMessage)
}

// -------------------------------------------------------------------

// BehaviorStateComplete_EnumType_Element

// required int32 value = 1;
inline bool BehaviorStateComplete_EnumType_Element::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BehaviorStateComplete_EnumType_Element::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BehaviorStateComplete_EnumType_Element::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BehaviorStateComplete_EnumType_Element::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 BehaviorStateComplete_EnumType_Element::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.EnumType.Element.value)
  return value_;
}
inline void BehaviorStateComplete_EnumType_Element::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.EnumType.Element.value)
}

// required string name = 2;
inline bool BehaviorStateComplete_EnumType_Element::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BehaviorStateComplete_EnumType_Element::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BehaviorStateComplete_EnumType_Element::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BehaviorStateComplete_EnumType_Element::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& BehaviorStateComplete_EnumType_Element::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.EnumType.Element.name)
  return name_.GetNoArena();
}
inline void BehaviorStateComplete_EnumType_Element::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}
#if LANG_CXX11
inline void BehaviorStateComplete_EnumType_Element::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}
#endif
inline void BehaviorStateComplete_EnumType_Element::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}
inline void BehaviorStateComplete_EnumType_Element::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}
inline ::std::string* BehaviorStateComplete_EnumType_Element::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.EnumType.Element.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorStateComplete_EnumType_Element::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.EnumType.Element.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorStateComplete_EnumType_Element::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.EnumType.Element.name)
}

// -------------------------------------------------------------------

// BehaviorStateComplete_EnumType

// required string name = 1;
inline bool BehaviorStateComplete_EnumType::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BehaviorStateComplete_EnumType::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BehaviorStateComplete_EnumType::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BehaviorStateComplete_EnumType::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& BehaviorStateComplete_EnumType::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.EnumType.name)
  return name_.GetNoArena();
}
inline void BehaviorStateComplete_EnumType::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.EnumType.name)
}
#if LANG_CXX11
inline void BehaviorStateComplete_EnumType::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.EnumType.name)
}
#endif
inline void BehaviorStateComplete_EnumType::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.EnumType.name)
}
inline void BehaviorStateComplete_EnumType::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.EnumType.name)
}
inline ::std::string* BehaviorStateComplete_EnumType::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.EnumType.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorStateComplete_EnumType::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.EnumType.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorStateComplete_EnumType::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.EnumType.name)
}

// repeated .naothmessages.BehaviorStateComplete.EnumType.Element elements = 2;
inline int BehaviorStateComplete_EnumType::elements_size() const {
  return elements_.size();
}
inline void BehaviorStateComplete_EnumType::clear_elements() {
  elements_.Clear();
}
inline const ::naothmessages::BehaviorStateComplete_EnumType_Element& BehaviorStateComplete_EnumType::elements(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.EnumType.elements)
  return elements_.Get(index);
}
inline ::naothmessages::BehaviorStateComplete_EnumType_Element* BehaviorStateComplete_EnumType::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.EnumType.elements)
  return elements_.Mutable(index);
}
inline ::naothmessages::BehaviorStateComplete_EnumType_Element* BehaviorStateComplete_EnumType::add_elements() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.EnumType.elements)
  return elements_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType_Element >*
BehaviorStateComplete_EnumType::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.EnumType.elements)
  return &elements_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType_Element >&
BehaviorStateComplete_EnumType::elements() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.EnumType.elements)
  return elements_;
}

// -------------------------------------------------------------------

// BehaviorStateComplete_Option_State

// required string name = 1;
inline bool BehaviorStateComplete_Option_State::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BehaviorStateComplete_Option_State::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BehaviorStateComplete_Option_State::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BehaviorStateComplete_Option_State::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& BehaviorStateComplete_Option_State::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.State.name)
  return name_.GetNoArena();
}
inline void BehaviorStateComplete_Option_State::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Option.State.name)
}
#if LANG_CXX11
inline void BehaviorStateComplete_Option_State::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.Option.State.name)
}
#endif
inline void BehaviorStateComplete_Option_State::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.Option.State.name)
}
inline void BehaviorStateComplete_Option_State::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.Option.State.name)
}
inline ::std::string* BehaviorStateComplete_Option_State::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Option.State.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorStateComplete_Option_State::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.Option.State.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorStateComplete_Option_State::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.Option.State.name)
}

// optional bool target = 2;
inline bool BehaviorStateComplete_Option_State::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BehaviorStateComplete_Option_State::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BehaviorStateComplete_Option_State::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BehaviorStateComplete_Option_State::clear_target() {
  target_ = false;
  clear_has_target();
}
inline bool BehaviorStateComplete_Option_State::target() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.State.target)
  return target_;
}
inline void BehaviorStateComplete_Option_State::set_target(bool value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Option.State.target)
}

// -------------------------------------------------------------------

// BehaviorStateComplete_Option

// required string name = 1;
inline bool BehaviorStateComplete_Option::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BehaviorStateComplete_Option::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BehaviorStateComplete_Option::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BehaviorStateComplete_Option::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& BehaviorStateComplete_Option::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.name)
  return name_.GetNoArena();
}
inline void BehaviorStateComplete_Option::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Option.name)
}
#if LANG_CXX11
inline void BehaviorStateComplete_Option::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.Option.name)
}
#endif
inline void BehaviorStateComplete_Option::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.Option.name)
}
inline void BehaviorStateComplete_Option::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.Option.name)
}
inline ::std::string* BehaviorStateComplete_Option::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Option.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorStateComplete_Option::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.Option.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorStateComplete_Option::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.Option.name)
}

// repeated .naothmessages.BehaviorStateComplete.Option.State states = 3;
inline int BehaviorStateComplete_Option::states_size() const {
  return states_.size();
}
inline void BehaviorStateComplete_Option::clear_states() {
  states_.Clear();
}
inline const ::naothmessages::BehaviorStateComplete_Option_State& BehaviorStateComplete_Option::states(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.states)
  return states_.Get(index);
}
inline ::naothmessages::BehaviorStateComplete_Option_State* BehaviorStateComplete_Option::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Option.states)
  return states_.Mutable(index);
}
inline ::naothmessages::BehaviorStateComplete_Option_State* BehaviorStateComplete_Option::add_states() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.Option.states)
  return states_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option_State >*
BehaviorStateComplete_Option::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.Option.states)
  return &states_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option_State >&
BehaviorStateComplete_Option::states() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.Option.states)
  return states_;
}

// repeated .naothmessages.XABSLSymbol parameters = 2;
inline int BehaviorStateComplete_Option::parameters_size() const {
  return parameters_.size();
}
inline void BehaviorStateComplete_Option::clear_parameters() {
  parameters_.Clear();
}
inline const ::naothmessages::XABSLSymbol& BehaviorStateComplete_Option::parameters(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Option.parameters)
  return parameters_.Get(index);
}
inline ::naothmessages::XABSLSymbol* BehaviorStateComplete_Option::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Option.parameters)
  return parameters_.Mutable(index);
}
inline ::naothmessages::XABSLSymbol* BehaviorStateComplete_Option::add_parameters() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.Option.parameters)
  return parameters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLSymbol >*
BehaviorStateComplete_Option::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.Option.parameters)
  return &parameters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::XABSLSymbol >&
BehaviorStateComplete_Option::parameters() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.Option.parameters)
  return parameters_;
}

// -------------------------------------------------------------------

// BehaviorStateComplete_Agent

// required string name = 1;
inline bool BehaviorStateComplete_Agent::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BehaviorStateComplete_Agent::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BehaviorStateComplete_Agent::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BehaviorStateComplete_Agent::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& BehaviorStateComplete_Agent::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Agent.name)
  return name_.GetNoArena();
}
inline void BehaviorStateComplete_Agent::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Agent.name)
}
#if LANG_CXX11
inline void BehaviorStateComplete_Agent::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.Agent.name)
}
#endif
inline void BehaviorStateComplete_Agent::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.Agent.name)
}
inline void BehaviorStateComplete_Agent::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.Agent.name)
}
inline ::std::string* BehaviorStateComplete_Agent::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Agent.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorStateComplete_Agent::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.Agent.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorStateComplete_Agent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.Agent.name)
}

// required string rootOption = 2;
inline bool BehaviorStateComplete_Agent::has_rootoption() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BehaviorStateComplete_Agent::set_has_rootoption() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BehaviorStateComplete_Agent::clear_has_rootoption() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BehaviorStateComplete_Agent::clear_rootoption() {
  rootoption_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rootoption();
}
inline const ::std::string& BehaviorStateComplete_Agent::rootoption() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.Agent.rootOption)
  return rootoption_.GetNoArena();
}
inline void BehaviorStateComplete_Agent::set_rootoption(const ::std::string& value) {
  set_has_rootoption();
  rootoption_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.Agent.rootOption)
}
#if LANG_CXX11
inline void BehaviorStateComplete_Agent::set_rootoption(::std::string&& value) {
  set_has_rootoption();
  rootoption_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.BehaviorStateComplete.Agent.rootOption)
}
#endif
inline void BehaviorStateComplete_Agent::set_rootoption(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rootoption();
  rootoption_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.BehaviorStateComplete.Agent.rootOption)
}
inline void BehaviorStateComplete_Agent::set_rootoption(const char* value, size_t size) {
  set_has_rootoption();
  rootoption_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.BehaviorStateComplete.Agent.rootOption)
}
inline ::std::string* BehaviorStateComplete_Agent::mutable_rootoption() {
  set_has_rootoption();
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.Agent.rootOption)
  return rootoption_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorStateComplete_Agent::release_rootoption() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.Agent.rootOption)
  clear_has_rootoption();
  return rootoption_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorStateComplete_Agent::set_allocated_rootoption(::std::string* rootoption) {
  if (rootoption != NULL) {
    set_has_rootoption();
  } else {
    clear_has_rootoption();
  }
  rootoption_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rootoption);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.Agent.rootOption)
}

// -------------------------------------------------------------------

// BehaviorStateComplete

// repeated .naothmessages.BehaviorStateComplete.EnumType enumerations = 10;
inline int BehaviorStateComplete::enumerations_size() const {
  return enumerations_.size();
}
inline void BehaviorStateComplete::clear_enumerations() {
  enumerations_.Clear();
}
inline const ::naothmessages::BehaviorStateComplete_EnumType& BehaviorStateComplete::enumerations(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.enumerations)
  return enumerations_.Get(index);
}
inline ::naothmessages::BehaviorStateComplete_EnumType* BehaviorStateComplete::mutable_enumerations(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.enumerations)
  return enumerations_.Mutable(index);
}
inline ::naothmessages::BehaviorStateComplete_EnumType* BehaviorStateComplete::add_enumerations() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.enumerations)
  return enumerations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType >*
BehaviorStateComplete::mutable_enumerations() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.enumerations)
  return &enumerations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_EnumType >&
BehaviorStateComplete::enumerations() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.enumerations)
  return enumerations_;
}

// repeated .naothmessages.BehaviorStateComplete.Option options = 11;
inline int BehaviorStateComplete::options_size() const {
  return options_.size();
}
inline void BehaviorStateComplete::clear_options() {
  options_.Clear();
}
inline const ::naothmessages::BehaviorStateComplete_Option& BehaviorStateComplete::options(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.options)
  return options_.Get(index);
}
inline ::naothmessages::BehaviorStateComplete_Option* BehaviorStateComplete::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.options)
  return options_.Mutable(index);
}
inline ::naothmessages::BehaviorStateComplete_Option* BehaviorStateComplete::add_options() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.options)
  return options_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option >*
BehaviorStateComplete::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.options)
  return &options_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Option >&
BehaviorStateComplete::options() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.options)
  return options_;
}

// repeated .naothmessages.BehaviorStateComplete.Agent agents = 12;
inline int BehaviorStateComplete::agents_size() const {
  return agents_.size();
}
inline void BehaviorStateComplete::clear_agents() {
  agents_.Clear();
}
inline const ::naothmessages::BehaviorStateComplete_Agent& BehaviorStateComplete::agents(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.agents)
  return agents_.Get(index);
}
inline ::naothmessages::BehaviorStateComplete_Agent* BehaviorStateComplete::mutable_agents(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.agents)
  return agents_.Mutable(index);
}
inline ::naothmessages::BehaviorStateComplete_Agent* BehaviorStateComplete::add_agents() {
  // @@protoc_insertion_point(field_add:naothmessages.BehaviorStateComplete.agents)
  return agents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Agent >*
BehaviorStateComplete::mutable_agents() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.BehaviorStateComplete.agents)
  return &agents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::BehaviorStateComplete_Agent >&
BehaviorStateComplete::agents() const {
  // @@protoc_insertion_point(field_list:naothmessages.BehaviorStateComplete.agents)
  return agents_;
}

// optional .naothmessages.SymbolValueList inputSymbolList = 13;
inline bool BehaviorStateComplete::has_inputsymbollist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BehaviorStateComplete::set_has_inputsymbollist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BehaviorStateComplete::clear_has_inputsymbollist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BehaviorStateComplete::clear_inputsymbollist() {
  if (inputsymbollist_ != NULL) inputsymbollist_->::naothmessages::SymbolValueList::Clear();
  clear_has_inputsymbollist();
}
inline const ::naothmessages::SymbolValueList& BehaviorStateComplete::inputsymbollist() const {
  const ::naothmessages::SymbolValueList* p = inputsymbollist_;
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.inputSymbolList)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::SymbolValueList*>(
      &::naothmessages::_SymbolValueList_default_instance_);
}
inline ::naothmessages::SymbolValueList* BehaviorStateComplete::mutable_inputsymbollist() {
  set_has_inputsymbollist();
  if (inputsymbollist_ == NULL) {
    inputsymbollist_ = new ::naothmessages::SymbolValueList;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.inputSymbolList)
  return inputsymbollist_;
}
inline ::naothmessages::SymbolValueList* BehaviorStateComplete::release_inputsymbollist() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.inputSymbolList)
  clear_has_inputsymbollist();
  ::naothmessages::SymbolValueList* temp = inputsymbollist_;
  inputsymbollist_ = NULL;
  return temp;
}
inline void BehaviorStateComplete::set_allocated_inputsymbollist(::naothmessages::SymbolValueList* inputsymbollist) {
  delete inputsymbollist_;
  inputsymbollist_ = inputsymbollist;
  if (inputsymbollist) {
    set_has_inputsymbollist();
  } else {
    clear_has_inputsymbollist();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.inputSymbolList)
}

// optional .naothmessages.SymbolValueList outputSymbolList = 14;
inline bool BehaviorStateComplete::has_outputsymbollist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BehaviorStateComplete::set_has_outputsymbollist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BehaviorStateComplete::clear_has_outputsymbollist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BehaviorStateComplete::clear_outputsymbollist() {
  if (outputsymbollist_ != NULL) outputsymbollist_->::naothmessages::SymbolValueList::Clear();
  clear_has_outputsymbollist();
}
inline const ::naothmessages::SymbolValueList& BehaviorStateComplete::outputsymbollist() const {
  const ::naothmessages::SymbolValueList* p = outputsymbollist_;
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.outputSymbolList)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::SymbolValueList*>(
      &::naothmessages::_SymbolValueList_default_instance_);
}
inline ::naothmessages::SymbolValueList* BehaviorStateComplete::mutable_outputsymbollist() {
  set_has_outputsymbollist();
  if (outputsymbollist_ == NULL) {
    outputsymbollist_ = new ::naothmessages::SymbolValueList;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.BehaviorStateComplete.outputSymbolList)
  return outputsymbollist_;
}
inline ::naothmessages::SymbolValueList* BehaviorStateComplete::release_outputsymbollist() {
  // @@protoc_insertion_point(field_release:naothmessages.BehaviorStateComplete.outputSymbolList)
  clear_has_outputsymbollist();
  ::naothmessages::SymbolValueList* temp = outputsymbollist_;
  outputsymbollist_ = NULL;
  return temp;
}
inline void BehaviorStateComplete::set_allocated_outputsymbollist(::naothmessages::SymbolValueList* outputsymbollist) {
  delete outputsymbollist_;
  outputsymbollist_ = outputsymbollist;
  if (outputsymbollist) {
    set_has_outputsymbollist();
  } else {
    clear_has_outputsymbollist();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.BehaviorStateComplete.outputSymbolList)
}

// optional uint32 frameNumber = 15;
inline bool BehaviorStateComplete::has_framenumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BehaviorStateComplete::set_has_framenumber() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BehaviorStateComplete::clear_has_framenumber() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BehaviorStateComplete::clear_framenumber() {
  framenumber_ = 0u;
  clear_has_framenumber();
}
inline ::google::protobuf::uint32 BehaviorStateComplete::framenumber() const {
  // @@protoc_insertion_point(field_get:naothmessages.BehaviorStateComplete.frameNumber)
  return framenumber_;
}
inline void BehaviorStateComplete::set_framenumber(::google::protobuf::uint32 value) {
  set_has_framenumber();
  framenumber_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.BehaviorStateComplete.frameNumber)
}

// -------------------------------------------------------------------

// Module

// required string name = 1;
inline bool Module::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Module::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Module::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Module::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Module::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.Module.name)
  return name_.GetNoArena();
}
inline void Module::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.Module.name)
}
#if LANG_CXX11
inline void Module::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.Module.name)
}
#endif
inline void Module::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.Module.name)
}
inline void Module::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.Module.name)
}
inline ::std::string* Module::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.Module.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Module::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.Module.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Module::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.Module.name)
}

// repeated string usedRepresentations = 2;
inline int Module::usedrepresentations_size() const {
  return usedrepresentations_.size();
}
inline void Module::clear_usedrepresentations() {
  usedrepresentations_.Clear();
}
inline const ::std::string& Module::usedrepresentations(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Module.usedRepresentations)
  return usedrepresentations_.Get(index);
}
inline ::std::string* Module::mutable_usedrepresentations(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Module.usedRepresentations)
  return usedrepresentations_.Mutable(index);
}
inline void Module::set_usedrepresentations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:naothmessages.Module.usedRepresentations)
  usedrepresentations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Module::set_usedrepresentations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:naothmessages.Module.usedRepresentations)
  usedrepresentations_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Module::set_usedrepresentations(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  usedrepresentations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:naothmessages.Module.usedRepresentations)
}
inline void Module::set_usedrepresentations(int index, const char* value, size_t size) {
  usedrepresentations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:naothmessages.Module.usedRepresentations)
}
inline ::std::string* Module::add_usedrepresentations() {
  // @@protoc_insertion_point(field_add_mutable:naothmessages.Module.usedRepresentations)
  return usedrepresentations_.Add();
}
inline void Module::add_usedrepresentations(const ::std::string& value) {
  usedrepresentations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:naothmessages.Module.usedRepresentations)
}
#if LANG_CXX11
inline void Module::add_usedrepresentations(::std::string&& value) {
  usedrepresentations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:naothmessages.Module.usedRepresentations)
}
#endif
inline void Module::add_usedrepresentations(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  usedrepresentations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:naothmessages.Module.usedRepresentations)
}
inline void Module::add_usedrepresentations(const char* value, size_t size) {
  usedrepresentations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:naothmessages.Module.usedRepresentations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Module::usedrepresentations() const {
  // @@protoc_insertion_point(field_list:naothmessages.Module.usedRepresentations)
  return usedrepresentations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Module::mutable_usedrepresentations() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Module.usedRepresentations)
  return &usedrepresentations_;
}

// repeated string providedRepresentations = 3;
inline int Module::providedrepresentations_size() const {
  return providedrepresentations_.size();
}
inline void Module::clear_providedrepresentations() {
  providedrepresentations_.Clear();
}
inline const ::std::string& Module::providedrepresentations(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.Module.providedRepresentations)
  return providedrepresentations_.Get(index);
}
inline ::std::string* Module::mutable_providedrepresentations(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.Module.providedRepresentations)
  return providedrepresentations_.Mutable(index);
}
inline void Module::set_providedrepresentations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:naothmessages.Module.providedRepresentations)
  providedrepresentations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Module::set_providedrepresentations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:naothmessages.Module.providedRepresentations)
  providedrepresentations_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Module::set_providedrepresentations(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  providedrepresentations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:naothmessages.Module.providedRepresentations)
}
inline void Module::set_providedrepresentations(int index, const char* value, size_t size) {
  providedrepresentations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:naothmessages.Module.providedRepresentations)
}
inline ::std::string* Module::add_providedrepresentations() {
  // @@protoc_insertion_point(field_add_mutable:naothmessages.Module.providedRepresentations)
  return providedrepresentations_.Add();
}
inline void Module::add_providedrepresentations(const ::std::string& value) {
  providedrepresentations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:naothmessages.Module.providedRepresentations)
}
#if LANG_CXX11
inline void Module::add_providedrepresentations(::std::string&& value) {
  providedrepresentations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:naothmessages.Module.providedRepresentations)
}
#endif
inline void Module::add_providedrepresentations(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  providedrepresentations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:naothmessages.Module.providedRepresentations)
}
inline void Module::add_providedrepresentations(const char* value, size_t size) {
  providedrepresentations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:naothmessages.Module.providedRepresentations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Module::providedrepresentations() const {
  // @@protoc_insertion_point(field_list:naothmessages.Module.providedRepresentations)
  return providedrepresentations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Module::mutable_providedrepresentations() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.Module.providedRepresentations)
  return &providedrepresentations_;
}

// optional bool active = 4 [default = false];
inline bool Module::has_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Module::set_has_active() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Module::clear_has_active() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Module::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool Module::active() const {
  // @@protoc_insertion_point(field_get:naothmessages.Module.active)
  return active_;
}
inline void Module::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.Module.active)
}

// -------------------------------------------------------------------

// ModuleList

// repeated .naothmessages.Module modules = 1;
inline int ModuleList::modules_size() const {
  return modules_.size();
}
inline void ModuleList::clear_modules() {
  modules_.Clear();
}
inline const ::naothmessages::Module& ModuleList::modules(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.ModuleList.modules)
  return modules_.Get(index);
}
inline ::naothmessages::Module* ModuleList::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.ModuleList.modules)
  return modules_.Mutable(index);
}
inline ::naothmessages::Module* ModuleList::add_modules() {
  // @@protoc_insertion_point(field_add:naothmessages.ModuleList.modules)
  return modules_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::Module >*
ModuleList::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.ModuleList.modules)
  return &modules_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::Module >&
ModuleList::modules() const {
  // @@protoc_insertion_point(field_list:naothmessages.ModuleList.modules)
  return modules_;
}

// -------------------------------------------------------------------

// DebugRequest_Item

// required string name = 1;
inline bool DebugRequest_Item::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DebugRequest_Item::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DebugRequest_Item::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DebugRequest_Item::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DebugRequest_Item::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.DebugRequest.Item.name)
  return name_.GetNoArena();
}
inline void DebugRequest_Item::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.DebugRequest.Item.name)
}
#if LANG_CXX11
inline void DebugRequest_Item::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.DebugRequest.Item.name)
}
#endif
inline void DebugRequest_Item::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.DebugRequest.Item.name)
}
inline void DebugRequest_Item::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.DebugRequest.Item.name)
}
inline ::std::string* DebugRequest_Item::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.DebugRequest.Item.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugRequest_Item::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.DebugRequest.Item.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugRequest_Item::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.DebugRequest.Item.name)
}

// optional string description = 2;
inline bool DebugRequest_Item::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DebugRequest_Item::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DebugRequest_Item::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DebugRequest_Item::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& DebugRequest_Item::description() const {
  // @@protoc_insertion_point(field_get:naothmessages.DebugRequest.Item.description)
  return description_.GetNoArena();
}
inline void DebugRequest_Item::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.DebugRequest.Item.description)
}
#if LANG_CXX11
inline void DebugRequest_Item::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.DebugRequest.Item.description)
}
#endif
inline void DebugRequest_Item::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.DebugRequest.Item.description)
}
inline void DebugRequest_Item::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.DebugRequest.Item.description)
}
inline ::std::string* DebugRequest_Item::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:naothmessages.DebugRequest.Item.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugRequest_Item::release_description() {
  // @@protoc_insertion_point(field_release:naothmessages.DebugRequest.Item.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugRequest_Item::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.DebugRequest.Item.description)
}

// required bool value = 4 [default = false];
inline bool DebugRequest_Item::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DebugRequest_Item::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DebugRequest_Item::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DebugRequest_Item::clear_value() {
  value_ = false;
  clear_has_value();
}
inline bool DebugRequest_Item::value() const {
  // @@protoc_insertion_point(field_get:naothmessages.DebugRequest.Item.value)
  return value_;
}
inline void DebugRequest_Item::set_value(bool value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.DebugRequest.Item.value)
}

// -------------------------------------------------------------------

// DebugRequest

// repeated .naothmessages.DebugRequest.Item requests = 1;
inline int DebugRequest::requests_size() const {
  return requests_.size();
}
inline void DebugRequest::clear_requests() {
  requests_.Clear();
}
inline const ::naothmessages::DebugRequest_Item& DebugRequest::requests(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.DebugRequest.requests)
  return requests_.Get(index);
}
inline ::naothmessages::DebugRequest_Item* DebugRequest::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.DebugRequest.requests)
  return requests_.Mutable(index);
}
inline ::naothmessages::DebugRequest_Item* DebugRequest::add_requests() {
  // @@protoc_insertion_point(field_add:naothmessages.DebugRequest.requests)
  return requests_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::DebugRequest_Item >*
DebugRequest::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.DebugRequest.requests)
  return &requests_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::DebugRequest_Item >&
DebugRequest::requests() const {
  // @@protoc_insertion_point(field_list:naothmessages.DebugRequest.requests)
  return requests_;
}

// -------------------------------------------------------------------

// FeatureKeyPoint

// required .naothmessages.FloatVector2 pt = 1;
inline bool FeatureKeyPoint::has_pt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeatureKeyPoint::set_has_pt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeatureKeyPoint::clear_has_pt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeatureKeyPoint::clear_pt() {
  if (pt_ != NULL) pt_->::naothmessages::FloatVector2::Clear();
  clear_has_pt();
}
inline const ::naothmessages::FloatVector2& FeatureKeyPoint::pt() const {
  const ::naothmessages::FloatVector2* p = pt_;
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.pt)
  return p != NULL ? *p : *reinterpret_cast<const ::naothmessages::FloatVector2*>(
      &::naothmessages::_FloatVector2_default_instance_);
}
inline ::naothmessages::FloatVector2* FeatureKeyPoint::mutable_pt() {
  set_has_pt();
  if (pt_ == NULL) {
    pt_ = new ::naothmessages::FloatVector2;
  }
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureKeyPoint.pt)
  return pt_;
}
inline ::naothmessages::FloatVector2* FeatureKeyPoint::release_pt() {
  // @@protoc_insertion_point(field_release:naothmessages.FeatureKeyPoint.pt)
  clear_has_pt();
  ::naothmessages::FloatVector2* temp = pt_;
  pt_ = NULL;
  return temp;
}
inline void FeatureKeyPoint::set_allocated_pt(::naothmessages::FloatVector2* pt) {
  delete pt_;
  pt_ = pt;
  if (pt) {
    set_has_pt();
  } else {
    clear_has_pt();
  }
  // @@protoc_insertion_point(field_set_allocated:naothmessages.FeatureKeyPoint.pt)
}

// required float size = 2;
inline bool FeatureKeyPoint::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeatureKeyPoint::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeatureKeyPoint::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeatureKeyPoint::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline float FeatureKeyPoint::size() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.size)
  return size_;
}
inline void FeatureKeyPoint::set_size(float value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.size)
}

// required float angle = 3;
inline bool FeatureKeyPoint::has_angle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FeatureKeyPoint::set_has_angle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FeatureKeyPoint::clear_has_angle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FeatureKeyPoint::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float FeatureKeyPoint::angle() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.angle)
  return angle_;
}
inline void FeatureKeyPoint::set_angle(float value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.angle)
}

// required float response = 4;
inline bool FeatureKeyPoint::has_response() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FeatureKeyPoint::set_has_response() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FeatureKeyPoint::clear_has_response() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FeatureKeyPoint::clear_response() {
  response_ = 0;
  clear_has_response();
}
inline float FeatureKeyPoint::response() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.response)
  return response_;
}
inline void FeatureKeyPoint::set_response(float value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.response)
}

// required int32 octave = 5;
inline bool FeatureKeyPoint::has_octave() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FeatureKeyPoint::set_has_octave() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FeatureKeyPoint::clear_has_octave() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FeatureKeyPoint::clear_octave() {
  octave_ = 0;
  clear_has_octave();
}
inline ::google::protobuf::int32 FeatureKeyPoint::octave() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.octave)
  return octave_;
}
inline void FeatureKeyPoint::set_octave(::google::protobuf::int32 value) {
  set_has_octave();
  octave_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.octave)
}

// required int32 class_id = 6;
inline bool FeatureKeyPoint::has_class_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FeatureKeyPoint::set_has_class_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FeatureKeyPoint::clear_has_class_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FeatureKeyPoint::clear_class_id() {
  class_id_ = 0;
  clear_has_class_id();
}
inline ::google::protobuf::int32 FeatureKeyPoint::class_id() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureKeyPoint.class_id)
  return class_id_;
}
inline void FeatureKeyPoint::set_class_id(::google::protobuf::int32 value) {
  set_has_class_id();
  class_id_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureKeyPoint.class_id)
}

// -------------------------------------------------------------------

// FeatureDetectionResult

// required bytes grayScaleImage = 1;
inline bool FeatureDetectionResult::has_grayscaleimage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeatureDetectionResult::set_has_grayscaleimage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeatureDetectionResult::clear_has_grayscaleimage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeatureDetectionResult::clear_grayscaleimage() {
  grayscaleimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_grayscaleimage();
}
inline const ::std::string& FeatureDetectionResult::grayscaleimage() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.grayScaleImage)
  return grayscaleimage_.GetNoArena();
}
inline void FeatureDetectionResult::set_grayscaleimage(const ::std::string& value) {
  set_has_grayscaleimage();
  grayscaleimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.FeatureDetectionResult.grayScaleImage)
}
#if LANG_CXX11
inline void FeatureDetectionResult::set_grayscaleimage(::std::string&& value) {
  set_has_grayscaleimage();
  grayscaleimage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.FeatureDetectionResult.grayScaleImage)
}
#endif
inline void FeatureDetectionResult::set_grayscaleimage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_grayscaleimage();
  grayscaleimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.FeatureDetectionResult.grayScaleImage)
}
inline void FeatureDetectionResult::set_grayscaleimage(const void* value, size_t size) {
  set_has_grayscaleimage();
  grayscaleimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.FeatureDetectionResult.grayScaleImage)
}
inline ::std::string* FeatureDetectionResult::mutable_grayscaleimage() {
  set_has_grayscaleimage();
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureDetectionResult.grayScaleImage)
  return grayscaleimage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FeatureDetectionResult::release_grayscaleimage() {
  // @@protoc_insertion_point(field_release:naothmessages.FeatureDetectionResult.grayScaleImage)
  clear_has_grayscaleimage();
  return grayscaleimage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FeatureDetectionResult::set_allocated_grayscaleimage(::std::string* grayscaleimage) {
  if (grayscaleimage != NULL) {
    set_has_grayscaleimage();
  } else {
    clear_has_grayscaleimage();
  }
  grayscaleimage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), grayscaleimage);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.FeatureDetectionResult.grayScaleImage)
}

// repeated .naothmessages.FeatureKeyPoint keyPoints = 2;
inline int FeatureDetectionResult::keypoints_size() const {
  return keypoints_.size();
}
inline void FeatureDetectionResult::clear_keypoints() {
  keypoints_.Clear();
}
inline const ::naothmessages::FeatureKeyPoint& FeatureDetectionResult::keypoints(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.keyPoints)
  return keypoints_.Get(index);
}
inline ::naothmessages::FeatureKeyPoint* FeatureDetectionResult::mutable_keypoints(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureDetectionResult.keyPoints)
  return keypoints_.Mutable(index);
}
inline ::naothmessages::FeatureKeyPoint* FeatureDetectionResult::add_keypoints() {
  // @@protoc_insertion_point(field_add:naothmessages.FeatureDetectionResult.keyPoints)
  return keypoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureKeyPoint >*
FeatureDetectionResult::mutable_keypoints() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureDetectionResult.keyPoints)
  return &keypoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureKeyPoint >&
FeatureDetectionResult::keypoints() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureDetectionResult.keyPoints)
  return keypoints_;
}

// repeated .naothmessages.SingleDescriptor descriptors = 3;
inline int FeatureDetectionResult::descriptors_size() const {
  return descriptors_.size();
}
inline void FeatureDetectionResult::clear_descriptors() {
  descriptors_.Clear();
}
inline const ::naothmessages::SingleDescriptor& FeatureDetectionResult::descriptors(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.descriptors)
  return descriptors_.Get(index);
}
inline ::naothmessages::SingleDescriptor* FeatureDetectionResult::mutable_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureDetectionResult.descriptors)
  return descriptors_.Mutable(index);
}
inline ::naothmessages::SingleDescriptor* FeatureDetectionResult::add_descriptors() {
  // @@protoc_insertion_point(field_add:naothmessages.FeatureDetectionResult.descriptors)
  return descriptors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >*
FeatureDetectionResult::mutable_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureDetectionResult.descriptors)
  return &descriptors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >&
FeatureDetectionResult::descriptors() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureDetectionResult.descriptors)
  return descriptors_;
}

// repeated string namesForKeyPoints = 4;
inline int FeatureDetectionResult::namesforkeypoints_size() const {
  return namesforkeypoints_.size();
}
inline void FeatureDetectionResult::clear_namesforkeypoints() {
  namesforkeypoints_.Clear();
}
inline const ::std::string& FeatureDetectionResult::namesforkeypoints(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return namesforkeypoints_.Get(index);
}
inline ::std::string* FeatureDetectionResult::mutable_namesforkeypoints(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return namesforkeypoints_.Mutable(index);
}
inline void FeatureDetectionResult::set_namesforkeypoints(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  namesforkeypoints_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void FeatureDetectionResult::set_namesforkeypoints(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  namesforkeypoints_.Mutable(index)->assign(std::move(value));
}
#endif
inline void FeatureDetectionResult::set_namesforkeypoints(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  namesforkeypoints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
inline void FeatureDetectionResult::set_namesforkeypoints(int index, const char* value, size_t size) {
  namesforkeypoints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
inline ::std::string* FeatureDetectionResult::add_namesforkeypoints() {
  // @@protoc_insertion_point(field_add_mutable:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return namesforkeypoints_.Add();
}
inline void FeatureDetectionResult::add_namesforkeypoints(const ::std::string& value) {
  namesforkeypoints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
#if LANG_CXX11
inline void FeatureDetectionResult::add_namesforkeypoints(::std::string&& value) {
  namesforkeypoints_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
#endif
inline void FeatureDetectionResult::add_namesforkeypoints(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  namesforkeypoints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
inline void FeatureDetectionResult::add_namesforkeypoints(const char* value, size_t size) {
  namesforkeypoints_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:naothmessages.FeatureDetectionResult.namesForKeyPoints)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FeatureDetectionResult::namesforkeypoints() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return namesforkeypoints_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FeatureDetectionResult::mutable_namesforkeypoints() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureDetectionResult.namesForKeyPoints)
  return &namesforkeypoints_;
}

// optional int32 numberOfFeatureElements = 5 [default = 64];
inline bool FeatureDetectionResult::has_numberoffeatureelements() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeatureDetectionResult::set_has_numberoffeatureelements() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeatureDetectionResult::clear_has_numberoffeatureelements() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeatureDetectionResult::clear_numberoffeatureelements() {
  numberoffeatureelements_ = 64;
  clear_has_numberoffeatureelements();
}
inline ::google::protobuf::int32 FeatureDetectionResult::numberoffeatureelements() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureDetectionResult.numberOfFeatureElements)
  return numberoffeatureelements_;
}
inline void FeatureDetectionResult::set_numberoffeatureelements(::google::protobuf::int32 value) {
  set_has_numberoffeatureelements();
  numberoffeatureelements_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureDetectionResult.numberOfFeatureElements)
}

// -------------------------------------------------------------------

// SingleDescriptor

// repeated float d = 1;
inline int SingleDescriptor::d_size() const {
  return d_.size();
}
inline void SingleDescriptor::clear_d() {
  d_.Clear();
}
inline float SingleDescriptor::d(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.SingleDescriptor.d)
  return d_.Get(index);
}
inline void SingleDescriptor::set_d(int index, float value) {
  d_.Set(index, value);
  // @@protoc_insertion_point(field_set:naothmessages.SingleDescriptor.d)
}
inline void SingleDescriptor::add_d(float value) {
  d_.Add(value);
  // @@protoc_insertion_point(field_add:naothmessages.SingleDescriptor.d)
}
inline const ::google::protobuf::RepeatedField< float >&
SingleDescriptor::d() const {
  // @@protoc_insertion_point(field_list:naothmessages.SingleDescriptor.d)
  return d_;
}
inline ::google::protobuf::RepeatedField< float >*
SingleDescriptor::mutable_d() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.SingleDescriptor.d)
  return &d_;
}

// -------------------------------------------------------------------

// FeatureClass

// required string name = 1;
inline bool FeatureClass::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeatureClass::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeatureClass::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeatureClass::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& FeatureClass::name() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureClass.name)
  return name_.GetNoArena();
}
inline void FeatureClass::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:naothmessages.FeatureClass.name)
}
#if LANG_CXX11
inline void FeatureClass::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:naothmessages.FeatureClass.name)
}
#endif
inline void FeatureClass::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:naothmessages.FeatureClass.name)
}
inline void FeatureClass::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:naothmessages.FeatureClass.name)
}
inline ::std::string* FeatureClass::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureClass.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FeatureClass::release_name() {
  // @@protoc_insertion_point(field_release:naothmessages.FeatureClass.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FeatureClass::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:naothmessages.FeatureClass.name)
}

// repeated .naothmessages.SingleDescriptor samples = 2;
inline int FeatureClass::samples_size() const {
  return samples_.size();
}
inline void FeatureClass::clear_samples() {
  samples_.Clear();
}
inline const ::naothmessages::SingleDescriptor& FeatureClass::samples(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureClass.samples)
  return samples_.Get(index);
}
inline ::naothmessages::SingleDescriptor* FeatureClass::mutable_samples(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureClass.samples)
  return samples_.Mutable(index);
}
inline ::naothmessages::SingleDescriptor* FeatureClass::add_samples() {
  // @@protoc_insertion_point(field_add:naothmessages.FeatureClass.samples)
  return samples_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >*
FeatureClass::mutable_samples() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureClass.samples)
  return &samples_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::SingleDescriptor >&
FeatureClass::samples() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureClass.samples)
  return samples_;
}

// optional double objectHeight = 3;
inline bool FeatureClass::has_objectheight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeatureClass::set_has_objectheight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeatureClass::clear_has_objectheight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeatureClass::clear_objectheight() {
  objectheight_ = 0;
  clear_has_objectheight();
}
inline double FeatureClass::objectheight() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureClass.objectHeight)
  return objectheight_;
}
inline void FeatureClass::set_objectheight(double value) {
  set_has_objectheight();
  objectheight_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureClass.objectHeight)
}

// -------------------------------------------------------------------

// FeatureTable

// repeated .naothmessages.FeatureClass classes = 1;
inline int FeatureTable::classes_size() const {
  return classes_.size();
}
inline void FeatureTable::clear_classes() {
  classes_.Clear();
}
inline const ::naothmessages::FeatureClass& FeatureTable::classes(int index) const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureTable.classes)
  return classes_.Get(index);
}
inline ::naothmessages::FeatureClass* FeatureTable::mutable_classes(int index) {
  // @@protoc_insertion_point(field_mutable:naothmessages.FeatureTable.classes)
  return classes_.Mutable(index);
}
inline ::naothmessages::FeatureClass* FeatureTable::add_classes() {
  // @@protoc_insertion_point(field_add:naothmessages.FeatureTable.classes)
  return classes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureClass >*
FeatureTable::mutable_classes() {
  // @@protoc_insertion_point(field_mutable_list:naothmessages.FeatureTable.classes)
  return &classes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::FeatureClass >&
FeatureTable::classes() const {
  // @@protoc_insertion_point(field_list:naothmessages.FeatureTable.classes)
  return classes_;
}

// optional int32 numberOfFeatureElements = 2 [default = 64];
inline bool FeatureTable::has_numberoffeatureelements() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeatureTable::set_has_numberoffeatureelements() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeatureTable::clear_has_numberoffeatureelements() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeatureTable::clear_numberoffeatureelements() {
  numberoffeatureelements_ = 64;
  clear_has_numberoffeatureelements();
}
inline ::google::protobuf::int32 FeatureTable::numberoffeatureelements() const {
  // @@protoc_insertion_point(field_get:naothmessages.FeatureTable.numberOfFeatureElements)
  return numberoffeatureelements_;
}
inline void FeatureTable::set_numberoffeatureelements(::google::protobuf::int32 value) {
  set_has_numberoffeatureelements();
  numberoffeatureelements_ = value;
  // @@protoc_insertion_point(field_set:naothmessages.FeatureTable.numberOfFeatureElements)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace naothmessages

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::naothmessages::PlotItem_PlotType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::naothmessages::PlotItem_PlotType>() {
  return ::naothmessages::PlotItem_PlotType_descriptor();
}
template <> struct is_proto_enum< ::naothmessages::XABSLSymbol_SymbolType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::naothmessages::XABSLSymbol_SymbolType>() {
  return ::naothmessages::XABSLSymbol_SymbolType_descriptor();
}
template <> struct is_proto_enum< ::naothmessages::XABSLActionSparse_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::naothmessages::XABSLActionSparse_ActionType>() {
  return ::naothmessages::XABSLActionSparse_ActionType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Messages_2eproto__INCLUDED
