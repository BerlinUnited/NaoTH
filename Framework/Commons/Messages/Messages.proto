syntax = "proto2";
package naothmessages;

option java_package= "de.naoth.rc.messages";

import "CommonTypes.proto";

// command line interface //

message CMDArg {
  required string name = 1;
  optional bytes bytes = 3;
}

message CMD {
  required string name = 1;
  repeated CMDArg args = 2;
}

// pure RC messages //

message StopwatchItem {
  required string name = 1;
  required int32 time = 2;
}

message Stopwatches {
  repeated StopwatchItem stopwatches = 1;
}

message PlotItem {
  enum PlotType {
    Default = 1;
    Plot2D = 2;
    Origin2D = 3;
  }  
  required PlotType type = 1;
  required string name = 2;
  
  optional double value = 3;
  optional double x = 4;
  optional double y = 5;
  optional double rotation = 6;
}

message PlotStroke2D {
  required string name = 2;
  repeated DoubleVector2 points = 1;
}

message Plots {
  repeated PlotItem plots = 1;
  repeated PlotStroke2D plotstrokes = 2;
}


message XABSLSymbol {
  enum SymbolType {
    Decimal = 0;
    Boolean = 1;
    Enum = 2;
    Unknown = 3;
  }

  required int32 id = 1 [default=-1];
  required SymbolType type = 2 [default=Unknown];
  optional string name = 3;
  
  optional double decimalValue = 11;
  optional bool boolValue = 12;
  optional int32 enumValue = 13;
  optional int32 enumTypeId = 14;
}

message XABSLActiveOptionSparse {
  required int32 id = 1 [default=-1];
  
  optional int64 timeOfExecution = 3 [default=0];
  optional int32 activeState = 4;
  optional int64 stateTime = 5;
  
  repeated double decimalParameters = 6;
  repeated bool booleanParameters = 7;
  repeated int32 enumeratedParameters = 8;
    
  repeated XABSLActionSparse activeSubActions = 9;
}

message XABSLActionSparse {
  enum ActionType {
   Option = 0;
   BasicBehavior = 1;
   SymbolAssignment = 2;
   Unknown = 3;
  }
  
  required ActionType type = 2 [default=Unknown];
  
  optional XABSLSymbol symbol = 3;
  optional XABSLActiveOptionSparse option = 4;
}

message SymbolValueList {
  message DoubleSymbol {
    required int32 id = 1 [default=-1];
    optional string name = 2;
    optional double value = 3;
  }
  message BooleanSymbol {
    required int32 id = 1 [default=-1];
    optional string name = 2;
    optional bool value = 3;
  }
  
  message EnumSymbol {
    required int32 id = 1 [default=-1];
    optional string name = 2;
    optional int32 value = 13;
    optional int32 typeId = 14;
  }
  
  repeated DoubleSymbol decimal = 1;
  repeated BooleanSymbol boolean = 2;
  repeated EnumSymbol enumerated = 3;
}

message BehaviorStateSparse {  
  optional string agent = 1;
  repeated XABSLActionSparse activeRootActions = 2;
  
  optional SymbolValueList inputSymbolList = 10;
  optional SymbolValueList outputSymbolList = 11;
  
  optional uint32 frameNumber = 5;
  optional string errorMessage = 6;
}


message BehaviorStateComplete {
  
  message EnumType {
    message Element {
      required int32 value = 1;
      required string name = 2;
    }
    required string name = 1;
    repeated Element elements = 2;
  }
  
  message Option {
    message State {
      required string name = 1;
      optional bool target = 2;
    }
    
    required string name = 1;
    repeated State states = 3;
    repeated XABSLSymbol parameters = 2;
  }
  
  message Agent {
    required string name = 1;
    required string rootOption = 2;
  }
  
  repeated EnumType enumerations = 10;
  repeated Option options = 11;
  repeated Agent agents = 12;
  
  optional SymbolValueList inputSymbolList = 13;
  optional SymbolValueList outputSymbolList = 14;
  optional uint32 frameNumber = 15;
}


message Module {
 required string name = 1;
 repeated string usedRepresentations = 2;
 repeated string providedRepresentations = 3;
 optional bool active = 4 [default=false];
}

message ModuleList {
 repeated Module modules = 1;
}

message DebugRequest {
  message Item {
   required string name = 1;
   optional string description = 2;
   required bool value = 4 [default=false];
  }

  repeated Item requests = 1;
}


// do we need this?
message FeatureKeyPoint {
  required FloatVector2 pt = 1;
  required float size = 2;
  required float angle = 3;
  required float response = 4;
  required int32 octave = 5;
  required int32 class_id = 6;
}

message FeatureDetectionResult {
  required bytes grayScaleImage = 1;
  
  repeated FeatureKeyPoint keyPoints = 2;
  repeated SingleDescriptor descriptors = 3;
  
  repeated string namesForKeyPoints = 4;
  
  optional int32 numberOfFeatureElements = 5 [default=64];
}

message SingleDescriptor {
  repeated float d = 1;
}

message FeatureClass {
  required string name=1;
  repeated SingleDescriptor samples=2;
  optional double objectHeight = 3;
}

message FeatureTable {
  repeated FeatureClass classes = 1;
  optional int32 numberOfFeatureElements = 2 [default=64];
}
