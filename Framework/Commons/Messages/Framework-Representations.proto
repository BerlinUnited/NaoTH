syntax = "proto2";
package naothmessages;
option java_package= "de.naoth.rc.messages";

import "CommonTypes.proto";

// Representations //
message Image {
  
  enum Format {
    YUV = 0;
    YUV422 = 1;
    JPEG = 2;
  }
  
  required bytes data = 1;
  optional int32 width = 2 [default=320];
  optional int32 height = 3 [default=240];
  
  optional CameraInfo cameraInfo = 4;
  
  optional Format format = 5 [default=YUV];
  
  optional uint32 timestamp = 6;
}


message CameraInfo {
  
  required int32 resolutionWidth = 1;
  required int32 resolutionHeight = 2;
  
  optional CameraID cameraID = 4 [default=bottom];
  
  // these are calculated in the new version of CameraInfo, do not use
  optional double focalLength = 5 [deprecated=true];
  optional double openingAngleWidth = 6 [deprecated=true];
  optional double openingAngleHeight = 7 [deprecated=true];
  optional double opticalCenterX = 8 [deprecated=true];
  optional double opticalCenterY = 9 [deprecated=true];

  optional int64 size = 10 [deprecated=true];
  optional int64 memorysize = 11 [deprecated=true];

  // these are replaced by correctionOffset
  optional double cameraRollOffset = 12 [deprecated=true];
  optional double cameraTiltOffset = 13 [deprecated=true];

  // these are moved to other representations
  repeated DoubleVector2 correctionOffset = 18 [deprecated=true];
  repeated DoubleVector2 headJointOffset = 19 [deprecated=true];
  repeated Pose3D transformation = 14 [deprecated=true];

  optional double openingAngleDiagonal = 15;
  optional double pixelSize = 16;
  optional double focus = 17;
}

message JointData {    
  repeated double position = 1;
  repeated double stiffness = 2;
  repeated double dp = 3;
  repeated double ddp = 4;
}

message SensorJointData {
  required JointData jointData = 1;
  repeated double temperature = 2;
  repeated double electricCurrent = 3;
}

message UltraSoundReceiveData {
  optional uint32 ultraSoundTimeStep = 1;
  required double rawdata = 2;
  repeated double dataLeft = 3;
  repeated double dataRight = 4;
}

message FrameInfo {
  required uint32 frameNumber = 1; 
  required uint32 time = 2;
}

message RobotInfo {
  optional string platform = 1;
  optional string bodyNickName = 2;
  optional string headNickName = 3;
  optional string bodyID = 4;
  optional uint32 basicTimeStep = 5;
}

message FSRData {
  repeated double force = 1 [deprecated=true];
  repeated double data = 2;
  repeated bool valid = 3 [deprecated=true];
  
  // should we separate them in the future?
  //repeated double dataLeft = 4;
  //repeated double dataRight = 5;
}

message AccelerometerData {
  repeated double legacyPackedData = 1 [deprecated=true];

  optional DoubleVector3 data = 2;
  optional DoubleVector3 rawData = 3;
}

message GyrometerData {
  repeated double legacyPackedData = 1 [deprecated=true];

  optional DoubleVector3 data = 2;
  optional DoubleVector3 rawData = 3;
  optional double ref = 4;
}

message InertialSensorData {
  repeated double legacyPackedData = 1 [deprecated=true];
  
  optional DoubleVector2 data = 2;
}

message ButtonData {
  enum ButtonID {
    Chest           = 0;
    LeftFootLeft    = 1;
    LeftFootRight   = 2;
    RightFootLeft   = 3;
    RightFootRight  = 4;

    HeadFront       = 5;
    HeadMiddle      = 6;
    HeadRear        = 7;

    LeftHandBack    = 8;
    LeftHandLeft    = 9;
    LeftHandRight   = 10;

    RightHandBack   = 11;
    RightHandLeft   = 12;
    RightHandRight  = 13;
  }

  repeated bool isPressed = 1;
  repeated uint32 numOfFramesPressed = 2;
  repeated uint32 eventCounter = 3;
}

