/** Scan mode for looking at the goal/searching for the goal of the opponent*/
option search_for_goal 
{
  //we should include a parameter like owngoal=true/false

  bool @own;
  bool @opp;

  initial state look_straight_ahead {
    decision {
      if (state_time > 1500)
        goto try_to_look_at_the_old_goal;
      else
        stay;
    }
    action {
      head.camera.id = bottom;
      head.motion_type = look_straight_ahead;
    }
  }
  
  state try_to_look_at_the_old_goal
  {
    decision
    {
      if (state_time > 1000)
        goto search_for_goal;
      else 
        stay;
    }
    action
    {
      head.camera.id = bottom;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = (@own && (!@opp || abs(value = goal.own.angle) < abs(value = goal.opp.angle)))?goal.own.x:goal.opp.x;
      head.point_in_world.y = (@own && (!@opp || abs(value = goal.own.angle) < abs(value = goal.opp.angle)))?goal.own.y:goal.opp.y;
      head.point_in_world.z = 0;
    }
  }
  
  state search_for_goal 
  {
    decision
    {
      if ((goal.own.was_seen && @own)|| 
          (goal.opp.was_seen && @opp))
        goto look_at_goal_percept;
      else
       stay;
    }
    action
    {
      head.camera.id = bottom;
      head.motion_type = search;
      head.search.center.x = 1000;
      head.search.center.y = 0;
      head.search.center.z = 500;
      head.search.size.x = 500;
      head.search.size.y = 1000;
      head.search.size.z = 500;
    }
  }
  
  state look_at_goal
  {
    decision
    {
      if ((goal.own.time_since_seen < 1000 && @own) ||
          (goal.opp.time_since_seen < 1000 && @opp))        
        stay;
      else
        goto search_for_goal;
    }
    action
    {
      head.camera.id = bottom;      
      head.motion_type = look_at_world_point;      
      head.point_in_world.x = goal.centroid.x;//goal.opp.x;      
      head.point_in_world.y = goal.centroid.y;//goal.opp.y;      
      head.point_in_world.z = 0;    
    }
  }

  state look_at_goal_percept
  {
    decision
    {
      if((goal.own.time_since_seen == 0 && @own) ||
         (goal.opp.time_since_seen == 0 && @opp) ||
         (state_time > 1500))
        goto look_at_goal;
      else
        stay;
    }
    action
    {
      head.camera.id = bottom;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = goal.centroid.x;
      head.point_in_world.y = goal.centroid.y;
      head.point_in_world.z = goal.centroid.z;
    }
  }
}
