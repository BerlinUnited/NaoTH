// test dribble with step control

option dribble_stand_test 
{
  bool  @kick_right; // false -> kick left
  bool  @walk_before_kick;
  float @kick_direction; // 90 = left, 270 = right

  
  initial state decide_action 
  {
    decision 
    {
      if(state_time>1500)
      {
        if(@walk_before_kick)
        {
          if(@kick_right)
          {
            goto approach_for_kick_right;
          }
          else
          {
            goto approach_for_kick_left;
          }
        }         
        else
          goto dribble;
      }
      else
        stay;
    }
    action {
      motion.walk.step_control.foot = none;
      motion.walk_speed.x = 80*cos(angle=@kick_direction);
      motion.walk_speed.y = 80*sin(angle=@kick_direction);
      motion.type = walk;
    }
  }

  state approach_for_kick_left {
    decision{
      if(action_done && executed_motion.step_control.right_movable  && ball.time_since_last_seen < 400)
        goto dribble; //approach_for_kick_left_done;
      else
        stay;
    }
    action{
      go_to_relative_point(rotation = atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x), 
                           x = ball.left_foot.preview.x - 150 * cos(angle=atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x)), 
                           y = ball.left_foot.preview.y );
      
      motion.walk.coordinate = left_foot;
      motion.walk.stop_with_stand = false;
      
      head.control_mode = search_for_ball;
    }
  }

  state approach_for_kick_right {
    decision{
      if(action_done && executed_motion.step_control.left_movable && ball.time_since_last_seen < 400)
        goto dribble; //approach_for_kick_right_done;
      else
        stay;
    }
    action{
      go_to_relative_point(rotation = atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x), 
                           x = ball.right_foot.preview.x - 150 * cos(angle=atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x)), 
                           y = ball.right_foot.preview.y);
      
      motion.walk.coordinate = right_foot;
      motion.walk.stop_with_stand = false;
      
      head.control_mode = search_for_ball;
    }
  }

  target state finished
  {
    decision
    {
      if(state_time > 1500){
			  if(@walk_before_kick)
			    goto decide_action;
			  else
			    goto dribble;
      }
      else
        stay;
    }
    action
    {
      head.control_mode = search_for_ball;
      motion.walk.step_control.foot = none;
      motion.type = walk;
      motion.walk_speed.x = 80*cos(angle=@kick_direction);
      motion.walk_speed.y = 80*sin(angle=@kick_direction);
      motion.walk.stop_with_stand = true;
    }
  }
  
  state dribble
  {
    decision 
    {
      if(state_time > 500)
      {
        goto stabilize;
      }
      else
        stay;
    }
    action 
    {
      head.control_mode = search_for_ball;
      motion.walk.step_control.foot = @kick_right?right:left;
      motion.walk.coordinate = @kick_right?right_foot:left_foot;
      motion.walk.step_control.target.x = @kick_right?ball.right_foot.preview.x+100:ball.left_foot.preview.x+100;
      motion.walk.step_control.target.y = @kick_right?ball.right_foot.preview.y:ball.left_foot.preview.y;
      motion.walk.step_control.target.rot = 0;
      motion.walk.step_control.speed_direction = @kick_direction;
      motion.walk.step_control.time = 500;
      motion.walk.style = fast;
      motion.type = walk;
      motion.walk.stop_with_stand = false;
    }
  }

  state stabilize
  {
    decision
    {
      if(state_time>500)
        goto decide_action;
      else
        stay;
    }
    action
    {
      motion.walk.style = fast;
      motion.type = walk;
      //motion.walk.step_control.foot = none;
      motion.walk_speed.x = 80*cos(angle=@kick_direction);
      motion.walk_speed.y = 80*sin(angle=@kick_direction);
      //motion.walk_speed.rot = 0;
      motion.walk.stop_with_stand = false;
      motion.walk.step_control.time = 500;
    }
  } 
}