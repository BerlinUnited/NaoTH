option ultrasound_test
{
  common decision
  {
    if ((sensor.ultrasound.left < 500 && sensor.ultrasound.right < 500) || game.state != playing)
      goto obstacle_left_and_right;
    else if (sensor.ultrasound.right < 800)
      goto obstacle_right;
    else if (sensor.ultrasound.left < 800)
      goto obstacle_left;
    else if (true)
      goto no_obstacle;

    /*if ((sensor.ultrasound.left > 300 && sensor.ultrasound.left < 1000 && 
        sensor.ultrasound.right > 300 && sensor.ultrasound.right < 1000) || game.state != playing)
      goto obstacle_left_and_right;
    else if (sensor.ultrasound.right > 300 && sensor.ultrasound.right < 1000)
      goto obstacle_right;
    else if (sensor.ultrasound.left > 300 && sensor.ultrasound.left < 1000)
      goto obstacle_left;
    else if (true)
      goto no_obstacle;*/
  }
    
  initial state obstacle_left_and_right
  {
    action
    {
      // stop
      motion.type = stand;
      motion.walk_speed.x = 0;
      motion.walk_speed.y = 0;
      motion.walk_speed.rot = 0;
    }
  }
  
  state no_obstacle
  {
    action
    {
      // walk straightforward
      /*motion.type = walk;
      motion.walk_speed.x = robot_pose.x + 200;
      motion.walk_speed.y = robot_pose.y;
      motion.walk_speed.rot = robot_pose.rotation;
      motion.walk.coordinate = hip;
      motion.walk.stop_with_stand = true;*/
      // TODO: test whether it is the correct movement
      
      // test without walking
      motion.type = stand;
      motion.walk_speed.x = 0;
      motion.walk_speed.y = 0;
      motion.walk_speed.rot = 0;
    }
  }

  state obstacle_left
  {
    action
    {
      // walk to the right
      /*motion.type = walk;
      motion.walk_speed.x = robot_pose.x;
      motion.walk_speed.y = robot_pose.y - 200;
      motion.walk_speed.rot = robot_pose.rotation;
      motion.walk.coordinate = hip;
      motion.walk.stop_with_stand = true;*/
      // TODO: test whether it is the correct movement
      
      // test without walking
      motion.type = stand;
      motion.walk_speed.x = 0;
      motion.walk_speed.y = 0;
      motion.walk_speed.rot = 0;
    }
  }

  state obstacle_right
  {
    action
    {
      // walk to the left
      /*motion.type = walk;
      motion.walk_speed.x = robot_pose.x;
      motion.walk_speed.y = robot_pose.y + 200;
      motion.walk_speed.rot = robot_pose.rotation;
      motion.walk.coordinate = hip;
      motion.walk.stop_with_stand = true;*/
      // TODO: test whether it is the correct movement
      
      // test without walking
      motion.type = stand;
      motion.walk_speed.x = 0;
      motion.walk_speed.y = 0;
      motion.walk_speed.rot = 0;
    }
  }

}
