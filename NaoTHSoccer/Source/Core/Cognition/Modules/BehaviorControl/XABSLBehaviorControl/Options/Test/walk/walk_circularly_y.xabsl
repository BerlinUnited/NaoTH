option walk_circularly_y
{
  initial state and_action
  {
    decision
    {
      if(executed_motion.type == stand){
        goto walk_left_rot_left;
      } else {
        stay;
      }
    }
    action
    {
      motion.type = stand;
    }
  }

  state walk_left_rot_left
  {
    decision
    {
      if(state_time>5000){
       goto stand;
      } else {
       stay;
      }
    }
    action
    {
      motion.type = walk;
      motion.walk_speed.y = 100;
      motion.walk_speed.rot = 9;
      motion.walk.style = fast;
      test_walk.last_state=walk_left_rot_left;
    }
  }

  state walk_left_rot_right
  {
    decision
    {
      if(state_time>5000){
       goto stand;
      } else {
       stay;
      }
    }
    action
    {
      motion.type = walk;
      motion.walk_speed.y = 100;
      motion.walk_speed.rot = -9;
      motion.walk.style = fast;
      test_walk.last_state=walk_left_rot_right;
    }
  }

  state walk_right_rot_right
  {
    decision
    {
      if(state_time>5000){
       goto stand;
      } else {
       stay;
      }
    }
    action
    {
      motion.type = walk;
      motion.walk_speed.y = -100;
      motion.walk_speed.rot = 9;
      motion.walk.style = fast;
      test_walk.last_state=walk_right_rot_right;
    }
  }

  state walk_right_rot_left
  {
    decision
    {
      if(state_time>5000){
       goto stop;
      } else {
       stay;
      }
    }
    action
    {
      motion.type = walk;
      motion.walk_speed.y = -100;
      motion.walk_speed.rot = -9;
      motion.walk.style = fast;
      test_walk.last_state=walk_right_rot_left;
    }
  }

  state stand{
  decision{
      if(!(executed_motion.type == stand)){
        stay;
      }
      else if(test_walk.last_state==walk_left_rot_left){
        goto walk_left_rot_right;
      }
      else if(test_walk.last_state==walk_left_rot_right){
        goto walk_right_rot_right;
      }
      else if(test_walk.last_state==walk_right_rot_right){
        goto walk_right_rot_left;
      } else {
        stay;
      }
    }
    action
    {
      motion.type = stand;
    }
  
  }

  target state stop
  {
    action
    {
    }
  }
  
}