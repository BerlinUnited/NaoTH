option decide_and_go_to_passive_position
{
  common decision
  {
    if(!body.ready_to_walk || game.current_mode != playing)
      goto idle;
  }

  initial state idle {
	  decision {
      else if (action_done)
        goto check_player_number;
      else
        stay;
	  }
	  action {
      search_ball();
	  }
	}  
  
  state check_player_number
  {
    decision{
      else if(game.player_number == 2)
          goto goto_passive_position_supporter2;
      else if(game.player_number == 3)
          goto goto_passive_position_striker;
      else if(game.player_number == 4)
          goto goto_passive_position_defender;          
      else if(game.player_number == 5)
          goto goto_passive_position_supporter;
      else
          stay;
    }
    action {
      head.control_mode = look_around;
      motion.type = stand;
    }
  }

  state goto_passive_position_striker {
    decision {
      else if(action_done)
        goto arrived;
      else
        stay;
    }
    action {
      go_to_and_keep_passive_position(
        x  =(field.xPosOppPenaltyMark + field.centerCircleRadius)/2, 
        y  = field.yPosLeftPenaltyArea, 
        rot= 0);
    }
  }

  state goto_passive_position_supporter {
    decision {
      else if(action_done)
        goto arrived;
      else
        stay;
    }
    action {
    //go_to_and_keep_passive_position(x=3200, y=-1000, rot=140);
      go_to_and_keep_passive_position(
        x = field.xPosOppPenaltyMark, 
        y = field.yPosRightFlank, 
        rot = 140);
    }
  }

  state goto_passive_position_defender {
    decision {
      else if(action_done)
        goto arrived;
      else
        stay;
    }
    action {
      go_to_and_keep_passive_position(
        x =(field.xPosOwnPenaltyMark+field.centerCircleRadius)/2, 
        y =field.yPosRightPenaltyArea, 
        rot=0);
    }
  }

  state goto_passive_position_supporter2{
    decision {
      else if(action_done)
        goto arrived;
      else
        stay;
    }
    action {
    //go_to_and_keep_passive_position(x=-1500, y=-900, rot=0);
      go_to_and_keep_passive_position(
        x = (field.xPosOwnPenaltyMark + field.xPosOwnPenaltyArea)/2,
        y = field.yPosLeftGoal, 
        rot=-15);
    }
  }

  target state arrived{
    action {
      passive_behavior();
    }
  }
}