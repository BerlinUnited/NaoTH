option spl_robust_inside_goalie{
 
 common decision
  {
    if(ball.distance < 1000 && ball.time_since_last_seen < 1000)
      goto clear_ball;
  }
  
initial state go_to_strategy_point{
     decision {
       else if (action_done)
        goto check_situation;
       else if (robot_pose.x > -3000    && robot_pose.x < -2600 &&
           robot_pose.y <   500    && robot_pose.y > -500 &&
           robot_pose.rotation < 5 && robot_pose.rotation > -5){
           goto check_situation;
      }else{
        stay;
      }
     }
     action {
      head.control_mode = goalie_look_around;
      go_to_absolute_point(rotation=0, x=-2800, y=0);
     }
}

state  clear_ball {   
   decision {
       else if (action_done 
           || (ball.distance > 1000 && ball.time_since_last_seen < 1000)
           || (ball.time_since_last_seen > 2000)) 
       {
         goto check_situation;
       }
       else stay;
     }
     action {
       team.is_playing_as_striker = true;
       clear_ball_far_away();
     }
}

target state check_situation {
  decision {
    else if ((ball.distance < 2000             && ball.time_since_last_seen < 2000)) {  
            // || (ball.team.position.abs() < 2000  && ball.team.time_since_last_update < 2000)) {
      goto critical_ball;
    }
  //only go to strategy point if the robot is localized wrong 
  // and is already searching around for more than 5 seconds
    else if (state_time < 5000 ||
           (robot_pose.x > -3200   && robot_pose.x < -2400 &&
           robot_pose.y <   700    && robot_pose.y > -700 &&
           robot_pose.rotation < 5 && robot_pose.rotation > -5) )
    {
      stay;  
    }else{
      goto go_to_strategy_point;
    }
  }
  action {
    team.is_playing_as_striker = false;
    motion.type = stand;
    head.control_mode = goalie_look_around;
  }
}

state critical_ball {
  decision {
     else if (action_done) {
       goto check_situation;
     } else {
        stay;
     }
  }
  action {
    critical_ball();
  }

}

}