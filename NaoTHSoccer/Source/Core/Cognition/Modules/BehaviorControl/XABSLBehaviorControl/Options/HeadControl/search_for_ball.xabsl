/** Scan mode for looking at the ball/searching for the ball */
option search_for_ball
{
  bool @force_ball_model_check; // false by default
  
  initial state start_search 
  {
    decision 
    {
	    if((ball.time_since_last_seen < 3000 || 
	       @force_ball_model_check) && 
	       abs(value=ball.angle) < 60)
	      goto try_to_look_at_the_old_ball;
	    else
	      goto search_for_ball_right;
	  }
	  action 
	  {
	  }
  }

  state try_to_look_at_the_old_ball
  {
    decision
    {
      if (state_time > 2000)
        goto search_for_ball_right;
      else
        stay;
    }
    action
    {
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.x * 250 / vector.abs(x=ball.x, y=ball.y);
      head.point_in_world.y = ball.y * 250 / vector.abs(x=ball.x, y=ball.y);
      head.point_in_world.z = ball.radius; // radius of the ball
    }
  }

  
  state search_for_ball_right
  {
    decision
    {
      if (ball.was_seen)
        goto look_at_ball_percept;
      else if( state_time > 3000 && 
        // there is still hope for the old model to be valid
        (ball.time_since_last_seen < 15000 || @force_ball_model_check) && 
        // ball model is reachable by moving my head only
        abs(value=ball.angle) < 60)
       goto try_to_look_at_the_old_ball;
      //else if( head.executed_motion_type != search )
       //goto search_for_ball_near;
      else if(state_time>2000)
        goto search_for_ball_left;
      else
       stay;
    }
    action
    {
        head.point_in_world.x = 200;
        head.point_in_world.y = -200;
        head.point_in_world.z = 0;
        head.motion_type = look_at_world_point;
    }
  }

  state search_for_ball_left
  {
    decision
    {
      if (ball.was_seen)
        goto look_at_ball_percept;
      else if( state_time > 3000 && 
        // there is still hope for the old model to be valid
        (ball.time_since_last_seen < 15000 || @force_ball_model_check) && 
        // ball model is reachable by moving my head only
        abs(value=ball.angle) < 60)
       goto try_to_look_at_the_old_ball;
      //else if( head.executed_motion_type != search )
       //goto search_for_ball_near;
      else if(state_time>2000)
        goto search_for_ball_right;
      else
       stay;
    }
    action
    {
      head.point_in_world.x = 200;
      head.point_in_world.y = 200;
      head.point_in_world.z = 0;
      head.motion_type = look_at_world_point;
    }
  }

    
  state look_at_ball
  {
    decision
    {
      if (ball.time_since_last_seen > 1000)
      {
        if((state_time > 1000)&&(ball.y>0))// I've seen the ball for a while => look at the old model
          goto search_for_ball_left;
        else if(state_time>1000)
          goto search_for_ball_right;
        else        
          stay;
      }
      else
        stay;
    }
    action
    {
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.x * 250 / vector.abs(x=ball.x, y=ball.y);
      head.point_in_world.y = ball.y * 250 / vector.abs(x=ball.x, y=ball.y);
      head.point_in_world.z = ball.radius; // radius of the ball
    }
  }


  state look_at_ball_percept
  {
    decision
    {
      if (state_time > 1000) // I waited long enough...
      {
        if(ball.time_since_last_seen < 100) // I still can see the ball => lok at the model
          goto look_at_ball;
        else
          goto search_for_ball_right; // I cannt see the ball anymore, must have been a mirage => go back, where I came from
      }
      else
        stay;
    }
    action
    {
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x * 250 / vector.abs(x=ball.percept.x, y=ball.percept.y);
      head.point_in_world.y = ball.percept.y * 250 / vector.abs(x=ball.percept.x, y=ball.percept.y);
      head.point_in_world.z = ball.radius; // radius of the ball
    }
  }
}
