/** Strafe because obstacle is behind ball */
option strafe_obstacle {

  /* choose behavior by situation*/
  
  initial state approach_ball {
    decision {
      if (attack.direction < 0)
        goto approach_ball_for_right_sidekick;
      else if (attack.direction > 0)
        goto approach_ball_for_left_sidekick;
      else
        stay;
    }
    action 
    {
      motion.type = stand;
    }
  }


 state approach_ball_for_right_sidekick {
    decision {
      if(executed_motion.step_control.right_movable
              //&& abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.right_foot.preview.x <= 165 && ball.right_foot.preview.x >= 20
              //&& ball.left_foot.preview.y <= -95 && ball.left_foot.preview.y >= -105)
              && ball.right_foot.preview.y <= 10 && ball.right_foot.preview.y >= 0)
        goto sidekick_right;
      else 
        stay;
    }
    action 
    {
      motion.type = walk;
      motion.walk.style = stable;
      motion.walk_speed.rot = 0;
      //motion.walk_speed.x = ball.left_foot.preview.x-170;
      //motion.walk_speed.y = ball.left_foot.preview.y+100;
      motion.walk_speed.x = ball.right_foot.preview.x-160;
      motion.walk_speed.y = ball.right_foot.preview.y-5;
      head.control_mode = search_for_ball;
    }
  }
  
  state sidekick_right
  {
    decision
    {
      if(state_time > 20 && executed_motion.step_control.left_movable)
        goto turn_left;
      else
        stay;
    }
    action
    {
      motion.type = walk;
      motion.walk.style = fast;
      motion.walk.step_control.foot = right;
      motion.walk.coordinate = right_foot;
      motion.walk.step_control.target.x = ball.right_foot.preview.x+200;
      motion.walk.step_control.target.y = ball.right_foot.preview.y+100;
      motion.walk.step_control.target.rot = 0;
      //motion.walk.step_control.speed_direction = (attack.direction > 45)?90:45;
      motion.walk.step_control.speed_direction = 90;
      motion.walk.step_control.time = 240;
      motion.walk.stop_with_stand = false;
      
      //To avoid ball leaving the image when using ball model
      head.control_mode = none;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x;
      head.point_in_world.y = ball.percept.y;
      head.point_in_world.z = ball.radius;
    }
  }

  target state turn_left
  {
    decision {
      if(state_time > 800)
        goto finish;
      else 
        stay;
    }
    action
    {
      motion.type = walk;
      motion.walk.step_control.foot = none;
      motion.walk.coordinate = hip;
      motion.walk.style = fast;
      motion.walk_speed.x = -100;
      motion.walk_speed.y = 50;
      motion.walk_speed.rot = 20;
            //To avoid ball leaving the image when using ball model
      head.control_mode = search_for_ball;
    }
  }

   state approach_ball_for_left_sidekick {
    decision {
      if(executed_motion.step_control.left_movable
              //&& abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.left_foot.preview.x <= 165 && ball.left_foot.preview.x >= 20
              //&& ball.left_foot.preview.y <= -95 && ball.left_foot.preview.y >= -105)
              && ball.left_foot.preview.y <= 0 && ball.left_foot.preview.y >= -10)
        goto sidekick_left;
      else 
        stay;
    }
    action 
    {
      motion.type = walk;
      motion.walk.style = stable;
      motion.walk_speed.rot = 0;
      //motion.walk_speed.x = ball.left_foot.preview.x-170;
      //motion.walk_speed.y = ball.left_foot.preview.y+100;
      motion.walk_speed.x = ball.left_foot.preview.x-160;
      motion.walk_speed.y = ball.left_foot.preview.y+5;
      head.control_mode = search_for_ball;
    }
  }
  
  state sidekick_left
  {
    decision
    {
      if(state_time > 20 && executed_motion.step_control.right_movable)
        goto turn_right;
      else
        stay;
    }
    action
    {
      motion.type = walk;
      motion.walk.style = fast;
      motion.walk.step_control.foot = left;
      motion.walk.coordinate = right_foot;
      motion.walk.step_control.target.x = ball.left_foot.preview.x+200;
      motion.walk.step_control.target.y = ball.left_foot.preview.y-100;
      motion.walk.step_control.target.rot = 0;
      //motion.walk.step_control.speed_direction = (attack.direction > 45)?90:45;
      motion.walk.step_control.speed_direction = -90;
      motion.walk.step_control.time = 240;
      motion.walk.stop_with_stand = false;
      
      //To avoid ball leaving the image when using ball model
      head.control_mode = none;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x;
      head.point_in_world.y = ball.percept.y;
      head.point_in_world.z = ball.radius;
    }
  }

  target state turn_right
  {
    decision {
      if(state_time > 800)
        goto finish;
      else 
        stay;
    }
    action
    {
      motion.type = walk;
      motion.walk.step_control.foot = none;
      motion.walk.coordinate = hip;
      motion.walk.style = fast;
      motion.walk_speed.x = -100;
      motion.walk_speed.y = -50;
      motion.walk_speed.rot = -20;
            //To avoid ball leaving the image when using ball model
      head.control_mode = search_for_ball;
    }
  }

  target state finish
  {
    action {
      motion.type = stand;
    }
  }

}