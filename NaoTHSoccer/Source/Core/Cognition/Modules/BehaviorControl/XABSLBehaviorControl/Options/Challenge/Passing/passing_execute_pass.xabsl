/** 
* This is an attacking behavior. 
* It should go to the ball, position and kick 
*/
option passing_execute_pass
{
  float @passing_direction;
  
  initial state approach_ball
  {
    decision {
      if(action_done)
      {
        goto kick;
      }
      else
      {
        stay;
      }
    }
    action {
      approach_ball_with_correct_foot(dist=200, want_to_turn_after_approach=false);
    }
  }

  
  state position
  {
    decision {
      if(ball.was_seen &&
        (
        ((ball.y <= 0) && (ball.y > -180) && (ball.x < 180) && (@passing_direction > -1) && (@passing_direction < 60)) // ball is right, goal is left
          ||
        ((ball.y > 0) && (ball.y < 180) && (ball.x < 180) && (@passing_direction < 1) && (@passing_direction > -60)) // ball is left, goal is right
        ))
       {
          goto stabilize_before_kick;
       }
      else
        stay;
    }
    action {
      position_near_ball(right=(@passing_direction > 0));
    }
  }

  state stabilize_before_kick
  {
    decision {
      // stand 1 second before kick
      if(executed_motion.type == stand && executed_motion.time > 1000)
        goto kick;
      else
        stay;
    }
    action {
      head.control_mode = search_for_ball;
      motion.type = stand;
    }
  }

  state kick {
    decision
    {
      if(action_done)
        goto stabilize_after_kick;
      else
        stay;
    }
    action 
    {
      situation.abortable = false;
      kick_ball(direction=@passing_direction);
    }
  }

  target state stabilize_after_kick {
    decision
    {
      if ( state_time > 1000 )
        goto approach_ball;
      else
        stay;
    }
    action
    {
      situation.abortable = false;
      head.control_mode = search_for_ball;
      motion.type = stand;
    }
  }
}