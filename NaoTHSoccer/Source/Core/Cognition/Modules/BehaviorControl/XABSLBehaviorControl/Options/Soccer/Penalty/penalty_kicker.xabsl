option penalty_kicker
{
  initial state look_for_ball
  {
    decision
    {
      if(ball.was_seen && state_time > 3000)
        goto approach_ball;
      else
        stay;
    }
    action
    {
      motion.type = stand;
      head.control_mode = search_for_ball;
    }
  }
  

  state approach_ball
  {
    decision
    {
      if (abs(value = (ball.preview.right_foot.x - 120 - ball.radius)) < 20
        && abs(value = ball.preview.right_foot.y) < 20
        && vector.abs(x=ball.speed.x, y=ball.speed.y) < 30)
        goto do_kick;
      else
        stay;
    }
    action
    {
      //go_to_ball(distance = 170);
      motion.type = walk;
      motion.walk.style = stable;
      motion.walk.coordinate = right_foot;
      motion.walk_speed.x = 0.7*(ball.preview.right_foot.x - 120 - ball.radius);
      motion.walk_speed.y = ball.preview.right_foot.y;
      motion.walk_speed.rot = atan2(y = ball.preview.right_foot.y, x = ball.preview.right_foot.x);
      
      head.control_mode = search_for_ball;
      motion.walk.style = (ball.distance < 500)?stable:normal;
    }
  }
  
  state sidestep_for_right_foot_kick
  {
    decision
    {
      if( abs(value = ball.preview.right_foot.x - ball.radius - 170) < 20
          && abs(value = ball.preview.right_foot.y) < 20)
      {
        goto prepare_kick;
      }
      else
        stay;
    }
    action
    {
      head.control_mode = search_for_ball;
      motion.type = walk;

      motion.walk.style = stable;
      motion.walk.coordinate = right_foot;
      motion.walk_speed.x = ball.preview.right_foot.x - ball.radius - 170;
      motion.walk_speed.y = ball.preview.right_foot.y;
      motion.walk_speed.rot = 0;

      head.control_mode = search_for_ball;
      motion.type = walk;
    }
  }

  state prepare_kick
  {
    decision
    {
      if(state_time > 2000)
      {
        if( abs(value = ball.preview.right_foot.x - ball.radius - 170) < 20
            && abs(value = ball.preview.right_foot.y) < 20)
          goto do_kick;
        else
          goto sidestep_for_right_foot_kick;
      }
      else
        stay;
    }
    action
    {
      motion.type = stand;
      head.control_mode = search_for_ball;
    }
  }


  state do_kick
  {
    decision
    {
      if(action_done)
        goto finished;
      else
        stay;
    }
    action
    {
      kick_ball_with_foot(direction = 0, right = true);
      head.control_mode = search_for_ball;
    }
  }


  target state finished
  {
    decision
    {
      stay;
    }
    action
    {
      motion.type = stand;
      head.control_mode = look_straight_ahead;
    }
  }

}