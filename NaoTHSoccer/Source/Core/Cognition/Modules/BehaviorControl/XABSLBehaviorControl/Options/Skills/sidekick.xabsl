/**
* This option performs sidekicks in attack.direction
**/

option sidekick
{
  bool @right_foot;

  common decision
  {
    if(ball.time_since_last_seen > 2500)
      goto finished;
  }
  
  initial state choose_correct_foot
  {
    decision
    {
      else if(@right_foot)
      {
        goto kick_right_foot;
      }
      else
      {
        goto kick_left_foot;
      }
    }
    action
    {
      // HACK: look at percept
      head.control_mode = none;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x;
      head.point_in_world.y = ball.percept.y;
      head.point_in_world.z = ball.radius;
    }
  }

  state kick_right_foot
  {
    decision 
    {
      // Leave immediatly if we kciked accidently against the ball
    
      // When this state is reached, right foot is moveble 
      // -> as it is moving, sidekick is done after left foot is movable again
      // wait at least 20ms as stepduration prob. will never be less 20ms -> prevents doublekicks
      else if(state_time > 20 && executed_motion.step_control.left_movable)
      {
        goto stabilize;
      }
      else
        stay;
    }
    action
    {
      motion.type = walk;
      motion.walk.style = fast;
      motion.walk.step_control.foot = right;
      motion.walk.coordinate = right_foot;
      
      motion.walk.step_control.target.x = ball.right_foot.preview.x;
      motion.walk.step_control.target.y = ball.right_foot.preview.y;
      motion.walk.step_control.target.rot = 0;
      //motion.walk.step_control.speed_direction = (attack.direction > 45)?90:45;
      motion.walk.step_control.speed_direction = clip(value=attack.direction, min=-45, max=90);
      motion.walk.step_control.time = 250;
      motion.walk.stop_with_stand = false;
      //To avoid ball leaving the image when using ball model

      // HACK: look at percept
      head.control_mode = none;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x;
      head.point_in_world.y = ball.percept.y;
      head.point_in_world.z = ball.radius;
    }
  }

  
  state kick_left_foot
  {
    decision 
    {
      //Comment see kick_right_foot above
      else if(state_time > 20 && executed_motion.step_control.right_movable)
      {
        goto stabilize;
      }
      else
        stay;
    }
    action 
    {
      motion.type = walk;
      motion.walk.style = fast;
      motion.walk.step_control.foot = left;
      motion.walk.coordinate = left_foot;
      motion.walk.step_control.target.x = ball.left_foot.preview.x;
      motion.walk.step_control.target.y = ball.left_foot.preview.y;
      motion.walk.step_control.target.rot = 0;
      //motion.walk.step_control.speed_direction = (attack.direction < -45)?-90:-45;
      motion.walk.step_control.speed_direction = clip(value=attack.direction, min=-90, max=45);
      motion.walk.step_control.time = 250;
      motion.walk.stop_with_stand = false;

      // HACK: look at percept
      head.control_mode = none;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x;
      head.point_in_world.y = ball.percept.y;
      head.point_in_world.z = ball.radius;
    }
  }

//Hack: Do not set motion.walk.step_control.foot 
//      after dribble do keep vaules in queue correct
  state stabilize
  {
    decision
    {
      else if(state_time > 10)
        goto finished;
      else
        stay;
    }
    action
    {
      motion.type = walk;
      motion.walk.style = stable;
      motion.walk.coordinate = hip;
      motion.walk_speed.x = 0;
      motion.walk_speed.y = 0;
      motion.walk_speed.rot = 0;
      motion.walk.stop_with_stand = false;
      //motion.walk.step_control.foot = none;

      // HACK: look at percept
      head.control_mode = none;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x;
      head.point_in_world.y = ball.percept.y;
      head.point_in_world.z = ball.radius;
    }
  }
    

  //target state finished
  target state finished
  {
    action
    {
      motion.type = walk;
      motion.walk.style = normal;
      motion.walk_speed.x = 0;
      motion.walk_speed.y = 0;
      motion.walk_speed.rot = 0;
      motion.walk.step_control.foot = none;
      motion.walk.coordinate = hip;
      motion.walk.stop_with_stand = false;

      // HACK: look at percept
      head.control_mode = none;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x;
      head.point_in_world.y = ball.percept.y;
      head.point_in_world.z = ball.radius;
    }
  }
    
}