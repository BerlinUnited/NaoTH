/** Side kick the ball to the right (with the left foot) in a 90 degree angle
    assumes ball is infront of hip instead of foot **/

option sidekick
{
  enum direction @to;
  
  initial state direction
  {
    decision
    {
		  if(@to == right)
		    goto sidekick_left_foot;
		  else
		    goto sidekick_right_foot;
    }
    action
    {
    }
  }

  state sidekick_left_foot
  {
    decision
    {
      if(state_time > 300 && executed_motion.step_control.right_movable)
        goto short_freeze;
      else
        stay;
    }
    action
    {
      motion.type = walk;
      
      motion.walk.coordinate = left_foot;
      motion.walk.style = fast;

      motion.walk.step_control.foot = left;
      motion.walk.step_control.target.x = 500;
      motion.walk.step_control.target.y = -100;
      motion.walk.step_control.target.rot = 0;
      motion.walk.step_control.speed_direction = -90;
      motion.walk.step_control.time = 300;


      //loook at percept
      head.control_mode = look_at_ball_percept;
    }
  }


  state sidekick_right_foot
  {
    decision
    {
      if(state_time > 300 && executed_motion.step_control.left_movable)
        goto short_freeze;
      else
        stay;
    }
    action
    {
      motion.type = walk;
      
      motion.walk.coordinate = right_foot;
      motion.walk.style = fast;

      motion.walk.step_control.foot = right;
      motion.walk.step_control.target.x = 500;
      motion.walk.step_control.target.y = 100;
      motion.walk.step_control.target.rot = 0;
      motion.walk.step_control.speed_direction = 90;
      motion.walk.step_control.time = 300;

      //look at percept
      head.control_mode = look_at_ball_percept;
    }
  }

  state short_freeze {
    decision {
      if(state_time > 500)
        goto finished;
      else 
        stay; 
    }
    action {
      motion.type = stand;
      motion.walk.stop_with_stand = false;
      
      head.control_mode = look_at_ball_percept;

      // really needed?
      motion.walk.coordinate = hip;
      motion.walk.step_control.foot = none;
    }
  
  }

  target state finished
  {
    decision
    {
      stay;
    }
    action
    {
      motion.type = stand;
    
      motion.walk.coordinate = hip;
      motion.walk.style = normal;

      //loook at percept
      head.control_mode = look_at_ball_percept;
    }
  }

}
