/**
* This is an attacking behavior. 
* It should go to the ball, and dribble or kick 
**/

option smart_attack_situation
{
  common decision
  {
    //Change angle here to influence walk against ball decision 
    if(abs(value = attack.direction) < 25 
        && (ball.preview.x > 0 && ball.preview.x < 250 && abs(value=ball.preview.y) < 40))
    {
      goto walk_against_ball;
    }
  }

 /* state stand_tester
  {
    decision
    {
      else if(state_time > 10000)
      {
        if(attack.direction < 0)
        {
          goto approach_roughly_left_foot;
	      }
	      else
	      {
	        goto approach_roughly_right_foot;
        }
      }
      else stay;
    }
    action
    {
      motion.type = stand;
    }
  }*/
  

  initial state approach_roughly
  {
    decision
    {
      /* Include kick here
      else if(action_done
              && (goal.opp.distance < 2000 
              && abs(value=attack.direction) < 60)
              || random > 0.4)
        goto omnidirectional_kick;
      }*/
      else if(ball.right_foot.preview.x < 300
              ||ball.left_foot.preview.x < 300)
      { 
	      // Ball lies good enough for sidekick with left foot
	      if (executed_motion.step_control.left_movable
	               && ball.right_foot.preview.x <= 230 
	               && ball.right_foot.preview.y >= 70
	               && ball.right_foot.preview.y <= 90)
	      {
	        goto sidekick_left;
	      }
	      // Ball lies good enough for sidekick with right foot
	      else if(executed_motion.step_control.right_movable
	              && ball.left_foot.preview.x <= 230
	              && ball.left_foot.preview.y <= -70
	              && ball.left_foot.preview.y >= -90)
	      {
	        goto sidekick_right;
	      }
        else if(attack.direction<0)
        {
          goto attack_left_foot;
        }
        else
        {
          goto attack_right_foot;
        }
      }
      else
      {
        stay;
      }
    }
    action
    {
      go_to_relative_point(rotation = (ball.distance>500?
                                          atan2(y = ball.preview.y 
                                            + sin(angle=(attack.direction < 0)?clip(value=attack.direction, min=0 ,max=90)
                                              :clip(value=attack.direction, min=-90 ,max=0))*200, 
                                              x = ball.preview.x - cos(angle=attack.direction)*200)
                                         :atan2(y = ball.preview.y, x = ball.preview.x)),
                           x = ball.preview.x
                                 - (ball.distance>500?cos(angle=attack.direction)*200:0), 
                           y = ball.preview.y
                                 - (ball.distance>500?sin(angle = (attack.direction < 0)?
                                     clip(value=attack.direction, min=-90 ,max=0)
                                     :clip(value=attack.direction, min=0 ,max=90))*200:0),
                           errorX=0, errorY=0, errorR=0);
      motion.walk.coordinate = hip;
      motion.type = walk;
      motion.walk.stop_with_stand = false;
      head.control_mode = search_for_ball;
    }
  }  

  state attack_left_foot
  {
    decision
    {
      //Ball is far away again:(
      else if(ball.right_foot.preview.x > 300
              && ball.left_foot.preview.x > 300)
      {
        goto approach_roughly;
      }
      // We decided for left foot but attack.direction changes to much due to moving ball, approach right
      else if(attack.direction > 30)
      {
        goto attack_right_foot;
      }
      // Ball lies good enough for sidekick with left foot
      else if (executed_motion.step_control.left_movable
               //&& ball.left_foot.preview.x <= 210
               && ball.right_foot.preview.x <= 230 
               && ball.right_foot.preview.y >= 70
               && ball.right_foot.preview.y <= 90)
      {
        goto sidekick_left;
      }
      // Due to mysterious reasons the ball changed in front of our right foot
      else if(executed_motion.step_control.right_movable
              && ball.left_foot.preview.x <= 230
              && ball.left_foot.preview.y <= -70
              && ball.left_foot.preview.y >= -90)
      {
        goto sidekick_right;
      }
      else
      {
        stay;
      }
    }
    action
    {
      go_to_relative_point(rotation = atan2(y = ball.right_foot.preview.y - 80, x = ball.right_foot.preview.x-190),
                           x = ball.right_foot.preview.x - 190 * cos(angle=atan2(y = ball.right_foot.preview.y-80, x = ball.right_foot.preview.x-190)),                              
                           y = ball.right_foot.preview.y - 80 * (1 + sin(angle=atan2(y = ball.right_foot.preview.y-80, x = ball.right_foot.preview.x-190))),                                
                           errorX=0, errorY=0, errorR=0);
      motion.walk.coordinate = right_foot;
      motion.type = walk;
      motion.walk.stop_with_stand = false;
      head.control_mode = search_for_ball;
    }
  }

  state attack_right_foot
  {
    decision
    {
      //Ball is far away again:(
      else if(ball.right_foot.preview.x > 300
              && ball.left_foot.preview.x > 300)
      {
        goto approach_roughly;
      }
      // We decided for right foot but attack.direction changes to much due to moving ball, approach left
      else if(attack.direction < -30)
      {
        goto attack_left_foot;
      }
      // Ball lies good enough for sidekick with left foot
      else if(executed_motion.step_control.right_movable
              //&& ball.right_foot.preview.x <= 210
              && ball.left_foot.preview.x <= 230
              && ball.left_foot.preview.y <= -70
              && ball.left_foot.preview.y >= -90)
      {
        //goto stand_tester;
        goto sidekick_right;
      }
      // Due to mysterious reasons the ball changed in front of our left foot
      else if (executed_motion.step_control.left_movable
               && ball.right_foot.preview.x <= 230 
               && ball.right_foot.preview.y >= 70
               && ball.right_foot.preview.y <= 90)
      {
        goto sidekick_left;
      }
      else
      {
        stay;
      }
    }
    action
    {
      go_to_relative_point(rotation = atan2(y = ball.left_foot.preview.y + 80, x = ball.left_foot.preview.x-190),
                           x = ball.left_foot.preview.x - 190 * cos(angle=atan2(y = ball.left_foot.preview.y+80, x = ball.left_foot.preview.x-190)),
                           y = ball.left_foot.preview.y + 80 * (1 + sin(angle=atan2(y = ball.left_foot.preview.y+80, x = ball.left_foot.preview.x-190))),                        
                           errorX=0, errorY=0, errorR=0);
      motion.walk.coordinate = left_foot;
      motion.type = walk;
      motion.walk.stop_with_stand = false;
      head.control_mode = search_for_ball;
    }
  }

  state omnidirectional_kick
  {
    decision
    {
      else if(action_done)
      {    
        // Ball lies good enough for sidekick with left foot
        if(executed_motion.step_control.right_movable
              //&& ball.right_foot.preview.x <= 210
              && ball.left_foot.preview.x <= 230
              && ball.left_foot.preview.y <= -70
              && ball.left_foot.preview.y >= -90)
        {
          goto sidekick_right;
        }
        // Ball lies good enough for sidekick with left foot
        else if (executed_motion.step_control.left_movable
               && ball.right_foot.preview.x <= 230 
               && ball.right_foot.preview.y >= 70
               && ball.right_foot.preview.y <= 90)
        {
          goto sidekick_left;
        }
        else if(ball.right_foot.preview.x < 300
              || ball.left_foot.preview.x < 300)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else
      {
        stay;
      }
    }
    action
    {
      perform_omnidirectional_kick();
    }
  }

  state walk_against_ball
  {
    decision {
      // state_time as backup
      // use percept for y for quick abortion 
      else if (state_time > 1000 
                || abs(value = attack.direction) > 25
                || ball.preview.x < 0
                || ball.preview.x > 250
                || abs(value=ball.percept.y) > 40)
      { 
        // Ball lies good enough for sidekick with left foot
        if(executed_motion.step_control.right_movable
              //&& ball.right_foot.preview.x <= 210
              && ball.left_foot.preview.x <= 230
              && ball.left_foot.preview.y <= -70
              && ball.left_foot.preview.y >= -90)
        {
          goto sidekick_right;
        }
        // Ball lies good enough for sidekick with left foot
        else if (executed_motion.step_control.left_movable
               && ball.right_foot.preview.x <= 230 
               && ball.right_foot.preview.y >= 70
               && ball.right_foot.preview.y <= 90)
        {
          goto sidekick_left;
        }
        else if(ball.right_foot.preview.x < 300
              || ball.left_foot.preview.x < 300)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else
      {
        stay;
      }
    }
    action {
      motion.type = walk;
      motion.walk_speed.x = ball.preview.x + 100;
      motion.walk_speed.y = ball.preview.y;
      motion.walk_speed.rot = ball.angle;
      motion.walk.coordinate = hip;
      motion.walk.style = fast;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x;
      head.point_in_world.y = ball.percept.y;
      head.point_in_world.z = ball.radius;
    }
  }

  state sidekick_right
  {
    decision
    {
      else if(action_done)
      { 
        // Ball lies good enough for sidekick with left foot
        if(executed_motion.step_control.right_movable
              //&& ball.right_foot.preview.x <= 210
              && ball.left_foot.preview.x <= 230
              && ball.left_foot.preview.y <= -70
              && ball.left_foot.preview.y >= -90)
        {
          goto sidekick_right;
        }
        // Ball lies good enough for sidekick with left foot
        else if (executed_motion.step_control.left_movable
               && ball.right_foot.preview.x <= 230 
               && ball.right_foot.preview.y >= 70
               && ball.right_foot.preview.y <= 90)
        {
          goto sidekick_left;
        }
        else if(ball.right_foot.preview.x < 300
              ||ball.left_foot.preview.x < 300)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else
      {
        stay;
      }
    }
    action
    {
      sidekick(right_foot=true);
    }
  }

  state sidekick_left
  {
    decision
    {
      else if(action_done)
      { 
        // Ball lies good enough for sidekick with left foot
        if(executed_motion.step_control.right_movable
              //&& ball.right_foot.preview.x <= 210
              && ball.left_foot.preview.x <= 230
              && ball.left_foot.preview.y <= -70
              && ball.left_foot.preview.y >= -90)
        {
          goto sidekick_right;
        }
        // Ball lies good enough for sidekick with left foot
        else if (executed_motion.step_control.left_movable
               && ball.right_foot.preview.x <= 230 
               && ball.right_foot.preview.y >= 70
               && ball.right_foot.preview.y <= 90)
        {
          goto sidekick_left;
        }
        else if(ball.right_foot.preview.x < 300
              ||ball.left_foot.preview.x < 300)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else
      {
        stay;
      }
    }
    action
    {
      sidekick(right_foot=false);
    }
  }
}