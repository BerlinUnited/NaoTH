/**
* This is an attacking behavior. 
* It should go to the ball, and dribble or kick 
**/

option smart_attack_situation
{
  common decision
  {
    //Does this influence the omnidirectional kick state?
    //Change angle here (and in walk_against_ball) to influence walk against ball decision 
    if(abs(value = attack.direction) < 25
        && (ball.preview.x > 0 && ball.preview.x < 250 && abs(value=ball.preview.y) < 40))
    {
      goto walk_against_ball;
    }
  }

  state validate_field_position
  {
    decision
    {
      // if not localized turn around ball
      else if (state_time > 3000)
      {
        goto turn_around_ball;
      }
      // if position is verified, go on
      else if(goal.opp.time_since_seen < 3000 || goal.own.time_since_seen < 3000) //|| robot_pose.is_valid)
      {
        // Ball lies good enough for sidekick with left foot
        if(executed_motion.step_control.left_movable
           && abs(value=(atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x))) < 15        
           && ball.right_foot.preview.x <= 200 
           && ball.right_foot.preview.y >= 90
           && ball.right_foot.preview.y <= 110)
        {
          goto sidekick_left;
        }
        // Ball lies good enough for sidekick with left foot
        else if(executed_motion.step_control.right_movable
              && abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.left_foot.preview.x <= 200
              && ball.left_foot.preview.y <= -90
              && ball.left_foot.preview.y >= -110)
        {
          goto sidekick_right;
        }
        else if(ball.right_foot.preview.x < 500
              ||ball.left_foot.preview.x < 500)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else
      {
        stay;
      }
    }
    action
    {
      head.control_mode = search_for_goal;
      motion.type = walk;
      motion.walk_speed.x = 0;
      motion.walk_speed.y = 0;
      motion.walk_speed.rot = 0;
    }
  }

  state turn_around_ball
  {
    decision
    {
      else if (state_time > 2000)
      { 
        goto validate_field_position;
      }
      else
      {
        stay;
      }
    }
    action {
      turn_around_ball_face_goal();
      motion.type = walk;
      motion.walk.stop_with_stand = false;
    }
  }

  state stand_tester
  {
    decision
    {
      else if(state_time > 10000)
      {
        if(ball.right_foot.preview.x < 300
              ||ball.left_foot.preview.x < 300)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else stay;
    }
    action
    {
      motion.type = stand;
    }
  }
  

  initial state approach_roughly
  {
    decision
    {
      // We Mmight be delocalized
      else if(goal.opp.time_since_seen > 30000) //|| robot_pose.is_valid) xxx
      {
        goto validate_field_position;
      } 
      /* Include kick here
      else if(action_done
              && (goal.opp.distance < 2000 
              && abs(value=attack.direction) < 60)
              || random > 0.4)
        goto omnidirectional_kick;
      }*/
      else if(ball.right_foot.preview.x < 500
              ||ball.left_foot.preview.x < 500)
      { 
	      // Ball lies good enough for sidekick with left foot
	      if (executed_motion.step_control.left_movable
               && abs(value=(atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x))) < 15        
               && ball.right_foot.preview.x <= 200 
               && ball.right_foot.preview.y >= 90
               && ball.right_foot.preview.y <= 110)
	      {
	        goto sidekick_left;
	      }
	      // Ball lies good enough for sidekick with right foot
        // Todo: Adjust parameters here
	      else if(executed_motion.step_control.right_movable
              && abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.left_foot.preview.x <= 200
              && ball.left_foot.preview.y <= -90
              && ball.left_foot.preview.y >= -110)
        {
          goto sidekick_right;
        }
        else if(attack.direction<0)
        {
          goto attack_left_foot;
        }
        else
        {
          goto attack_right_foot;
        }
      }
      else
      {
        stay;
      }
    }
    action
    {
      go_to_relative_point(rotation = (ball.distance>500?
                                          atan2(y = ball.preview.y 
                                            + sin(angle=(attack.direction < 0)?clip(value=attack.direction, min=0 ,max=90)
                                              :clip(value=attack.direction, min=-90 ,max=0))*200, 
                                              x = ball.preview.x - cos(angle=attack.direction)*200)
                                         :atan2(y = ball.preview.y, x = ball.preview.x)),
                           x = ball.preview.x
                                 - (ball.distance>500?cos(angle=attack.direction)*200:0), 
                           y = ball.preview.y
                                 - (ball.distance>500?sin(angle = (attack.direction < 0)?
                                     clip(value=attack.direction, min=-90 ,max=0)
                                     :clip(value=attack.direction, min=0 ,max=90))*200:0),
                           errorX=0, errorY=0, errorR=0);
      motion.walk.coordinate = hip;
      motion.type = walk;
      motion.walk.stop_with_stand = false;
      head.control_mode = search_for_ball;
    }
  }  

  state attack_left_foot
  {
    decision
    {
      //Ball is far away again:(
      else if(ball.right_foot.preview.x > 600
              && ball.left_foot.preview.x > 600)
      {
        goto approach_roughly;
      }
      // We decided for left foot but attack.direction changes to much due to moving ball, approach right
      else if(attack.direction > 30)
      {
        goto attack_right_foot;
      }
      // Ball lies good enough for sidekick with left foot
      else if (executed_motion.step_control.left_movable
               && abs(value=(atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x))) < 15        
               && ball.right_foot.preview.x <= 200 
               && ball.right_foot.preview.y >= 95
               && ball.right_foot.preview.y <= 105)
      {
        //goto stand_tester;
        goto sidekick_left;
      }
      // Due to mysterious reasons the ball changed in front of our right foot
      else if(executed_motion.step_control.right_movable
              && abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.left_foot.preview.x <= 200
              && ball.left_foot.preview.y <= -90
              && ball.left_foot.preview.y >= -110)
      {
        goto sidekick_right;
      }
      else
      {
        stay;
      }
    }
    action
    {
      go_to_relative_point(rotation = atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x),
                           x = clip(value=ball.right_foot.preview.x - 190 * cos(angle=atan2(y = ball.right_foot.preview.y-100, x = ball.right_foot.preview.x-190)),
                                 max=ball.right_foot.preview.x-170, min=ball.right_foot.preview.x-190),                              
                           y = ball.right_foot.preview.y - 100 * (1 + sin(angle=atan2(y = ball.right_foot.preview.y-100, x = ball.right_foot.preview.x-190))),                                
                           errorX=0, errorY=0, errorR=0);
      motion.walk.coordinate = right_foot;
      motion.type = walk;
      motion.walk.stop_with_stand = false;
      head.control_mode = search_for_ball;
    }
  }

  state attack_right_foot
  {
    decision
    {
      //Ball is far away again:(
      else if(ball.right_foot.preview.x > 600
              && ball.left_foot.preview.x > 600)
      {
        goto approach_roughly;
      }
      // We decided for right foot but attack.direction changes to much due to moving ball, approach left
      else if(attack.direction < -30)
      {
        goto attack_left_foot;
      }
      // Ball lies good enough for sidekick with right foot
      else if(executed_motion.step_control.right_movable
              && abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.left_foot.preview.x <= 200
              && ball.left_foot.preview.y <= -90
              && ball.left_foot.preview.y >= -110)
      {
        goto sidekick_right;
      }
      // Due to mysterious reasons the ball changed in front of our left foot
      else if (executed_motion.step_control.left_movable
               && abs(value=(atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x))) < 15        
               && ball.right_foot.preview.x <= 200 
               && ball.right_foot.preview.y >= 90
               && ball.right_foot.preview.y <= 110)
      {
        goto sidekick_left;
      }
      else
      {
        stay;
      }
    }
    action
    {
      go_to_relative_point(rotation = atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x),
                           x = clip(value=ball.left_foot.preview.x - 190 * cos(angle=atan2(y = ball.left_foot.preview.y+100, x = ball.left_foot.preview.x-190)),
                                 max=ball.left_foot.preview.x-170, min=ball.left_foot.preview.x-190), 
                           y = ball.left_foot.preview.y + 100 * (1 + sin(angle=atan2(y = ball.left_foot.preview.y+100, x = ball.left_foot.preview.x-190))),                        
                           errorX=0, errorY=0, errorR=0);
      motion.walk.coordinate = left_foot;
      motion.type = walk;
      motion.walk.stop_with_stand = false;
      head.control_mode = search_for_ball;
    }
  }

  state omnidirectional_kick
  {
    decision
    {
      else if(action_done)
      {    
        // Ball lies good enough for sidekick with left foot
        if(executed_motion.step_control.left_movable
           && abs(value=(atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x))) < 15        
           && ball.right_foot.preview.x <= 200 
           && ball.right_foot.preview.y >= 90
           && ball.right_foot.preview.y <= 110)
        {
          goto sidekick_left;
        }
        // Ball lies good enough for sidekick with right foot
        else if(executed_motion.step_control.right_movable
              && abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.left_foot.preview.x <= 200
              && ball.left_foot.preview.y <= -90
              && ball.left_foot.preview.y >= -110)
        {
          goto sidekick_right;
        }
        else if(ball.right_foot.preview.x < 500
              || ball.left_foot.preview.x < 500)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else
      {
        stay;
      }
    }
    action
    {
      situation.abortable = false;
      perform_omnidirectional_kick();
    }
  }

  state walk_against_ball
  {
    decision {
      // state_time as backup
      // use percept for y for quick abortion 
      else if (//state_time > 1000 
                //|| 
                abs(value = attack.direction) > 25
                || ball.preview.x < 0
                || ball.preview.x > 250
                || abs(value=ball.percept.y) > 40)
      { 
        // Ball lies good enough for sidekick with left foot
        if(executed_motion.step_control.left_movable
           && abs(value=(atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x))) < 15        
           && ball.right_foot.preview.x <= 200 
           && ball.right_foot.preview.y >= 90
           && ball.right_foot.preview.y <= 110)
        {
          goto sidekick_left;
        }
        // Ball lies good enough for sidekick with right foot
        else if(executed_motion.step_control.right_movable
              && abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.left_foot.preview.x <= 200
              && ball.left_foot.preview.y <= -90
              && ball.left_foot.preview.y >= -110)
        {
          goto sidekick_right;
        }
        else if(ball.right_foot.preview.x < 500
              || ball.left_foot.preview.x < 500)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else
      {
        stay;
      }
    }
    action {
      motion.type = walk;
      motion.walk_speed.x = ball.preview.x + 100;
      motion.walk_speed.y = ball.preview.y;
      motion.walk_speed.rot = ball.angle;
      motion.walk.coordinate = hip;
      motion.walk.style = fast;
      head.motion_type = look_at_world_point;
      head.point_in_world.x = ball.percept.x;
      head.point_in_world.y = ball.percept.y;
      head.point_in_world.z = ball.radius;
    }
  }

  state sidekick_right
  {
    decision
    {
      else if(action_done)
      { 
        // Ball lies good enough for sidekick with left foot
        if(executed_motion.step_control.left_movable
           && abs(value=(atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x))) < 15        
           && ball.right_foot.preview.x <= 200 
           && ball.right_foot.preview.y >= 90
           && ball.right_foot.preview.y <= 110)
        {
          goto sidekick_left;
        }
        // Ball lies good enough for sidekick with right foot
        else if(executed_motion.step_control.right_movable
              && abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.left_foot.preview.x <= 200
              && ball.left_foot.preview.y <= -90
              && ball.left_foot.preview.y >= -110)
        {
          goto sidekick_right;
        }
        else if(ball.right_foot.preview.x < 500
              ||ball.left_foot.preview.x < 500)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else
      {
        stay;
      }
    }
    action
    {
      sidekick(right_foot=true);
    }
  }

  state sidekick_left
  {
    decision
    {
      else if(action_done)
      { 
        // Ball lies good enough for sidekick with left foot
        if(executed_motion.step_control.left_movable
           && abs(value=(atan2(y = ball.left_foot.preview.y, x = ball.left_foot.preview.x))) < 15        
           && ball.right_foot.preview.x <= 200 
           && ball.right_foot.preview.y >= 90
           && ball.right_foot.preview.y <= 110)
        {
          goto sidekick_left;
        }
        // Ball lies good enough for sidekick with left foot
        else if(executed_motion.step_control.right_movable
              && abs(value=(atan2(y = ball.right_foot.preview.y, x = ball.right_foot.preview.x))) < 15
              && ball.left_foot.preview.x <= 200
              && ball.left_foot.preview.y <= -90
              && ball.left_foot.preview.y >= -110)
        {
          goto sidekick_right;
        }
        else if(ball.right_foot.preview.x < 500
              ||ball.left_foot.preview.x < 500)
        {
          if(attack.direction<0)
          {
            goto attack_left_foot;
          }
          else
          {
            goto attack_right_foot;
          }
        }
        //Ball is far away again:(
        else
        {
          goto approach_roughly;
        }
      }
      else
      {
        stay;
      }
    }
    action
    {
      sidekick(right_foot=false);
    }
  }
}