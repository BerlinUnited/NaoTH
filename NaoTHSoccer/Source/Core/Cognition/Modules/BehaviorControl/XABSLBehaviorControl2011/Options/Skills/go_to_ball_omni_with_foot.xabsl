/** Goto ball omnidirectional */
option go_to_ball_omni_with_foot
{
  /**  */
  bool @right_foot;
  /**  */
  float @distance [mm];
  /**  */
  float @offset [mm];

  target state stand
  {
    decision
    {
      if ( abs(value=(@right_foot ? ball.right_foot.x : ball.left_foot.x) - @distance) > 30
        || abs(value=(@right_foot ? ball.right_foot.y : ball.left_foot.y) + @offset) > 30
        || abs(value=(@right_foot ? atan2(y = ball.right_foot.y, x = ball.right_foot.x)
                                  : atan2(y = ball.left_foot.y, x = ball.left_foot.x))) > 10
                                  )
                          
      {
        if (@right_foot)
          goto go_to_ball_right_foot;
        else
          goto go_to_ball_left_foot;
      }
      else
        stay;
    }
    action
    {
      motion.type = stand;
      head.control_mode = search_for_ball;
    }
  }

  initial state go_to_ball_left_foot {
    decision{
      if (@right_foot)
        goto go_to_ball_right_foot;
      else if (abs(value = ball.left_foot.x - @distance) < 15
            && abs(value = ball.left_foot.y + @offset) < 15
            && abs(value = atan2(y = ball.left_foot.y, x = ball.left_foot.x)) < 5 )
        goto stand;
      else
        stay;
    }
    action{
      motion.type = walk;
      motion.walk_speed.x = ball.left_foot.x - @distance;
      motion.walk_speed.y = ball.left_foot.y + @offset;
      motion.walk_speed.rot = atan2(y = ball.left_foot.y, x = ball.left_foot.x);
      motion.walk.coordinate = left_foot;
      motion.walk.stop_with_stand = true;
      
      head.control_mode = search_for_ball;
    }
  }

  state go_to_ball_right_foot {
    decision{
      if (!@right_foot)
        goto go_to_ball_left_foot;
      else if (abs(value=ball.right_foot.x - @distance) < 15
            && abs(value=ball.right_foot.y + @offset) < 15
            && abs(value=atan2(y = ball.right_foot.y, x = ball.right_foot.x)) < 5)
        goto stand;
      else
        stay;
    }
    action{
      motion.type = walk;
      motion.walk_speed.x = ball.right_foot.x - @distance;
      motion.walk_speed.y = ball.right_foot.y + @offset;
      motion.walk_speed.rot = atan2(y = ball.right_foot.y, x = ball.right_foot.x);
      motion.walk.coordinate = right_foot;
      motion.walk.stop_with_stand = true;
      
      head.control_mode = search_for_ball;
    }
  }
}
