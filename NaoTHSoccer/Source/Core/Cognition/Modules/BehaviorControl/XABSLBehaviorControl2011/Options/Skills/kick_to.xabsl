/** kick ball to a given direction in field coordination */
option kick_to {

  /** the min angle in kicking range */
  float @ang_right; // [-180..180] "deg";
  
  /** the min angle in kicking range */
  float @ang_left; // [-180..180] "deg";

  initial state ball_far_away {
    decision {
      if ( abs(value=ball.y) < 150 && ball.x < (180+ball.radius)+10 && ball.x > ball.radius )
        goto position_near_ball;
      else
        stay;
    }
    action {
      go_to_ball_cool(distance = (180+ball.radius), right_foot=attack.approaching_with_right_foot);
      //ball_far_away_situation(dist = (180+ball.radius));
    }
  }
  
  state position_near_ball {
    decision {
      if ( abs(value=ball.y) > 200 || ball.x > (180+ball.radius)+20 || ball.x < ball.radius )
        goto ball_far_away;
      else if ( robot_pose.rotation > @ang_right && robot_pose.rotation < @ang_left )
        goto kick_possible;
      else
        stay;
    }
    action 
    {
      position_near_ball();
    }
  }

  target state kick_possible {
    decision {
      if ( abs(value=ball.y) > 200 || ball.x > (180+ball.radius)+20 || ball.x < ball.radius )
        goto ball_far_away;
      else if ( robot_pose.rotation < @ang_right
            || robot_pose.rotation > @ang_left )
        goto position_near_ball;
      else
        stay;
    }
    action {
      kick_ball(direction=0 /*goal.opp.angle*/ );
    }
  }
}
