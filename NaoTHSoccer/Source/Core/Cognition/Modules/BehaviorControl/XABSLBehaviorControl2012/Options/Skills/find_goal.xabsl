option find_goal
{

  initial state stand_initial
  {
    decision
    {
      if(state_time > 1500)
      {
        if(!goal.opp.was_seen && !goal.own.was_seen
           || min(value0=abs(value=goal.opp.angle), value1=abs(value=goal.own.angle)) > 15)
          goto turn;
        else
          goto stand_finished;
      }
      else
        stay;
    }
    action
    {
      motion.type = stand;
      head.control_mode = search_for_goal;
    }
  }

  target state stand_finished
  {
    decision
    {
      if(min(value0=abs(value=goal.opp.angle), value1=abs(value=goal.own.angle)) > 15)
        goto turn;
      else
        stay;
    }
    action
    {
      motion.type = stand;
      head.control_mode = search_for_goal;
    }
  }

  state turn {
    decision {
      if(min(value0=abs(value=goal.opp.angle), value1=abs(value=goal.own.angle)) < 10)
        goto stand_finished;
      else
        stay;
    }
    action {
      motion.type = walk;
      motion.walk_speed.rot = min(value0=abs(value=goal.opp.angle), value1=abs(value=goal.own.angle));
      motion.walk_speed.x = 0;
      motion.walk_speed.y = 0;
      motion.walk.coordinate = hip;
      motion.walk.stop_with_stand = true;
      head.control_mode = search_for_goal;
    }  
  }


}