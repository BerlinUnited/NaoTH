/** Playing as striker */
option spl_playing_striker {

  /* choose behavior by situation*/
  common decision
  {
    /** only if situation allows to change the behavior */
    if(situation.abortable)
    {
      if(ball.time_since_last_seen > 4000)
	    {
	      goto ball_not_seen;
	    }
      else if(ball.distance > 1000)
      {
        goto ball_far_away;
      }
      else if(false && robot_pose.x > 0
              //Functions define a line from goalpost to sideline
              //crosses sideline at level of cross-mark
              && ((13/18)*robot_pose.x-(8600/3) > robot_pose.y
                ||(-13/18)*robot_pose.x+(8600/3) < robot_pose.y))
      {
        goto close_to_goal_corner;
      }
      else if(abs(value = attack.direction)>90)
      {
        goto between_goal_and_ball;
      }
      /*else if(obstacle.ultrasound.distance < 400 
        && ball.distance < 400
        && goal.opp.distance > 1500)
      {
        goto attack_ball_with_obstacle_close;
      }*/ 

      else
      {
        goto smart_attack;
      }
    }
    // else stay;
  }
  
 initial state ball_not_seen {
    action 
    {
      team.is_playing_as_striker = false;
      situation.abortable = true;
      ball_not_seen_situation();
    }
  }

  state between_goal_and_ball {
    action
    {
      situation.abortable = true;
      between_goal_and_ball_situation();
    }
  }

  state smart_attack {
    action 
    {
      situation.abortable = true;
      smart_attack_situation();
    }
  }

  state close_to_goal_corner {
    action
    {
      situation.abortable = true;
      close_to_goal_corner_situation();
    }
  }
  
  state ball_far_away {
    action 
    {
      situation.abortable = true;
      ball_far_away_situation();
      motion.walk.style = fast;
    }
  }

  /*state attack_ball_with_obstacle_close
  {
    action 
    {
      situation.abortable = true;
      attack_ball_with_obstacle_close_situation();
      motion.walk.style = fast;
    }
  }*/
}