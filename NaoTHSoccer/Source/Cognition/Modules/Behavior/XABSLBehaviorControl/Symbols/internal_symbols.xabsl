/* Symbols for internal communication between states or options */
namespace internal_symbols("Internal Symbols") {

  /* game_symbols */
  enum game.internal_mode internal 
  {
    init,
    ready,
    set,
    playing,
    penalized,
    finished,
    unknown
  };
  
  enum game.internal_mode internal game.current_mode;
  
  enum game.internal_mode internal game.last_mode;

  
  /* */
  bool internal last_state_was_penalized;

  
  /* motion_symbols */

  /** The head motion control modes. This specifies how behavior should be moving the head. */
  enum head.control_mode internal 
  {
    none,
    stay_as_forced,
    look_straight_ahead,
    look_at_ball,
    search_for_ball,
    search_for_ball_goalie,
    search_for_goal,
    search_for_goal_opp,
    look_around,
    look_at_ball_percept,
    search_for_ball_and_look_around
  };

  enum head.control_mode internal head.control_mode;


  enum arm.control_mode internal 
  {
    normal,
    back
  };

  enum arm.control_mode internal arm.control_mode;
  // needed by the get up motion
  enum arm.control_mode internal arm.control_mode_before_fall;
  

  bool internal body.ready_to_walk;

  /* strategy symbols*/

  /** remembers the dircetion for turning for search (@see search_ball)*/
  float internal search_ball.search_direction;
  /** remembers the numbers of turns while search (@see search_ball)*/
  float internal search_ball.turns_for_searching;

  /* Kick symbols */
  
  /** this is used by the situation_based_striker, don't use itanywhere else*/
  bool internal situation_abortable;
}
