/* Symbols for internal communication between states or options */
namespace internal_symbols("Internal Symbols") {

  /* game_symbols */
  enum game.internal_mode internal 
  {
    init,
    ready,
    set,
    playing,
    penalized,
    finished,
    unknown
  };
  
  /** state of the game */
  enum game.internal_mode internal game.current_mode;

  // not calculated yet
  //enum game.internal_mode internal game.last_mode;

  // todo: replace with game.last_mode
  bool internal last_state_was_penalized;

  /** state of the body: false when lifted, or fallen */
  bool internal body.ready_to_walk;


  /** This is used to indicate not interruptable states */
  bool internal situation_abortable;

  
  /* motion control symbols */

  /** The head motion control modes. This specifies how behavior should be moving the head. */
  enum head.control_mode internal 
  {
    none,
    stay_as_forced,
    look_straight_ahead,
    look_at_ball,
    search_for_ball,
    search_for_ball_goalie,
    look_around,
    search_for_goal,
    search_for_goal_opp,
    look_at_ball_percept,
    search_for_ball_and_look_around,
    look_at_team_ball
  };

  enum head.control_mode internal head.control_mode;


  enum arm.control_mode internal 
  {
    normal,
    back,
    synchronised_with_walk
  };

  enum arm.control_mode internal arm.control_mode;
  // needed by the get up motion
  enum arm.control_mode internal arm.control_mode_before_fall;

  /** Counts the state changes turn/look in passive_ball_not_seen */
  float internal search_ball.turn_stop_motion_count;

  /** the time we are in play-state in ms*/
  float internal game.time_in_play;  
}
