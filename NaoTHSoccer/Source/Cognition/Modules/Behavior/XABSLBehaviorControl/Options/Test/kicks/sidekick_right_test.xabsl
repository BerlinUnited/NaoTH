option sidekick_right_test 
{

  common decision
  {
    if(!body.ready_to_walk || game.current_mode != playing)
      goto idle;
    else if(situation_abortable && ball.time_since_last_seen > 1500)
      goto search;
    else if(situation_abortable && vector.abs(x=ball.preview.x, y=ball.preview.y) > 300)
      goto approach_sidekick_to_right;
  }

  initial state idle {
    decision {
      else
        goto search;
    }
    action {
      situation_abortable = true;
    }
  }

  state search {
    decision {
      else if(action_done)
        goto approach_sidekick_to_right;
      else
        stay;
    }
    action{
      situation_abortable = true;
      search_ball();
    }
  }

  state goto_ball {
    decision{

      else if(action_done && state_time > 1000)
      {
	      goto approach_sidekick_to_right;
      }
      else
        stay;
    }
    action{
      situation_abortable = true;
      go_to_ball_with_USOA(distance = 190);
    }
  }
	state approach_sidekick_to_right {
    decision {
      else if(action_done)
        goto sidekick_to_right;
      else
        stay;
    }
    action {
      //go_to_ball_with_foot(right = false, distance = 130, offset.y=-20);
      go_to_ball_with_foot_dynamic(right = false, distance = 130, offset.y=-20);
    }
  }

  state sidekick_to_right{
    decision {
      else if(action_done)
        goto done;
      else
        stay;
    }
    action {
      situation_abortable = false;
      sidekick(to = right);
    }
  }

  target state done
  {
    decision {
    else if(button.head.pressed.front)
      goto idle;
      else
        stay;
    }
    action {
      //NOTE: this is synchronized with sidekick()->finished
      motion.type = stand;
    
      motion.walk.stop_with_stand = true;

      motion.walk.coordinate = hip;
      motion.walk.style = normal;

      //loook at percept
      head.control_mode = look_at_ball_percept;
    }
  }
}
