/**
This file should become the central place to handle collisions
for all kinds of different types of collision. For now there will
only be the Bumper collision handling. Planning on moving
arm collision handling from arms_control into here (good idea?)
*/
option bumper_collision_stop
{
common decision {
  if (!body.ready_to_walk || game.current_mode != playing)
    goto idle;
}

initial state idle{
  decision 
  {
    else
      goto forward;
  }
  action{}
}

state forward{
  decision
    {
      else if(state_time > 20000 || (motion.collision.timeSinceCollisionBumperLeft <= 1 &&
              motion.collision.timeSinceCollisionBumperRight <= 1)){
       goto stand;
      } 
      else if(motion.collision.timeSinceCollisionBumperLeft <= 1){
        goto avoid_right;
      }
      else if(motion.collision.timeSinceCollisionBumperRight <= 1){
        goto avoid_left;
      }
      else {
       stay;
      }
    }
    action
    {
      head.control_mode = look_straight_ahead;
    
      motion.type = walk;
      motion.walk_speed.x = 100;
      motion.walk.style = stable;
    }
  }

state stand{
  decision{
      else {
        stay;
      }
    }
    action
    {
      head.control_mode = look_straight_ahead;

      motion.type = stand;
    }  
  }

state avoid_left
  {
    decision
    { 
      else if(state_time < 1000)
        stay;
      else
        goto stand;
    }
    action 
    {
      head.control_mode = search_for_ball;
      
      motion.type = walk;
      motion.walk.coordinate = hip;
      motion.walk.style = normal;

      motion.walk_speed.x = 0;
      motion.walk_speed.y = -100;
      motion.walk_speed.rot = (vector.abs(x=ball.preview.x, y=ball.preview.y) > 250) ? atan2(y = ball.preview.y, x = ball.preview.x) : 0;

      arm.control_mode = back;
    }
  }


  state avoid_right
  {
    decision
    { 
      else if(state_time < 1000)
        stay;
      else
        goto stand;
    }
    action 
    {
      head.control_mode = search_for_ball;
      
      motion.type = walk;
      motion.walk.coordinate = hip;
      motion.walk.style = normal;

      motion.walk_speed.x = 0;
      motion.walk_speed.y = 100;
      motion.walk_speed.rot = (vector.abs(x=ball.preview.x, y=ball.preview.y) > 250) ? atan2(y = ball.preview.y, x = ball.preview.x) : 0;

      arm.control_mode = back;
    }
  }


}