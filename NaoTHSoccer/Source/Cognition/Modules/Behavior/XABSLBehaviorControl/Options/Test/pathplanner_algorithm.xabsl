option pathplanner_algorithm
{
  common decision
  {
    if(!body.ready_to_walk || game.current_mode != playing)
      goto idle;
  }

  initial state idle {
    decision {
      else
        goto wait;
    }
    action {
    }
  }

  state wait {
    decision {
      else if(state_time > 2000)
        goto goto_ball;
      else
        stay;
    }
    action{
      motion.type = stand;
      path.routine = none;
      head.control_mode = search_for_ball_goalie;
    }
  }


  state goto_ball {
    decision {

      else if(//action_done && state_time > 1000 &&
         ball.preview.x < 300 && abs(value = ball.preview.y) < 50)// && vector.abs(x=ball.speed.x, y=ball.speed.y) < 150)
      {
          goto finish;
      }
      else
        stay;
    }
    action{
      /* this distance is smaller than the condition for ball.preview.x above
         possible unwanted behavior: the ball is closer than 250 but ball.preview.y is
         bigger than 50. The robot won't rotate in go_to_ball_with_USOA and will continue
         to walk to the position of the ball. Two possible outcomes:
         1. the robot runs into the ball (if ball distance is not considered)
         2. the robot will walk backwards in the successive approaching because it was too close*/
      path_go_to_ball_with_USOA(distance = 190); 
      head.control_mode = search_for_ball_goalie;
    }
  }
  state finish {
    decision {
      else
        stay;
    }
    action{
      motion.type = stand;
      path.routine = none;
      head.control_mode = search_for_ball_goalie;
    }
  }
}