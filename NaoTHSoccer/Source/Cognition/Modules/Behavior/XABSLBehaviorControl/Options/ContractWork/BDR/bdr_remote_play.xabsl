option bdr_remote_play
{
  common decision
  {
    if(!body.ready_to_walk || game.current_mode != playing)
        goto idle;
  }
  
  initial state idle{
    decision{
      else
        goto transition;
    } 
    action{}
  }

  state do_nothing
  {
    decision
    {
      else if(remote_control.bdr_control != DO_NOTHING)
        goto transition;
      else
        stay;
    }
    action
    {
      motion.type = stand;    
      motion.walk.stop_with_stand=true;        
      head.control_mode = search_for_ball_and_look_around;
    }
  }

  state autonomous_play
  {
    decision
    {
      else if(remote_control.bdr_control != AUTONOMOUS_PLAY)
        goto transition;
      else
        stay;
    }
    action
    {
        bdr_remote_autonomous();
    }
  }

  state wartung
  {
    decision
    {
      else if(remote_control.bdr_control != WARTUNG)
        goto transition;
      else
        stay;
    }
    action
    {
        bdr_goto_charging_station();
        //bdr_goto_exit();
    }
  }

  state transition
  {
      decision
      {
          else if(executed_motion.type == stand
                  || state_time > 1000)
          {
            if(remote_control.bdr_control == DO_NOTHING)
                goto do_nothing;
            else if(remote_control.bdr_control == AUTONOMOUS_PLAY)
                goto autonomous_play;
            else if(remote_control.bdr_control == WARTUNG)
                goto wartung;
            else
                stay;
          }
          else 
              stay;
      }

      action
      {
        motion.type = stand;
    
        motion.walk.stop_with_stand=false;
        
        head.control_mode = none;
        head.point_in_world.x = 200;
        head.point_in_world.y = 0;
        head.point_in_world.z = 0;
        head.motion_type = look_at_world_point;
      }
  }
}