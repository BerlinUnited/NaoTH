option bdr_striker
{
    common decision
    {
      if(situation_abortable && !ball.know_where_itis)
        goto search;
      else if(situation_abortable && !ball.inOwnHalf)
        goto search;
    }

    initial target state search {
        decision 
        {
            else if(ball.know_where_itis && ball.inOwnHalf && state_time > 1500)
              goto goto_ball;
            else if(ball.know_where_itis && abs(value=atan2(y = ball.preview.y, x = ball.preview.x)) > 50)
              goto turn_to_ball;
            else 
              stay;
        }

        action {
            situation_abortable = true;
            head.control_mode = search_for_ball;
            motion.type = stand;
        }
    }

    state turn_to_ball {
        decision 
        {
            else if(abs(value=atan2(y = ball.preview.y, x = ball.preview.x)) < 30 || state_time > 1500)
              goto search;
            else 
              stay;
        }

        action {
            situation_abortable = true;
            head.control_mode = search_for_ball;
      
            motion.type = walk;
            motion.walk.style = stable;
            motion.walk_speed.x = 0; // mm
            motion.walk_speed.y = 0; // mm
            motion.walk_speed.rot = atan2(y = ball.preview.y, x = ball.preview.x); //deg
        }
    }

    state goto_ball {
        decision {
            else if (!action_done)
              stay;
            else if (attack.best_action == sidekick_left)
              goto sidekick_left;
            else if(attack.best_action == sidekick_right)
              goto sidekick_right;
            else
              goto short_kick;
        }

        action {
            situation_abortable = true;
            go_to_ball(distance = 140);
        }
    }

    state sidekick_left {
	    decision {
	      else if(action_done)
	        goto search;
	      else
	        stay;
	    }
	    action {
	      situation_abortable = true;
	      path_sidekick_left();
	    }
	  }
	  state sidekick_right {
	    decision {
	      else if(action_done)
	        goto search;
	      else
	        stay;
	    }
	    action {
	      situation_abortable = true;
	      path_sidekick_right();
	    }
	  }


    state short_kick {
      decision {
            else if (action_done)
                goto search;
            else
                stay;
        }
        action {
            situation_abortable = true;
            path_kick_short_with_approach();
        }
    }
}