option situation_sidekick
{
  initial state decide
  {
    decision {
      if(attack.direction.preview > 0)
        goto approach_sidekick_to_left;
      else
        goto approach_sidekick_to_right;
    }
    action {
    }
  }

  state approach_sidekick_to_left {
    decision {
      if(action_done)
        goto sidekick_to_left;
      else
        stay;
    }
    action {
      //go_to_ball_with_foot(right = true, distance = 130, offset.y=-10);
      go_to_ball_with_foot_dynamic(right = true, distance = 130, offset.y=-10);
    }
  }

  state approach_sidekick_to_right {
    decision {
      if(action_done)
        goto sidekick_to_right;
      else
        stay;
    }
    action {
      //go_to_ball_with_foot(right = false, distance = 130, offset.y=-20);
      go_to_ball_with_foot_dynamic(right = false, distance = 130, offset.y=-20);
    }
  }

  state sidekick_to_right{
    decision {
      if(action_done)
        goto done;
      else
        stay;
    }
    action {
      situation_abortable = false;
      sidekick(to = right);
    }
  }

  state sidekick_to_left {
    decision{
      if(action_done)
        goto done;
      else
        stay;
    }
    action {
      situation_abortable = false;
      sidekick(to = left);
    }
  }

  target state done
  {
    decision {
      stay;
    }
    action {
      //NOTE: this is synchronized with sidekick()->finished
      motion.type = stand;
    
  motion.walk.stop_with_stand = true;

      motion.walk.coordinate = hip;
      motion.walk.style = normal;

      //loook at percept
      head.control_mode = look_at_ball_percept;
    }
  }
}
