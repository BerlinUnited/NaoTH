/** Behavior that is common to all players (goalie, striker, defender, ...) */
option decide_role
{

  common decision 
  {
    /** Goalie */
    if(game.player_number == 1 && team.members_alive_count > 1) //become field player, when all others are "dead"
    {
      goto goalie;
    }
    /* fallback if everything else is broken */
    else if( (team.members_alive_count <= 1) || (team.calc_if_is_striker))
    {
      goto striker;
    }
    else if (team.calc_if_is_secondstriker) {
      goto secondstriker;
    }
    
    else if(true)
    {
      goto passive;
    }
  }

  // has to be initial state, otherwise there might be problems with role switching
  initial state idle{
    action
    {
      
    }
  }

  state goalie
  {
    action
    {
      situationStatusOwnHalf = true;
      team.is_playing_as_striker = false;
      ball_was_outside_circle = true;
      path_basic_goalie();
    }
  }

  state striker
  {
    action
    {
      team.is_playing_as_striker = true;
      ball_was_outside_circle = true;
      path_striker();
      //blinking
      set_left_ear = (platform.frameNumber % 3 == 0) ? 9 : 0;
      set_right_ear = (platform.frameNumber % 3 == 0) ? 9 : 0;
      set_head = (platform.frameNumber % 3 == 0) ? ((robot_pose.x < 0) ? 3 : 6) : 0;
      //for rotating
      //set_left_ear = platform.frameNumber % 10;
      //set_right_ear = platform.frameNumber % 10;
      //set_head = platform.frameNumber % 13;
    }
  }

  state secondstriker
  {
    action
    {
      team.is_playing_as_striker = false;
      ball_was_outside_circle = true;
      path_striker();
      
      //blinking
      set_left_ear = (platform.frameNumber % 3 == 0) ? 9 : 0;
      set_right_ear = (platform.frameNumber % 3 == 0) ? 9 : 0;
      set_head = 4;
      //for rotating
      //set_left_ear = platform.frameNumber % 10;
      //set_right_ear = platform.frameNumber % 10;
      //set_head = platform.frameNumber % 13;
    }
  }

  state passive
  {
    action
    {
      team.is_playing_as_striker = false;
      decide_and_go_to_passive_position();
    }
  }
  
}