option path_striker 
{

  common decision
  {
    if(!body.ready_to_walk || game.current_mode != playing)
      goto idle;
    else if(!game.state.playing_is_set_by_game_controller &&
           !game.own_kickoff && game.time_in_play < 10000)
      goto wait_for_ball_free;
    else if(situation_abortable && !ball.know_where_itis)//ball.time_since_last_seen > 1500)
      goto search;
    else if(situation_abortable && vector.abs(x=ball.preview.x, y=ball.preview.y) > 300)
      goto goto_ball;
  }

  state wait_for_ball_free {
    decision {
      else
        goto search;
    }
    action {
      motion.type = stand;
      head.control_mode = search_for_ball;
    }
  }

  initial state idle {
    decision {
      else
        goto search;
    }
    action {
      situation_abortable = true;
      team.is_playing_as_striker = false;
    }
  }

  state search {
    decision {
      else if(action_done)
        goto goto_ball;
      else
        stay;
    }
    action{
      situation_abortable = true;
      search_ball();
    }
  }

  state goto_ball {
    decision {

      else if(//action_done && state_time > 1000 &&
         ball.preview.x < 300 && abs(value = ball.preview.y) < 50)// && vector.abs(x=ball.speed.x, y=ball.speed.y) < 150)
      {
	      if(attack.best_action == kick_long)
	        goto long_kick;
	      else if(attack.best_action == kick_short)
        {
          if(random() > 0.3)
	          goto short_kick;
          else
            goto dash;
        }
	      else if(attack.best_action == sidekick_left)
	        goto sidekick_left;
	      else if(attack.best_action == sidekick_right)
	        goto sidekick_right;
	      else
	        goto turn;
      }
      else
        stay;
    }
    action{
      situation_abortable = true;
      /* this distance is smaller than the condition for ball.preview.x above
         possible unwanted behavior: the ball is closer than 250 but ball.preview.y is
         bigger than 50. The robot won't rotate in go_to_ball_with_USOA and will continue
         to walk to the position of the ball. Two possible outcomes:
         1. the robot runs into the ball (if ball distance is not considered)
         2. the robot will walk backwards in the successive approaching because it was too close
      */
      path_go_to_ball_with_USOA(distance = 190); 
    }
  }
  
  state turn {
    decision{
      else if(attack.best_action == kick_long)
        goto long_kick;
      else if(attack.best_action == kick_short)
      {
        if(random() > 0.3)
          goto short_kick;
        else
          goto dash;
      }
      else if(attack.best_action == sidekick_left)
        goto sidekick_left;
      else if(attack.best_action == sidekick_right)
        goto sidekick_right;
      else
        stay;
    }
    action{
      situation_abortable = true;
      path_turn_to_attack_direction();
    }
  }

  state sidekick_left {
    decision {
      else if(action_done)
        goto goto_ball;
      else
        stay;
    }
    action {
      situation_abortable = true;
      path_sidekick_left();
    }
  }
  state sidekick_right {
    decision {
      else if(action_done)
        goto goto_ball;
      else
        stay;
    }
    action {
      situation_abortable = true;
      path_sidekick_right();
    }
  }

  state long_kick {
    decision{
      else if(action_done)
        goto goto_ball;
      else
        stay;
    }
    action{
      situation_abortable = true;
      path_kick_long_with_approach();
    }
  }

  state short_kick {
    decision{
      else if(action_done)
        goto goto_ball;
      else
        stay;
    }
    action{
      situation_abortable = true;
      path_kick_short_with_approach();
    }
  }

  state dash {
    decision{
      else if(action_done)
        goto goto_ball;
      else
        stay;
    }
    action{
      situation_abortable = true;
      path_dash();
    }
  }


}
