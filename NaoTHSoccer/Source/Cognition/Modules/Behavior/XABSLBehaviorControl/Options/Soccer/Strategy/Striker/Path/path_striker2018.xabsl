option path_striker2018
{

  common decision
  {
    if(!body.ready_to_walk || game.current_mode != playing)
      goto idle;
    else if(!game.state.playing_is_set_by_game_controller &&
           !game.own_kickoff && game.time_in_play < 10000)
      goto wait_for_ball_free;
    else if(situation_abortable && !ball.know_where_itis)//ball.time_since_last_seen > 1500)
      goto search;
    else if(situation_abortable && vector.abs(x=ball.preview.x, y=ball.preview.y) > 300)
      goto decide;
  }

  state wait_for_ball_free {
    decision {
      else
        goto search;
    }
    action {
      motion.type = stand;
      head.control_mode = search_for_ball;
    }
  }

  initial state idle 
  {
    decision 
    {
      else
        goto search;
    }
    action 
    {
      situation_abortable = true;
      team.is_playing_as_striker = false;
      
      path2018.routine = none;
    }
  }

  state search 
  {
    decision 
    {
      else if(action_done)
        goto decide;
      else
        stay;
    }
    action
    {
      situation_abortable = true;
      search_ball();
    }
  }

  state decide
  {
    decision
    {
    // long kick is ignored/not included in action selection
    //else if(attack.best_action == kick_long)
    //    goto long_kick;
    else if(attack.best_action == kick_short)
    {
      if(true)//random() > 0.3) // TODO: look at dash state for explanation
      {
        if (ball.preview.y > 0)
          goto forwardkick_left;
        else
          goto forwardkick_right;
      }
      else
        goto dash;
    }
    else if(attack.best_action == sidekick_left)
      goto sidekick_left;
    else if(attack.best_action == sidekick_right)
      goto sidekick_right;
    else
      stay;
    }
    action
    {
      situation_abortable = true;
      
      // TODO: path_turn_to_attack_direction() should be moved to a new option
      //       PathPlanner2018 stuff was hacked in there
      path_turn_to_attack_direction();
    }
  }

  state forwardkick_right
  {
    decision
    {
      else if (path.kick_executed)
        goto short_freeze;
      else
        stay;
    }
    action
    {
      path2018.routine = forwardkick_right;
    }
  }
  
  state forwardkick_left
  {
    decision
    {
      else if (path.kick_executed)
        goto short_freeze;
      else
        stay;
    }
    action
    {
      path2018.routine = forwardkick_left;
    }
  }

  state sidekick_right
  {
    decision
    {
      else if (path.kick_executed)
        goto short_freeze;
      else
        stay;
    }
    action
    {
      path2018.routine = sidekick_right;
    }
  }
  
  state sidekick_left
  {
    decision
    {
      else if (path.kick_executed)
        goto short_freeze;
      else
        stay;
    }
    action
    {
      path2018.routine = sidekick_left;
    }
  }
  
  state short_freeze
  {
    decision
    {
      else if (state_time > 500)
        goto decide;
      else
        stay;
    }
    action
    {
      path2018.routine = none;
      
    }
  }

  state dash 
  {
    decision
    {
      else if(action_done)
        goto decide;
      else
        stay;
    }
    action
    {
      situation_abortable = true;
      path_dash();  // TODO: This currently works with the old pathplanner
      path2018.routine = none;
    }
  }
}
