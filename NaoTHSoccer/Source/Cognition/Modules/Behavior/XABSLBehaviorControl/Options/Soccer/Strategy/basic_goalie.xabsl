option basic_goalie
{
  common decision
  {
    if(!body.ready_to_walk || game.current_mode != playing)
      goto idle;
  }

  initial state idle {
    decision {
      else if(game.current_mode == playing)
        goto go_to_strategy_point;
      else
        stay;
    }
    action {
      
    }
  }


  state go_to_strategy_point
  {
     decision 
     {
       else if (ball.distance < 1500 && ball.time_since_last_seen < 1000
               && ball.position.field.x < -4000)
         goto clear_ball;
       else if (action_done)
       {
         goto stand_and_look_at_ball;
       } else 
         stay;
     }
     action {
       //go_to_point(x=field.xPosOwnGroundline + 200, y=0,rot=0);
       go_to_point_with_USOA(x=field.xPosOwnGroundline + 200, y=0,rot=0);
       head.control_mode = search_for_goal;
     }
  }

  state stand_and_look_at_ball {
	  decision {
      else if (ball.distance < 1500 && ball.time_since_last_seen < 1000)
        goto clear_ball;
      else if ((ball.distance < 4000) && (normalize(angle=atan2(y = ball.preview.y, x = ball.preview.x)) > 10))
         goto rotate;
      else if (ball.time_since_last_seen > 1000)
        goto go_to_strategy_point;
      else 
        stay;
	  }
	  action {
      motion.type = stand;
      head.control_mode = search_for_ball_goalie;
	  }
	}  

  state rotate {
    decision {
      else if (ball.time_seen > 3000)
        goto go_to_strategy_point;
      else if (normalize(angle=atan2(y = ball.preview.y, x = ball.preview.x)) < 5)
        goto stand_and_look_at_ball;
      else 
        stay;
    }
    action {
      motion.type = walk;
      motion.walk_speed.x = 0;
      motion.walk_speed.y = 0;
      motion.walk.coordinate = hip;

      motion.walk_speed.rot = normalize(angle=atan2(y = ball.preview.y, x = ball.preview.x));
 
      head.control_mode = search_for_ball_goalie;
    }
  }

  state clear_ball {   
   decision {
       else if (action_done 
           || (ball.distance > 1500 && ball.time_since_last_seen < 1000)
           || (ball.time_since_last_seen > 2000)
           || ball.position.field.x > field.xPosOwnPenaltyArea + 1000)
       {
         goto go_to_strategy_point;
       }
       else stay;
     }
     action {
       team.is_playing_as_striker = true;
       //basic_striker_behavior();
       situation_based_striker();
     }
  }
  
}