option positioning_for_own_kickoff
{
  initial state check_player_number
  {
    decision{
      if(game.player_number == 1)
          goto goto_own_kickoff_position_goalie;
      else if(game.player_number == 2)
          goto goto_own_kickoff_position_supporter2;
      else if(game.player_number == 3)
          goto goto_own_kickoff_position_striker;
      else if(game.player_number == 4)
          goto goto_own_kickoff_position_defender;          
      else if(game.player_number == 5)
          goto goto_own_kickoff_position_supporter;
      else
          stay;
    }
    action {
      head.control_mode = look_around;
      motion.type = stand;
    }
  }

  state goto_own_kickoff_position_goalie
  {
    decision {
      if(action_done)
        goto arrived;
      else
        stay;
    }
    action {
     //go_to_point_with_USOA(x=-4400, y=0, rot=0);
     //x=field.xPosOwnGroundline+Z? da sonst genau auf der Linie steht
      //und das eher so semi cool ist, aber dann sieht er vielleicht nicht ein ball
      //der genau auf der Linie ist
      go_to_point_with_USOA(x=field.xPosOwnGroundline + 200, y=0, rot=0);
      //head.control_mode = search_for_goal;
      head.control_mode = search_for_goal_opp;
      motion.walk.style = stable;
    }
  }

  state goto_own_kickoff_position_supporter2
  {
    decision {
      if(action_done)
        goto arrived;
      else
        stay;
    }
    action
    {
      
//go_to_point_with_USOA(x=-2500, y=-900, rot=0);
      go_to_point_with_USOA(
        x=field.xPosOwnPenaltyMark + 500, 
        y=field.yPosLeftGoal-400,
        rot=0);
      head.control_mode = look_around;
    }
  }
  
  state goto_own_kickoff_position_striker
  {
    decision {
      if(action_done)
        goto arrived;
      else
        stay;
    }
    action
    {
      //go_to_point_with_USOA(x=-500, y=300, rot=-5);
      //300 is the assumed margin of error, should prevent robot from stepping into circle
      go_to_point_with_USOA(x=-400, y=0, rot=0);
      head.control_mode = look_around;
    }
  }

  state goto_own_kickoff_position_defender
  {
    decision {
      if(action_done)
        goto arrived;
      else
        stay;
    }
    action
    {
      //go_to_point_with_USOA(x=-1000, y=-2000, rot=10);
      go_to_point_with_USOA(
        x=(field.xPosOwnPenaltyArea+field.xPosOwnPenaltyMark)/2, 
        y=field.yPosRightGoal+400, 
        rot=0);
      head.control_mode = look_around;

    }
  }

  state goto_own_kickoff_position_supporter
  {
    decision {
      if(action_done)
        goto arrived;
      else
        stay;
    }
    action
    {
      //go_to_point_with_USOA(x=-2500, y=900, rot=0);
       go_to_point_with_USOA(
         x=(field.xPosOwnPenaltyMark-field.centerCircleRadius)/2, 
         y=-field.centerCircleRadius, 
         rot=10);
      head.control_mode = look_around;
    }
  }
  
  target state arrived{
    action {
      head.control_mode = look_around;
      motion.type = stand;
    }
  }
}