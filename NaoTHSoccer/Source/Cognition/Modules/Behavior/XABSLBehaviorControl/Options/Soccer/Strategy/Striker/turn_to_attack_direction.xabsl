option turn_to_attack_direction
{
  initial state decide {
    decision{
      if(attack.direction.preview > 0)
        goto turn_right_around;
      else
        goto turn_left_around;
    }
    action{
    }
  }

  state turn_right_around {
    decision {
      stay;
    }
    action {
      //move_around_ball(direction=30, radius=210);
      //motion.walk.style = fast;
      
      path.type = path.type.move_around_ball;
      path.move_around_ball_direction = 30;
      path.move_around_ball_radius = 210;
    }
  }

  state turn_left_around {
    decision {
      stay;
    }
    action {
      //move_around_ball(direction=-30, radius=210);
      //motion.walk.style = fast;
      
      path.type = path.type.move_around_ball;
      path.move_around_ball_direction = -30;
      path.move_around_ball_radius = 210;
    }
  }

}
