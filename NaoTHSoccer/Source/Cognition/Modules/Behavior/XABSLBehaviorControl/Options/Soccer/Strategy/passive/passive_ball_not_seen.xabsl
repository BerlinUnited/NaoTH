option passive_ball_not_seen
{

  common decision 
  {
    if(ball.know_where_itis)
      goto turn_to_ball;
  }

  initial state look_around
  {
    decision {
      else if(state_time > 1000){
          if (ball.team.is_valid) {
            // if we got a 'valid' team ball - turn to and look at
            goto look_at_team_ball;
          } else {
            // TODO: using ball.team.rmse might be beneficial
            if(atan2(y=ball.preview.y,x=ball.preview.x) < 0)
	            goto turn_to_right;
	          else
	            goto turn_to_left;
          }
      }
      else
        stay;
    }
    action {
      head.control_mode = search_for_ball;
      motion.type = stand;
      // reset the state-change-counter
      search_ball.turn_stop_motion_count = 0;
    }
  }

  state look_at_team_ball
  {
	  decision
	  {
      else if(action_done){
        // turn in same direction if the ball wasn't seen
        if(atan2(y=ball.team.position.y, x=ball.team.position.x) > 0)
          goto turn_to_left;
        else
          goto turn_to_right;
      } else 
        stay;
	  }
	  
	  action
	  {
      passive_look_at_team_ball();
	  }
  }

  state turn_to_left {
    decision {
      /* stop turning, if robot should at least look around for more than 1s */
      else if(state_time > 2500 &&(look_in_direction_factor * 10000) > 1000) {
        //goto look_around_left;
        goto state_change_left;
      } else
        stay;
    }
    action {
      motion.type=walk;
      motion.walk_speed.x=0;
      motion.walk_speed.y=0;
      motion.walk_speed.rot= 20; //90
      head.control_mode = search_for_ball;      
    }
  }

  state turn_to_right {
    decision {
      /* stop turning, if robot should at least look around for more than 1s */
      else if(state_time > 2500 && (look_in_direction_factor * 10000) > 1000) {
       //goto look_around_right;
        goto state_change_right;
      } else
        stay;
    }
    action {
      motion.type=walk;
      motion.walk_speed.x=0;
      motion.walk_speed.y=0;
      motion.walk_speed.rot= -20;
 //-90
      head.control_mode = search_for_ball;      
    }
  }

  state state_change_right {
    decision {
      else if(search_ball.turn_stop_motion_count >= 4)
        goto look_around;
      else
        goto look_around_right;
    }
    action {
      // update counter
      search_ball.turn_stop_motion_count = search_ball.turn_stop_motion_count + 1;
    }
  }
  
  state state_change_left {
    decision {
      else if(search_ball.turn_stop_motion_count >= 4)
        goto look_around;
      else
        goto look_around_left;
    }
    action {
      // update counter
      search_ball.turn_stop_motion_count = search_ball.turn_stop_motion_count + 1;
      head.control_mode = search_for_ball;
    }
  }

  state look_around_left {
    decision {
      else if(state_time > (look_in_direction_factor * 10000)){
          goto turn_to_left;
      }
      else
        stay;
    }
    action {
      head.control_mode = search_for_ball;
      motion.type = stand;
    }
  }

  state look_around_right {
    decision {
      else if(state_time > (look_in_direction_factor * 10000)){
          goto turn_to_right;
      }
      else
        stay;
    }
    action {
      head.control_mode = search_for_ball;
      motion.type = stand;
    }
  }

  target state turn_to_ball 
  {
    decision {
      else if(ball.time_since_last_seen > 1000)
        goto look_around;
      else
        stay;
    }
    action {
      motion.type=walk;
      motion.walk_speed.x=0;
      motion.walk_speed.y=0;
      motion.walk_speed.rot=atan2(y=ball.preview.y, x=ball.preview.x);
      head.control_mode = search_for_ball;
    }
  }
}