option role_default
{
  common decision
  {
    if(!body.ready_to_walk)
      goto idle;
    else if(   !game.state.playing_is_set_by_game_controller // heard whistle
            && !game.own_kickoff                             // opponent kickoff
            && game.time_in_play < 10000                     // wait for ball free time
            // if we see the ball outside the centercircle, the ball is free!
            && ((ball.know_where_itis && (abs(value=ball.position.field.x) <= (field.centerCircleRadius+200) && abs(value=ball.position.field.y) <= (field.centerCircleRadius+200))) || !ball.know_where_itis)
         )
      goto wait_for_ball_free;
  }

  initial state idle {
    decision {
      else
        goto decide_subrole_or_passive;
    }
    action { /* do nothing */ }
  }

  state decide_subrole_or_passive
  {
    decision {
      else if(strategy.role_dynamic == striker)
        goto striker_subrole;
      else if(strategy.role_dynamic == goalie_supporter)
        // TODO: implement usefull behavior for the goalie supporter
        // NOTE: be aware of the transition between different subroles and the passive behavior!
        stay;
      else if(strategy.role_dynamic == supporter)
        // TODO: implement usefull behavior for the supporter
        // NOTE: be aware of the transition between different subroles and the passive behavior!
        stay;
      else 
        stay;
    }
    action {
      strategy.role_dynamic_last = none;
      roles_go_to_passive_position();
    }
  }

  state wait_for_ball_free
  {
    decision {
      // opposite of the common decision in order to leave this state earlier
      else if( !(!game.state.playing_is_set_by_game_controller // heard whistle
              && !game.own_kickoff                             // opponent kickoff
              && game.time_in_play < 10000                     // wait for ball free time
              // if we see the ball outside the centercircle, the ball is free!
              && ((ball.know_where_itis && (abs(value=ball.position.field.x) <= (field.centerCircleRadius+200) && abs(value=ball.position.field.y) <= (field.centerCircleRadius+200))) || !ball.know_where_itis)
              ))
        goto decide_subrole_or_passive;
      else
        stay;
    }
    action {
      motion.type = stand;
      head.control_mode = search_for_ball;
    }
  }

  // IMPORTANT: the transition from another subrole to the passive behavior
  state subrole_transition
  {
    decision {
      // i was striker and now not any more
      else if(strategy.role_dynamic_last == striker && strategy.role_dynamic == none) {
        // do i lost the ball, or was is a role switch?
        if(ball.know_where_itis) {
          // role switch
          goto subrole_transition_striker_none_ball;
        } else {
          // lost the ball
          goto subrole_transition_striker_none_search;
        }
      } else {
        // NOTE: other subroles transition have currently no special behavior
        goto decide_subrole_or_passive;
      }
    }
    action {}
  }

  state striker_subrole
  {
    decision {
      else if(strategy.role_dynamic != striker) {
        goto subrole_transition;
      } else {
        stay;
      }
    }
    action {
      strategy.role_dynamic_last = striker;
      head.control_mode = search_for_ball;

      path_striker2018();
      
      //blinking
      set_left_ear = (platform.frameNumber % 3 == 0) ? 9 : 0;
      set_right_ear = (platform.frameNumber % 3 == 0) ? 9 : 0;
      set_head = (platform.frameNumber % 3 == 0) ? ((robot_pose.x < 0) ? 3 : 6) : 0;
      //for rotating
      //set_left_ear = platform.frameNumber % 10;
      //set_right_ear = platform.frameNumber % 10;
      //set_head = platform.frameNumber % 13;
    }
  }

  //
  state subrole_transition_striker_none_ball
  {
    decision {
      else if(strategy.role_dynamic != none || state_time > 5000) { // 5s
        goto decide_subrole_or_passive;
      } else {
        stay;
      }
    }
    action {
      head.control_mode = search_for_ball;
      motion.type = stand;
    }
  }

  // the search for ball behavior should be especially used from the striker to passive!
  state subrole_transition_striker_none_search
  {
    decision {
      // search for maximum 10s
      else if (action_done || state_time > 10000 || strategy.role_dynamic != none)
        goto decide_subrole_or_passive;
      else
        stay;
    }
    action {
      search_ball();
      motion.walk.style = stable;
    }
  }
}