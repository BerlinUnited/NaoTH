/* Tests the omnidirectional kick */

option omnidirectional_kick_test
{
  common decision
  {
    if(!body.ready_to_walk || game.current_mode != playing)
      goto idle;
  }
  

  initial state idle
  {
    decision
    {
      else if(game.current_mode == playing)
        goto go_to_ball_right_foot;
      else
        stay;
    }
    action
    {
    }
  }

  state kick_right_foot
  {
    decision
    {
      else if(action_done)
        goto go_to_ball_left_foot;
      else
        stay;
    }
    action 
    {
      kick_ball_with_foot(direction = 0, right = true);
    }
  }

  state kick_left_foot
  {
    decision
    {
      else if(action_done)
        goto go_to_ball_right_foot;
      else
        stay;
    }
    action 
    {
      kick_ball_with_foot(direction = 0, right = false);
    }
  }

  state go_to_ball_right_foot
  {
    decision
    {
      else if(abs(value = (ball.preview.right_foot.x - 170 - ball.radius)) < 20
        && abs(value = ball.preview.right_foot.y) < 20
        && vector.abs(x=ball.speed.x, y=ball.speed.y) < 30)
        goto kick_right_foot;
      else
        stay;
    }
    action 
    {
      head.control_mode = search_for_ball;
      motion.type = walk;
      
      motion.walk.coordinate = right_foot;
      motion.walk.style = normal;

      motion.walk_speed.x = 0.7*(ball.preview.right_foot.x - 170 - ball.radius);
      motion.walk_speed.y = ball.preview.right_foot.y;
      motion.walk_speed.rot = atan2(y = ball.preview.right_foot.y, x = ball.preview.right_foot.x);
    }
  }

  state go_to_ball_left_foot
  {
    decision
    {
      else if(abs(value = (ball.preview.left_foot.x - 170 - ball.radius)) < 20
        && abs(value = ball.preview.left_foot.y) < 20
        && vector.abs(x=ball.speed.x, y=ball.speed.y) < 30)
        goto kick_left_foot;
      else
        stay;
    }
    action 
    {
      head.control_mode = search_for_ball;
      motion.type = walk;
      
      motion.walk.coordinate = left_foot;
      motion.walk.style = normal;

      motion.walk_speed.x = 0.7*(ball.preview.left_foot.x - 170 - ball.radius);
      motion.walk_speed.y = ball.preview.left_foot.y;
      motion.walk_speed.rot = atan2(y = ball.preview.left_foot.y, x = ball.preview.left_foot.x);
    }
  }
}