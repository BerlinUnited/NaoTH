// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonTypes.proto

#ifndef PROTOBUF_CommonTypes_2eproto__INCLUDED
#define PROTOBUF_CommonTypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace naothmessages {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CommonTypes_2eproto();
void protobuf_AssignDesc_CommonTypes_2eproto();
void protobuf_ShutdownFile_CommonTypes_2eproto();

class Pose3D;
class DoubleVector;
class DoubleVector3;

// ===================================================================

class Pose3D : public ::google::protobuf::Message {
 public:
  Pose3D();
  virtual ~Pose3D();
  
  Pose3D(const Pose3D& from);
  
  inline Pose3D& operator=(const Pose3D& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Pose3D& default_instance();
  
  void Swap(Pose3D* other);
  
  // implements Message ----------------------------------------------
  
  Pose3D* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pose3D& from);
  void MergeFrom(const Pose3D& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .naothmessages.DoubleVector3 translation = 1;
  inline bool has_translation() const;
  inline void clear_translation();
  static const int kTranslationFieldNumber = 1;
  inline const ::naothmessages::DoubleVector3& translation() const;
  inline ::naothmessages::DoubleVector3* mutable_translation();
  
  // repeated .naothmessages.DoubleVector3 rotation = 2;
  inline int rotation_size() const;
  inline void clear_rotation();
  static const int kRotationFieldNumber = 2;
  inline const ::naothmessages::DoubleVector3& rotation(int index) const;
  inline ::naothmessages::DoubleVector3* mutable_rotation(int index);
  inline ::naothmessages::DoubleVector3* add_rotation();
  inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector3 >&
      rotation() const;
  inline ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector3 >*
      mutable_rotation();
  
  // @@protoc_insertion_point(class_scope:naothmessages.Pose3D)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::naothmessages::DoubleVector3* translation_;
  ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector3 > rotation_;
  friend void  protobuf_AddDesc_CommonTypes_2eproto();
  friend void protobuf_AssignDesc_CommonTypes_2eproto();
  friend void protobuf_ShutdownFile_CommonTypes_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Pose3D* default_instance_;
};
// -------------------------------------------------------------------

class DoubleVector : public ::google::protobuf::Message {
 public:
  DoubleVector();
  virtual ~DoubleVector();
  
  DoubleVector(const DoubleVector& from);
  
  inline DoubleVector& operator=(const DoubleVector& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleVector& default_instance();
  
  void Swap(DoubleVector* other);
  
  // implements Message ----------------------------------------------
  
  DoubleVector* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleVector& from);
  void MergeFrom(const DoubleVector& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated double v = 1;
  inline int v_size() const;
  inline void clear_v();
  static const int kVFieldNumber = 1;
  inline double v(int index) const;
  inline void set_v(int index, double value);
  inline void add_v(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      v() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_v();
  
  // @@protoc_insertion_point(class_scope:naothmessages.DoubleVector)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< double > v_;
  friend void  protobuf_AddDesc_CommonTypes_2eproto();
  friend void protobuf_AssignDesc_CommonTypes_2eproto();
  friend void protobuf_ShutdownFile_CommonTypes_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DoubleVector* default_instance_;
};
// -------------------------------------------------------------------

class DoubleVector3 : public ::google::protobuf::Message {
 public:
  DoubleVector3();
  virtual ~DoubleVector3();
  
  DoubleVector3(const DoubleVector3& from);
  
  inline DoubleVector3& operator=(const DoubleVector3& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleVector3& default_instance();
  
  void Swap(DoubleVector3* other);
  
  // implements Message ----------------------------------------------
  
  DoubleVector3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleVector3& from);
  void MergeFrom(const DoubleVector3& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required double x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline double x() const;
  inline void set_x(double value);
  
  // required double y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline double y() const;
  inline void set_y(double value);
  
  // required double z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline double z() const;
  inline void set_z(double value);
  
  // @@protoc_insertion_point(class_scope:naothmessages.DoubleVector3)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  double x_;
  double y_;
  double z_;
  friend void  protobuf_AddDesc_CommonTypes_2eproto();
  friend void protobuf_AssignDesc_CommonTypes_2eproto();
  friend void protobuf_ShutdownFile_CommonTypes_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DoubleVector3* default_instance_;
};
// ===================================================================


// ===================================================================

// Pose3D

// required .naothmessages.DoubleVector3 translation = 1;
inline bool Pose3D::has_translation() const {
  return _has_bit(0);
}
inline void Pose3D::clear_translation() {
  if (translation_ != NULL) translation_->::naothmessages::DoubleVector3::Clear();
  _clear_bit(0);
}
inline const ::naothmessages::DoubleVector3& Pose3D::translation() const {
  return translation_ != NULL ? *translation_ : *default_instance_->translation_;
}
inline ::naothmessages::DoubleVector3* Pose3D::mutable_translation() {
  _set_bit(0);
  if (translation_ == NULL) translation_ = new ::naothmessages::DoubleVector3;
  return translation_;
}

// repeated .naothmessages.DoubleVector3 rotation = 2;
inline int Pose3D::rotation_size() const {
  return rotation_.size();
}
inline void Pose3D::clear_rotation() {
  rotation_.Clear();
}
inline const ::naothmessages::DoubleVector3& Pose3D::rotation(int index) const {
  return rotation_.Get(index);
}
inline ::naothmessages::DoubleVector3* Pose3D::mutable_rotation(int index) {
  return rotation_.Mutable(index);
}
inline ::naothmessages::DoubleVector3* Pose3D::add_rotation() {
  return rotation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector3 >&
Pose3D::rotation() const {
  return rotation_;
}
inline ::google::protobuf::RepeatedPtrField< ::naothmessages::DoubleVector3 >*
Pose3D::mutable_rotation() {
  return &rotation_;
}

// -------------------------------------------------------------------

// DoubleVector

// repeated double v = 1;
inline int DoubleVector::v_size() const {
  return v_.size();
}
inline void DoubleVector::clear_v() {
  v_.Clear();
}
inline double DoubleVector::v(int index) const {
  return v_.Get(index);
}
inline void DoubleVector::set_v(int index, double value) {
  v_.Set(index, value);
}
inline void DoubleVector::add_v(double value) {
  v_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
DoubleVector::v() const {
  return v_;
}
inline ::google::protobuf::RepeatedField< double >*
DoubleVector::mutable_v() {
  return &v_;
}

// -------------------------------------------------------------------

// DoubleVector3

// required double x = 1;
inline bool DoubleVector3::has_x() const {
  return _has_bit(0);
}
inline void DoubleVector3::clear_x() {
  x_ = 0;
  _clear_bit(0);
}
inline double DoubleVector3::x() const {
  return x_;
}
inline void DoubleVector3::set_x(double value) {
  _set_bit(0);
  x_ = value;
}

// required double y = 2;
inline bool DoubleVector3::has_y() const {
  return _has_bit(1);
}
inline void DoubleVector3::clear_y() {
  y_ = 0;
  _clear_bit(1);
}
inline double DoubleVector3::y() const {
  return y_;
}
inline void DoubleVector3::set_y(double value) {
  _set_bit(1);
  y_ = value;
}

// required double z = 3;
inline bool DoubleVector3::has_z() const {
  return _has_bit(2);
}
inline void DoubleVector3::clear_z() {
  z_ = 0;
  _clear_bit(2);
}
inline double DoubleVector3::z() const {
  return z_;
}
inline void DoubleVector3::set_z(double value) {
  _set_bit(2);
  z_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace naothmessages

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CommonTypes_2eproto__INCLUDED
