// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameInfo.proto

#ifndef PROTOBUF_FrameInfo_2eproto__INCLUDED
#define PROTOBUF_FrameInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace naothmessages {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FrameInfo_2eproto();
void protobuf_AssignDesc_FrameInfo_2eproto();
void protobuf_ShutdownFile_FrameInfo_2eproto();

class FrameInfo;

// ===================================================================

class FrameInfo : public ::google::protobuf::Message {
 public:
  FrameInfo();
  virtual ~FrameInfo();
  
  FrameInfo(const FrameInfo& from);
  
  inline FrameInfo& operator=(const FrameInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameInfo& default_instance();
  
  void Swap(FrameInfo* other);
  
  // implements Message ----------------------------------------------
  
  FrameInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FrameInfo& from);
  void MergeFrom(const FrameInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 frameNumber = 1;
  inline bool has_framenumber() const;
  inline void clear_framenumber();
  static const int kFrameNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 framenumber() const;
  inline void set_framenumber(::google::protobuf::uint32 value);
  
  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:naothmessages.FrameInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 framenumber_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_FrameInfo_2eproto();
  friend void protobuf_AssignDesc_FrameInfo_2eproto();
  friend void protobuf_ShutdownFile_FrameInfo_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FrameInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// FrameInfo

// optional uint32 frameNumber = 1;
inline bool FrameInfo::has_framenumber() const {
  return _has_bit(0);
}
inline void FrameInfo::clear_framenumber() {
  framenumber_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 FrameInfo::framenumber() const {
  return framenumber_;
}
inline void FrameInfo::set_framenumber(::google::protobuf::uint32 value) {
  _set_bit(0);
  framenumber_ = value;
}

// optional uint32 time = 2;
inline bool FrameInfo::has_time() const {
  return _has_bit(1);
}
inline void FrameInfo::clear_time() {
  time_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 FrameInfo::time() const {
  return time_;
}
inline void FrameInfo::set_time(::google::protobuf::uint32 value) {
  _set_bit(1);
  time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace naothmessages

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FrameInfo_2eproto__INCLUDED
